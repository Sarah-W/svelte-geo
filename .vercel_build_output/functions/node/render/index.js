var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name3 in all)
    __defProp(target, name3, { get: all[name3], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/@sveltejs/kit/dist/install-fetch.js
function dataUriToBuffer(uri) {
  if (!/^data:/i.test(uri)) {
    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  }
  uri = uri.replace(/\r?\n/g, "");
  const firstComma = uri.indexOf(",");
  if (firstComma === -1 || firstComma <= 4) {
    throw new TypeError("malformed data: URI");
  }
  const meta = uri.substring(5, firstComma).split(";");
  let charset = "";
  let base64 = false;
  const type3 = meta[0] || "text/plain";
  let typeFull = type3;
  for (let i = 1; i < meta.length; i++) {
    if (meta[i] === "base64") {
      base64 = true;
    } else {
      typeFull += `;${meta[i]}`;
      if (meta[i].indexOf("charset=") === 0) {
        charset = meta[i].substring(8);
      }
    }
  }
  if (!meta[0] && !charset.length) {
    typeFull += ";charset=US-ASCII";
    charset = "US-ASCII";
  }
  const encoding = base64 ? "base64" : "ascii";
  const data = unescape(uri.substring(firstComma + 1));
  const buffer = Buffer.from(data, encoding);
  buffer.type = type3;
  buffer.typeFull = typeFull;
  buffer.charset = charset;
  return buffer;
}
async function* toIterator(parts, clone2 = true) {
  for (const part of parts) {
    if ("stream" in part) {
      yield* part.stream();
    } else if (ArrayBuffer.isView(part)) {
      if (clone2) {
        let position = part.byteOffset;
        const end = part.byteOffset + part.byteLength;
        while (position !== end) {
          const size = Math.min(end - position, POOL_SIZE);
          const chunk = part.buffer.slice(position, position + size);
          position += chunk.byteLength;
          yield new Uint8Array(chunk);
        }
      } else {
        yield part;
      }
    } else {
      let position = 0;
      while (position !== part.size) {
        const chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));
        const buffer = await chunk.arrayBuffer();
        position += buffer.byteLength;
        yield new Uint8Array(buffer);
      }
    }
  }
}
function isFormData(object2) {
  return typeof object2 === "object" && typeof object2.append === "function" && typeof object2.set === "function" && typeof object2.get === "function" && typeof object2.getAll === "function" && typeof object2.delete === "function" && typeof object2.keys === "function" && typeof object2.values === "function" && typeof object2.entries === "function" && typeof object2.constructor === "function" && object2[NAME] === "FormData";
}
function getHeader(boundary, name3, field) {
  let header = "";
  header += `${dashes}${boundary}${carriage}`;
  header += `Content-Disposition: form-data; name="${name3}"`;
  if (isBlob(field)) {
    header += `; filename="${field.name}"${carriage}`;
    header += `Content-Type: ${field.type || "application/octet-stream"}`;
  }
  return `${header}${carriage.repeat(2)}`;
}
async function* formDataIterator(form, boundary) {
  for (const [name3, value] of form) {
    yield getHeader(boundary, name3, value);
    if (isBlob(value)) {
      yield* value.stream();
    } else {
      yield value;
    }
    yield carriage;
  }
  yield getFooter(boundary);
}
function getFormDataLength(form, boundary) {
  let length = 0;
  for (const [name3, value] of form) {
    length += Buffer.byteLength(getHeader(boundary, name3, value));
    length += isBlob(value) ? value.size : Buffer.byteLength(String(value));
    length += carriageLength;
  }
  length += Buffer.byteLength(getFooter(boundary));
  return length;
}
async function consumeBody(data) {
  if (data[INTERNALS$2].disturbed) {
    throw new TypeError(`body used already for: ${data.url}`);
  }
  data[INTERNALS$2].disturbed = true;
  if (data[INTERNALS$2].error) {
    throw data[INTERNALS$2].error;
  }
  let { body } = data;
  if (body === null) {
    return Buffer.alloc(0);
  }
  if (isBlob(body)) {
    body = import_stream.default.Readable.from(body.stream());
  }
  if (Buffer.isBuffer(body)) {
    return body;
  }
  if (!(body instanceof import_stream.default)) {
    return Buffer.alloc(0);
  }
  const accum = [];
  let accumBytes = 0;
  try {
    for await (const chunk of body) {
      if (data.size > 0 && accumBytes + chunk.length > data.size) {
        const error2 = new FetchError(`content size at ${data.url} over limit: ${data.size}`, "max-size");
        body.destroy(error2);
        throw error2;
      }
      accumBytes += chunk.length;
      accum.push(chunk);
    }
  } catch (error2) {
    const error_ = error2 instanceof FetchBaseError ? error2 : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error2.message}`, "system", error2);
    throw error_;
  }
  if (body.readableEnded === true || body._readableState.ended === true) {
    try {
      if (accum.every((c) => typeof c === "string")) {
        return Buffer.from(accum.join(""));
      }
      return Buffer.concat(accum, accumBytes);
    } catch (error2) {
      throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error2.message}`, "system", error2);
    }
  } else {
    throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);
  }
}
function fromRawHeaders(headers = []) {
  return new Headers(headers.reduce((result, value, index, array2) => {
    if (index % 2 === 0) {
      result.push(array2.slice(index, index + 2));
    }
    return result;
  }, []).filter(([name3, value]) => {
    try {
      validateHeaderName(name3);
      validateHeaderValue(name3, String(value));
      return true;
    } catch {
      return false;
    }
  }));
}
async function fetch(url, options_) {
  return new Promise((resolve2, reject) => {
    const request = new Request(url, options_);
    const options2 = getNodeRequestOptions(request);
    if (!supportedSchemas.has(options2.protocol)) {
      throw new TypeError(`node-fetch cannot load ${url}. URL scheme "${options2.protocol.replace(/:$/, "")}" is not supported.`);
    }
    if (options2.protocol === "data:") {
      const data = dataUriToBuffer$1(request.url);
      const response2 = new Response(data, { headers: { "Content-Type": data.typeFull } });
      resolve2(response2);
      return;
    }
    const send = (options2.protocol === "https:" ? import_https.default : import_http.default).request;
    const { signal } = request;
    let response = null;
    const abort = () => {
      const error2 = new AbortError("The operation was aborted.");
      reject(error2);
      if (request.body && request.body instanceof import_stream.default.Readable) {
        request.body.destroy(error2);
      }
      if (!response || !response.body) {
        return;
      }
      response.body.emit("error", error2);
    };
    if (signal && signal.aborted) {
      abort();
      return;
    }
    const abortAndFinalize = () => {
      abort();
      finalize();
    };
    const request_ = send(options2);
    if (signal) {
      signal.addEventListener("abort", abortAndFinalize);
    }
    const finalize = () => {
      request_.abort();
      if (signal) {
        signal.removeEventListener("abort", abortAndFinalize);
      }
    };
    request_.on("error", (error2) => {
      reject(new FetchError(`request to ${request.url} failed, reason: ${error2.message}`, "system", error2));
      finalize();
    });
    fixResponseChunkedTransferBadEnding(request_, (error2) => {
      response.body.destroy(error2);
    });
    if (process.version < "v14") {
      request_.on("socket", (s2) => {
        let endedWithEventsCount;
        s2.prependListener("end", () => {
          endedWithEventsCount = s2._eventsCount;
        });
        s2.prependListener("close", (hadError) => {
          if (response && endedWithEventsCount < s2._eventsCount && !hadError) {
            const error2 = new Error("Premature close");
            error2.code = "ERR_STREAM_PREMATURE_CLOSE";
            response.body.emit("error", error2);
          }
        });
      });
    }
    request_.on("response", (response_) => {
      request_.setTimeout(0);
      const headers = fromRawHeaders(response_.rawHeaders);
      if (isRedirect(response_.statusCode)) {
        const location = headers.get("Location");
        const locationURL = location === null ? null : new URL(location, request.url);
        switch (request.redirect) {
          case "error":
            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect"));
            finalize();
            return;
          case "manual":
            if (locationURL !== null) {
              headers.set("Location", locationURL);
            }
            break;
          case "follow": {
            if (locationURL === null) {
              break;
            }
            if (request.counter >= request.follow) {
              reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect"));
              finalize();
              return;
            }
            const requestOptions = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: request.body,
              signal: request.signal,
              size: request.size
            };
            if (response_.statusCode !== 303 && request.body && options_.body instanceof import_stream.default.Readable) {
              reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
              finalize();
              return;
            }
            if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") {
              requestOptions.method = "GET";
              requestOptions.body = void 0;
              requestOptions.headers.delete("content-length");
            }
            resolve2(fetch(new Request(locationURL, requestOptions)));
            finalize();
            return;
          }
          default:
            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      if (signal) {
        response_.once("end", () => {
          signal.removeEventListener("abort", abortAndFinalize);
        });
      }
      let body = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
      if (process.version < "v12.10") {
        response_.on("aborted", abortAndFinalize);
      }
      const responseOptions = {
        url: request.url,
        status: response_.statusCode,
        statusText: response_.statusMessage,
        headers,
        size: request.size,
        counter: request.counter,
        highWaterMark: request.highWaterMark
      };
      const codings = headers.get("Content-Encoding");
      if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      const zlibOptions = {
        flush: import_zlib.default.Z_SYNC_FLUSH,
        finishFlush: import_zlib.default.Z_SYNC_FLUSH
      };
      if (codings === "gzip" || codings === "x-gzip") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createGunzip(zlibOptions), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      if (codings === "deflate" || codings === "x-deflate") {
        const raw = (0, import_stream.pipeline)(response_, new import_stream.PassThrough(), reject);
        raw.once("data", (chunk) => {
          body = (chunk[0] & 15) === 8 ? (0, import_stream.pipeline)(body, import_zlib.default.createInflate(), reject) : (0, import_stream.pipeline)(body, import_zlib.default.createInflateRaw(), reject);
          response = new Response(body, responseOptions);
          resolve2(response);
        });
        return;
      }
      if (codings === "br") {
        body = (0, import_stream.pipeline)(body, import_zlib.default.createBrotliDecompress(), reject);
        response = new Response(body, responseOptions);
        resolve2(response);
        return;
      }
      response = new Response(body, responseOptions);
      resolve2(response);
    });
    writeToStream(request_, request);
  });
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
  const LAST_CHUNK = Buffer.from("0\r\n\r\n");
  let isChunkedTransfer = false;
  let properLastChunkReceived = false;
  let previousChunk;
  request.on("response", (response) => {
    const { headers } = response;
    isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
  });
  request.on("socket", (socket) => {
    const onSocketClose = () => {
      if (isChunkedTransfer && !properLastChunkReceived) {
        const error2 = new Error("Premature close");
        error2.code = "ERR_STREAM_PREMATURE_CLOSE";
        errorCallback(error2);
      }
    };
    socket.prependListener("close", onSocketClose);
    request.on("abort", () => {
      socket.removeListener("close", onSocketClose);
    });
    socket.on("data", (buf) => {
      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;
      if (!properLastChunkReceived && previousChunk) {
        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;
      }
      previousChunk = buf;
    });
  });
}
var import_http, import_https, import_zlib, import_stream, import_util, import_crypto, import_url, commonjsGlobal, src, dataUriToBuffer$1, ponyfill_es2018, POOL_SIZE$1, POOL_SIZE, _Blob, Blob2, Blob$1, FetchBaseError, FetchError, NAME, isURLSearchParameters, isBlob, isAbortSignal, carriage, dashes, carriageLength, getFooter, getBoundary, INTERNALS$2, Body, clone, extractContentType, getTotalBytes, writeToStream, validateHeaderName, validateHeaderValue, Headers, redirectStatus, isRedirect, INTERNALS$1, Response, getSearch, INTERNALS, isRequest, Request, getNodeRequestOptions, AbortError, supportedSchemas;
var init_install_fetch = __esm({
  "node_modules/@sveltejs/kit/dist/install-fetch.js"() {
    init_shims();
    import_http = __toModule(require("http"));
    import_https = __toModule(require("https"));
    import_zlib = __toModule(require("zlib"));
    import_stream = __toModule(require("stream"));
    import_util = __toModule(require("util"));
    import_crypto = __toModule(require("crypto"));
    import_url = __toModule(require("url"));
    commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    src = dataUriToBuffer;
    dataUriToBuffer$1 = src;
    ponyfill_es2018 = { exports: {} };
    (function(module2, exports) {
      (function(global2, factory) {
        factory(exports);
      })(commonjsGlobal, function(exports2) {
        const SymbolPolyfill = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol : (description) => `Symbol(${description})`;
        function noop3() {
          return void 0;
        }
        function getGlobals() {
          if (typeof self !== "undefined") {
            return self;
          } else if (typeof window !== "undefined") {
            return window;
          } else if (typeof commonjsGlobal !== "undefined") {
            return commonjsGlobal;
          }
          return void 0;
        }
        const globals = getGlobals();
        function typeIsObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        const rethrowAssertionErrorRejection = noop3;
        const originalPromise = Promise;
        const originalPromiseThen = Promise.prototype.then;
        const originalPromiseResolve = Promise.resolve.bind(originalPromise);
        const originalPromiseReject = Promise.reject.bind(originalPromise);
        function newPromise(executor) {
          return new originalPromise(executor);
        }
        function promiseResolvedWith(value) {
          return originalPromiseResolve(value);
        }
        function promiseRejectedWith(reason) {
          return originalPromiseReject(reason);
        }
        function PerformPromiseThen(promise, onFulfilled, onRejected) {
          return originalPromiseThen.call(promise, onFulfilled, onRejected);
        }
        function uponPromise(promise, onFulfilled, onRejected) {
          PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
        }
        function uponFulfillment(promise, onFulfilled) {
          uponPromise(promise, onFulfilled);
        }
        function uponRejection(promise, onRejected) {
          uponPromise(promise, void 0, onRejected);
        }
        function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
          return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
        }
        function setPromiseIsHandledToTrue(promise) {
          PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
        }
        const queueMicrotask = (() => {
          const globalQueueMicrotask = globals && globals.queueMicrotask;
          if (typeof globalQueueMicrotask === "function") {
            return globalQueueMicrotask;
          }
          const resolvedPromise = promiseResolvedWith(void 0);
          return (fn) => PerformPromiseThen(resolvedPromise, fn);
        })();
        function reflectCall(F, V, args) {
          if (typeof F !== "function") {
            throw new TypeError("Argument is not a function");
          }
          return Function.prototype.apply.call(F, V, args);
        }
        function promiseCall(F, V, args) {
          try {
            return promiseResolvedWith(reflectCall(F, V, args));
          } catch (value) {
            return promiseRejectedWith(value);
          }
        }
        const QUEUE_MAX_ARRAY_SIZE = 16384;
        class SimpleQueue {
          constructor() {
            this._cursor = 0;
            this._size = 0;
            this._front = {
              _elements: [],
              _next: void 0
            };
            this._back = this._front;
            this._cursor = 0;
            this._size = 0;
          }
          get length() {
            return this._size;
          }
          push(element) {
            const oldBack = this._back;
            let newBack = oldBack;
            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {
              newBack = {
                _elements: [],
                _next: void 0
              };
            }
            oldBack._elements.push(element);
            if (newBack !== oldBack) {
              this._back = newBack;
              oldBack._next = newBack;
            }
            ++this._size;
          }
          shift() {
            const oldFront = this._front;
            let newFront = oldFront;
            const oldCursor = this._cursor;
            let newCursor = oldCursor + 1;
            const elements = oldFront._elements;
            const element = elements[oldCursor];
            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {
              newFront = oldFront._next;
              newCursor = 0;
            }
            --this._size;
            this._cursor = newCursor;
            if (oldFront !== newFront) {
              this._front = newFront;
            }
            elements[oldCursor] = void 0;
            return element;
          }
          forEach(callback) {
            let i = this._cursor;
            let node = this._front;
            let elements = node._elements;
            while (i !== elements.length || node._next !== void 0) {
              if (i === elements.length) {
                node = node._next;
                elements = node._elements;
                i = 0;
                if (elements.length === 0) {
                  break;
                }
              }
              callback(elements[i]);
              ++i;
            }
          }
          peek() {
            const front = this._front;
            const cursor = this._cursor;
            return front._elements[cursor];
          }
        }
        function ReadableStreamReaderGenericInitialize(reader, stream) {
          reader._ownerReadableStream = stream;
          stream._reader = reader;
          if (stream._state === "readable") {
            defaultReaderClosedPromiseInitialize(reader);
          } else if (stream._state === "closed") {
            defaultReaderClosedPromiseInitializeAsResolved(reader);
          } else {
            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
          }
        }
        function ReadableStreamReaderGenericCancel(reader, reason) {
          const stream = reader._ownerReadableStream;
          return ReadableStreamCancel(stream, reason);
        }
        function ReadableStreamReaderGenericRelease(reader) {
          if (reader._ownerReadableStream._state === "readable") {
            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          } else {
            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));
          }
          reader._ownerReadableStream._reader = void 0;
          reader._ownerReadableStream = void 0;
        }
        function readerLockException(name3) {
          return new TypeError("Cannot " + name3 + " a stream using a released reader");
        }
        function defaultReaderClosedPromiseInitialize(reader) {
          reader._closedPromise = newPromise((resolve2, reject) => {
            reader._closedPromise_resolve = resolve2;
            reader._closedPromise_reject = reject;
          });
        }
        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseReject(reader, reason);
        }
        function defaultReaderClosedPromiseInitializeAsResolved(reader) {
          defaultReaderClosedPromiseInitialize(reader);
          defaultReaderClosedPromiseResolve(reader);
        }
        function defaultReaderClosedPromiseReject(reader, reason) {
          if (reader._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(reader._closedPromise);
          reader._closedPromise_reject(reason);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        function defaultReaderClosedPromiseResetToRejected(reader, reason) {
          defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
        }
        function defaultReaderClosedPromiseResolve(reader) {
          if (reader._closedPromise_resolve === void 0) {
            return;
          }
          reader._closedPromise_resolve(void 0);
          reader._closedPromise_resolve = void 0;
          reader._closedPromise_reject = void 0;
        }
        const AbortSteps = SymbolPolyfill("[[AbortSteps]]");
        const ErrorSteps = SymbolPolyfill("[[ErrorSteps]]");
        const CancelSteps = SymbolPolyfill("[[CancelSteps]]");
        const PullSteps = SymbolPolyfill("[[PullSteps]]");
        const NumberIsFinite = Number.isFinite || function(x) {
          return typeof x === "number" && isFinite(x);
        };
        const MathTrunc = Math.trunc || function(v) {
          return v < 0 ? Math.ceil(v) : Math.floor(v);
        };
        function isDictionary(x) {
          return typeof x === "object" || typeof x === "function";
        }
        function assertDictionary(obj, context) {
          if (obj !== void 0 && !isDictionary(obj)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertFunction(x, context) {
          if (typeof x !== "function") {
            throw new TypeError(`${context} is not a function.`);
          }
        }
        function isObject(x) {
          return typeof x === "object" && x !== null || typeof x === "function";
        }
        function assertObject(x, context) {
          if (!isObject(x)) {
            throw new TypeError(`${context} is not an object.`);
          }
        }
        function assertRequiredArgument(x, position, context) {
          if (x === void 0) {
            throw new TypeError(`Parameter ${position} is required in '${context}'.`);
          }
        }
        function assertRequiredField(x, field, context) {
          if (x === void 0) {
            throw new TypeError(`${field} is required in '${context}'.`);
          }
        }
        function convertUnrestrictedDouble(value) {
          return Number(value);
        }
        function censorNegativeZero(x) {
          return x === 0 ? 0 : x;
        }
        function integerPart(x) {
          return censorNegativeZero(MathTrunc(x));
        }
        function convertUnsignedLongLongWithEnforceRange(value, context) {
          const lowerBound = 0;
          const upperBound = Number.MAX_SAFE_INTEGER;
          let x = Number(value);
          x = censorNegativeZero(x);
          if (!NumberIsFinite(x)) {
            throw new TypeError(`${context} is not a finite number`);
          }
          x = integerPart(x);
          if (x < lowerBound || x > upperBound) {
            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);
          }
          if (!NumberIsFinite(x) || x === 0) {
            return 0;
          }
          return x;
        }
        function assertReadableStream(x, context) {
          if (!IsReadableStream(x)) {
            throw new TypeError(`${context} is not a ReadableStream.`);
          }
        }
        function AcquireReadableStreamDefaultReader(stream) {
          return new ReadableStreamDefaultReader(stream);
        }
        function ReadableStreamAddReadRequest(stream, readRequest) {
          stream._reader._readRequests.push(readRequest);
        }
        function ReadableStreamFulfillReadRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readRequest = reader._readRequests.shift();
          if (done) {
            readRequest._closeSteps();
          } else {
            readRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadRequests(stream) {
          return stream._reader._readRequests.length;
        }
        function ReadableStreamHasDefaultReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamDefaultReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamDefaultReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read() {
            if (!IsReadableStreamDefaultReader(this)) {
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: () => resolvePromise({ value: void 0, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamDefaultReaderRead(this, readRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamDefaultReader(this)) {
              throw defaultReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamDefaultReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultReader",
            configurable: true
          });
        }
        function IsReadableStreamDefaultReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readRequests")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultReader;
        }
        function ReadableStreamDefaultReaderRead(reader, readRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "closed") {
            readRequest._closeSteps();
          } else if (stream._state === "errored") {
            readRequest._errorSteps(stream._storedError);
          } else {
            stream._readableStreamController[PullSteps](readRequest);
          }
        }
        function defaultReaderBrandCheckException(name3) {
          return new TypeError(`ReadableStreamDefaultReader.prototype.${name3} can only be used on a ReadableStreamDefaultReader`);
        }
        const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
        }).prototype);
        class ReadableStreamAsyncIteratorImpl {
          constructor(reader, preventCancel) {
            this._ongoingPromise = void 0;
            this._isFinished = false;
            this._reader = reader;
            this._preventCancel = preventCancel;
          }
          next() {
            const nextSteps = () => this._nextSteps();
            this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps();
            return this._ongoingPromise;
          }
          return(value) {
            const returnSteps = () => this._returnSteps(value);
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }
          _nextSteps() {
            if (this._isFinished) {
              return Promise.resolve({ value: void 0, done: true });
            }
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("iterate"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readRequest = {
              _chunkSteps: (chunk) => {
                this._ongoingPromise = void 0;
                queueMicrotask(() => resolvePromise({ value: chunk, done: false }));
              },
              _closeSteps: () => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                resolvePromise({ value: void 0, done: true });
              },
              _errorSteps: (reason) => {
                this._ongoingPromise = void 0;
                this._isFinished = true;
                ReadableStreamReaderGenericRelease(reader);
                rejectPromise(reason);
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promise;
          }
          _returnSteps(value) {
            if (this._isFinished) {
              return Promise.resolve({ value, done: true });
            }
            this._isFinished = true;
            const reader = this._reader;
            if (reader._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("finish iterating"));
            }
            if (!this._preventCancel) {
              const result = ReadableStreamReaderGenericCancel(reader, value);
              ReadableStreamReaderGenericRelease(reader);
              return transformPromiseWith(result, () => ({ value, done: true }));
            }
            ReadableStreamReaderGenericRelease(reader);
            return promiseResolvedWith({ value, done: true });
          }
        }
        const ReadableStreamAsyncIteratorPrototype = {
          next() {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
            }
            return this._asyncIteratorImpl.next();
          },
          return(value) {
            if (!IsReadableStreamAsyncIterator(this)) {
              return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
            }
            return this._asyncIteratorImpl.return(value);
          }
        };
        if (AsyncIteratorPrototype !== void 0) {
          Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
        }
        function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);
          const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
          iterator._asyncIteratorImpl = impl;
          return iterator;
        }
        function IsReadableStreamAsyncIterator(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl")) {
            return false;
          }
          try {
            return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
          } catch (_a) {
            return false;
          }
        }
        function streamAsyncIteratorBrandCheckException(name3) {
          return new TypeError(`ReadableStreamAsyncIterator.${name3} can only be used on a ReadableSteamAsyncIterator`);
        }
        const NumberIsNaN = Number.isNaN || function(x) {
          return x !== x;
        };
        function CreateArrayFromList(elements) {
          return elements.slice();
        }
        function CopyDataBlockBytes(dest, destOffset, src2, srcOffset, n) {
          new Uint8Array(dest).set(new Uint8Array(src2, srcOffset, n), destOffset);
        }
        function TransferArrayBuffer(O) {
          return O;
        }
        function IsDetachedBuffer(O) {
          return false;
        }
        function ArrayBufferSlice(buffer, begin, end) {
          if (buffer.slice) {
            return buffer.slice(begin, end);
          }
          const length = end - begin;
          const slice = new ArrayBuffer(length);
          CopyDataBlockBytes(slice, 0, buffer, begin, length);
          return slice;
        }
        function IsNonNegativeNumber(v) {
          if (typeof v !== "number") {
            return false;
          }
          if (NumberIsNaN(v)) {
            return false;
          }
          if (v < 0) {
            return false;
          }
          return true;
        }
        function CloneAsUint8Array(O) {
          const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
          return new Uint8Array(buffer);
        }
        function DequeueValue(container) {
          const pair = container._queue.shift();
          container._queueTotalSize -= pair.size;
          if (container._queueTotalSize < 0) {
            container._queueTotalSize = 0;
          }
          return pair.value;
        }
        function EnqueueValueWithSize(container, value, size) {
          if (!IsNonNegativeNumber(size) || size === Infinity) {
            throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
          }
          container._queue.push({ value, size });
          container._queueTotalSize += size;
        }
        function PeekQueueValue(container) {
          const pair = container._queue.peek();
          return pair.value;
        }
        function ResetQueue(container) {
          container._queue = new SimpleQueue();
          container._queueTotalSize = 0;
        }
        class ReadableStreamBYOBRequest {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get view() {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("view");
            }
            return this._view;
          }
          respond(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respond");
            }
            assertRequiredArgument(bytesWritten, 1, "respond");
            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter");
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(this._view.buffer))
              ;
            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }
          respondWithNewView(view) {
            if (!IsReadableStreamBYOBRequest(this)) {
              throw byobRequestBrandCheckException("respondWithNewView");
            }
            assertRequiredArgument(view, 1, "respondWithNewView");
            if (!ArrayBuffer.isView(view)) {
              throw new TypeError("You can only respond with array buffer views");
            }
            if (this._associatedReadableByteStreamController === void 0) {
              throw new TypeError("This BYOB request has been invalidated");
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }
        }
        Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
          respond: { enumerable: true },
          respondWithNewView: { enumerable: true },
          view: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBRequest",
            configurable: true
          });
        }
        class ReadableByteStreamController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get byobRequest() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("byobRequest");
            }
            return ReadableByteStreamControllerGetBYOBRequest(this);
          }
          get desiredSize() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("desiredSize");
            }
            return ReadableByteStreamControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("close");
            }
            if (this._closeRequested) {
              throw new TypeError("The stream has already been closed; do not close it again!");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);
            }
            ReadableByteStreamControllerClose(this);
          }
          enqueue(chunk) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("enqueue");
            }
            assertRequiredArgument(chunk, 1, "enqueue");
            if (!ArrayBuffer.isView(chunk)) {
              throw new TypeError("chunk must be an array buffer view");
            }
            if (chunk.byteLength === 0) {
              throw new TypeError("chunk must have non-zero byteLength");
            }
            if (chunk.buffer.byteLength === 0) {
              throw new TypeError(`chunk's buffer must have non-zero byteLength`);
            }
            if (this._closeRequested) {
              throw new TypeError("stream is closed or draining");
            }
            const state = this._controlledReadableByteStream._state;
            if (state !== "readable") {
              throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);
            }
            ReadableByteStreamControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableByteStreamController(this)) {
              throw byteStreamControllerBrandCheckException("error");
            }
            ReadableByteStreamControllerError(this, e);
          }
          [CancelSteps](reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this);
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableByteStreamControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              const entry = this._queue.shift();
              this._queueTotalSize -= entry.byteLength;
              ReadableByteStreamControllerHandleQueueDrain(this);
              const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            const autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              let buffer;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              const pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest);
            ReadableByteStreamControllerCallPullIfNeeded(this);
          }
        }
        Object.defineProperties(ReadableByteStreamController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          byobRequest: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableByteStreamController",
            configurable: true
          });
        }
        function IsReadableByteStreamController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream")) {
            return false;
          }
          return x instanceof ReadableByteStreamController;
        }
        function IsReadableStreamBYOBRequest(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBRequest;
        }
        function ReadableByteStreamControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableByteStreamControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableByteStreamControllerError(controller, e);
          });
        }
        function ReadableByteStreamControllerClearPendingPullIntos(controller) {
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          controller._pendingPullIntos = new SimpleQueue();
        }
        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
          let done = false;
          if (stream._state === "closed") {
            done = true;
          }
          const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
          if (pullIntoDescriptor.readerType === "default") {
            ReadableStreamFulfillReadRequest(stream, filledView, done);
          } else {
            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
          }
        }
        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
          const bytesFilled = pullIntoDescriptor.bytesFilled;
          const elementSize = pullIntoDescriptor.elementSize;
          return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
        }
        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
          controller._queue.push({ buffer, byteOffset, byteLength });
          controller._queueTotalSize += byteLength;
        }
        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
          const elementSize = pullIntoDescriptor.elementSize;
          const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
          const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
          const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
          const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
          let totalBytesToCopyRemaining = maxBytesToCopy;
          let ready = false;
          if (maxAlignedBytes > currentAlignedBytes) {
            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
            ready = true;
          }
          const queue = controller._queue;
          while (totalBytesToCopyRemaining > 0) {
            const headOfQueue = queue.peek();
            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
            if (headOfQueue.byteLength === bytesToCopy) {
              queue.shift();
            } else {
              headOfQueue.byteOffset += bytesToCopy;
              headOfQueue.byteLength -= bytesToCopy;
            }
            controller._queueTotalSize -= bytesToCopy;
            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
            totalBytesToCopyRemaining -= bytesToCopy;
          }
          return ready;
        }
        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
          pullIntoDescriptor.bytesFilled += size;
        }
        function ReadableByteStreamControllerHandleQueueDrain(controller) {
          if (controller._queueTotalSize === 0 && controller._closeRequested) {
            ReadableByteStreamControllerClearAlgorithms(controller);
            ReadableStreamClose(controller._controlledReadableByteStream);
          } else {
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }
        }
        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
          if (controller._byobRequest === null) {
            return;
          }
          controller._byobRequest._associatedReadableByteStreamController = void 0;
          controller._byobRequest._view = null;
          controller._byobRequest = null;
        }
        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
          while (controller._pendingPullIntos.length > 0) {
            if (controller._queueTotalSize === 0) {
              return;
            }
            const pullIntoDescriptor = controller._pendingPullIntos.peek();
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
          const stream = controller._controlledReadableByteStream;
          let elementSize = 1;
          if (view.constructor !== DataView) {
            elementSize = view.constructor.BYTES_PER_ELEMENT;
          }
          const ctor = view.constructor;
          const buffer = TransferArrayBuffer(view.buffer);
          const pullIntoDescriptor = {
            buffer,
            bufferByteLength: buffer.byteLength,
            byteOffset: view.byteOffset,
            byteLength: view.byteLength,
            bytesFilled: 0,
            elementSize,
            viewConstructor: ctor,
            readerType: "byob"
          };
          if (controller._pendingPullIntos.length > 0) {
            controller._pendingPullIntos.push(pullIntoDescriptor);
            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
            return;
          }
          if (stream._state === "closed") {
            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
            readIntoRequest._closeSteps(emptyView);
            return;
          }
          if (controller._queueTotalSize > 0) {
            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
              const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
              ReadableByteStreamControllerHandleQueueDrain(controller);
              readIntoRequest._chunkSteps(filledView);
              return;
            }
            if (controller._closeRequested) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              readIntoRequest._errorSteps(e);
              return;
            }
          }
          controller._pendingPullIntos.push(pullIntoDescriptor);
          ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
          const stream = controller._controlledReadableByteStream;
          if (ReadableStreamHasBYOBReader(stream)) {
            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
              const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
            }
          }
        }
        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
            return;
          }
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize;
          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);
          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            ReadableByteStreamControllerRespondInClosedState(controller);
          } else {
            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerShiftPendingPullInto(controller) {
          const descriptor = controller._pendingPullIntos.shift();
          return descriptor;
        }
        function ReadableByteStreamControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return false;
          }
          if (controller._closeRequested) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableByteStreamControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
        }
        function ReadableByteStreamControllerClose(controller) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = true;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              const e = new TypeError("Insufficient bytes to fill elements in the given buffer");
              ReadableByteStreamControllerError(controller, e);
              throw e;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamClose(stream);
        }
        function ReadableByteStreamControllerEnqueue(controller, chunk) {
          const stream = controller._controlledReadableByteStream;
          if (controller._closeRequested || stream._state !== "readable") {
            return;
          }
          const buffer = chunk.buffer;
          const byteOffset = chunk.byteOffset;
          const byteLength = chunk.byteLength;
          const transferredBuffer = TransferArrayBuffer(buffer);
          if (controller._pendingPullIntos.length > 0) {
            const firstPendingPullInto = controller._pendingPullIntos.peek();
            if (IsDetachedBuffer(firstPendingPullInto.buffer))
              ;
            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);
          }
          ReadableByteStreamControllerInvalidateBYOBRequest(controller);
          if (ReadableStreamHasDefaultReader(stream)) {
            if (ReadableStreamGetNumReadRequests(stream) === 0) {
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            } else {
              const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, false);
            }
          } else if (ReadableStreamHasBYOBReader(stream)) {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
          } else {
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          }
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
        function ReadableByteStreamControllerError(controller, e) {
          const stream = controller._controlledReadableByteStream;
          if (stream._state !== "readable") {
            return;
          }
          ReadableByteStreamControllerClearPendingPullIntos(controller);
          ResetQueue(controller);
          ReadableByteStreamControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableByteStreamControllerGetBYOBRequest(controller) {
          if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
            const firstDescriptor = controller._pendingPullIntos.peek();
            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);
            controller._byobRequest = byobRequest;
          }
          return controller._byobRequest;
        }
        function ReadableByteStreamControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableByteStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableByteStreamControllerRespond(controller, bytesWritten) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (bytesWritten !== 0) {
              throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
            }
          } else {
            if (bytesWritten === 0) {
              throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
            }
            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {
              throw new RangeError("bytesWritten out of range");
            }
          }
          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
        }
        function ReadableByteStreamControllerRespondWithNewView(controller, view) {
          const firstDescriptor = controller._pendingPullIntos.peek();
          const state = controller._controlledReadableByteStream._state;
          if (state === "closed") {
            if (view.byteLength !== 0) {
              throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
            }
          } else {
            if (view.byteLength === 0) {
              throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
            }
          }
          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
            throw new RangeError("The region specified by view does not match byobRequest");
          }
          if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {
            throw new RangeError("The buffer of view has different capacity than byobRequest");
          }
          if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {
            throw new RangeError("The region specified by view is larger than byobRequest");
          }
          firstDescriptor.buffer = TransferArrayBuffer(view.buffer);
          ReadableByteStreamControllerRespondInternal(controller, view.byteLength);
        }
        function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
          controller._controlledReadableByteStream = stream;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._byobRequest = null;
          controller._queue = controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._closeRequested = false;
          controller._started = false;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          controller._autoAllocateChunkSize = autoAllocateChunkSize;
          controller._pendingPullIntos = new SimpleQueue();
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableByteStreamControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableByteStreamControllerError(controller, r);
          });
        }
        function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
          const controller = Object.create(ReadableByteStreamController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingByteSource.start !== void 0) {
            startAlgorithm = () => underlyingByteSource.start(controller);
          }
          if (underlyingByteSource.pull !== void 0) {
            pullAlgorithm = () => underlyingByteSource.pull(controller);
          }
          if (underlyingByteSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingByteSource.cancel(reason);
          }
          const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
          if (autoAllocateChunkSize === 0) {
            throw new TypeError("autoAllocateChunkSize must be greater than 0");
          }
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
        }
        function SetUpReadableStreamBYOBRequest(request, controller, view) {
          request._associatedReadableByteStreamController = controller;
          request._view = view;
        }
        function byobRequestBrandCheckException(name3) {
          return new TypeError(`ReadableStreamBYOBRequest.prototype.${name3} can only be used on a ReadableStreamBYOBRequest`);
        }
        function byteStreamControllerBrandCheckException(name3) {
          return new TypeError(`ReadableByteStreamController.prototype.${name3} can only be used on a ReadableByteStreamController`);
        }
        function AcquireReadableStreamBYOBReader(stream) {
          return new ReadableStreamBYOBReader(stream);
        }
        function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
          stream._reader._readIntoRequests.push(readIntoRequest);
        }
        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
          const reader = stream._reader;
          const readIntoRequest = reader._readIntoRequests.shift();
          if (done) {
            readIntoRequest._closeSteps(chunk);
          } else {
            readIntoRequest._chunkSteps(chunk);
          }
        }
        function ReadableStreamGetNumReadIntoRequests(stream) {
          return stream._reader._readIntoRequests.length;
        }
        function ReadableStreamHasBYOBReader(stream) {
          const reader = stream._reader;
          if (reader === void 0) {
            return false;
          }
          if (!IsReadableStreamBYOBReader(reader)) {
            return false;
          }
          return true;
        }
        class ReadableStreamBYOBReader {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader");
            assertReadableStream(stream, "First parameter");
            if (IsReadableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            }
            if (!IsReadableByteStreamController(stream._readableStreamController)) {
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            }
            ReadableStreamReaderGenericInitialize(this, stream);
            this._readIntoRequests = new SimpleQueue();
          }
          get closed() {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          cancel(reason = void 0) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("cancel"));
            }
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("cancel"));
            }
            return ReadableStreamReaderGenericCancel(this, reason);
          }
          read(view) {
            if (!IsReadableStreamBYOBReader(this)) {
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            }
            if (!ArrayBuffer.isView(view)) {
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            }
            if (view.byteLength === 0) {
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            }
            if (view.buffer.byteLength === 0) {
              return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));
            }
            if (IsDetachedBuffer(view.buffer))
              ;
            if (this._ownerReadableStream === void 0) {
              return promiseRejectedWith(readerLockException("read from"));
            }
            let resolvePromise;
            let rejectPromise;
            const promise = newPromise((resolve2, reject) => {
              resolvePromise = resolve2;
              rejectPromise = reject;
            });
            const readIntoRequest = {
              _chunkSteps: (chunk) => resolvePromise({ value: chunk, done: false }),
              _closeSteps: (chunk) => resolvePromise({ value: chunk, done: true }),
              _errorSteps: (e) => rejectPromise(e)
            };
            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);
            return promise;
          }
          releaseLock() {
            if (!IsReadableStreamBYOBReader(this)) {
              throw byobReaderBrandCheckException("releaseLock");
            }
            if (this._ownerReadableStream === void 0) {
              return;
            }
            if (this._readIntoRequests.length > 0) {
              throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
            }
            ReadableStreamReaderGenericRelease(this);
          }
        }
        Object.defineProperties(ReadableStreamBYOBReader.prototype, {
          cancel: { enumerable: true },
          read: { enumerable: true },
          releaseLock: { enumerable: true },
          closed: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamBYOBReader",
            configurable: true
          });
        }
        function IsReadableStreamBYOBReader(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readIntoRequests")) {
            return false;
          }
          return x instanceof ReadableStreamBYOBReader;
        }
        function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
          const stream = reader._ownerReadableStream;
          stream._disturbed = true;
          if (stream._state === "errored") {
            readIntoRequest._errorSteps(stream._storedError);
          } else {
            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
          }
        }
        function byobReaderBrandCheckException(name3) {
          return new TypeError(`ReadableStreamBYOBReader.prototype.${name3} can only be used on a ReadableStreamBYOBReader`);
        }
        function ExtractHighWaterMark(strategy, defaultHWM) {
          const { highWaterMark } = strategy;
          if (highWaterMark === void 0) {
            return defaultHWM;
          }
          if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {
            throw new RangeError("Invalid highWaterMark");
          }
          return highWaterMark;
        }
        function ExtractSizeAlgorithm(strategy) {
          const { size } = strategy;
          if (!size) {
            return () => 1;
          }
          return size;
        }
        function convertQueuingStrategy(init3, context) {
          assertDictionary(init3, context);
          const highWaterMark = init3 === null || init3 === void 0 ? void 0 : init3.highWaterMark;
          const size = init3 === null || init3 === void 0 ? void 0 : init3.size;
          return {
            highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
            size: size === void 0 ? void 0 : convertQueuingStrategySize(size, `${context} has member 'size' that`)
          };
        }
        function convertQueuingStrategySize(fn, context) {
          assertFunction(fn, context);
          return (chunk) => convertUnrestrictedDouble(fn(chunk));
        }
        function convertUnderlyingSink(original, context) {
          assertDictionary(original, context);
          const abort = original === null || original === void 0 ? void 0 : original.abort;
          const close = original === null || original === void 0 ? void 0 : original.close;
          const start2 = original === null || original === void 0 ? void 0 : original.start;
          const type3 = original === null || original === void 0 ? void 0 : original.type;
          const write = original === null || original === void 0 ? void 0 : original.write;
          return {
            abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),
            close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),
            start: start2 === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start2, original, `${context} has member 'start' that`),
            write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),
            type: type3
          };
        }
        function convertUnderlyingSinkAbortCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSinkCloseCallback(fn, original, context) {
          assertFunction(fn, context);
          return () => promiseCall(fn, original, []);
        }
        function convertUnderlyingSinkStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertUnderlyingSinkWriteCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        function assertWritableStream(x, context) {
          if (!IsWritableStream(x)) {
            throw new TypeError(`${context} is not a WritableStream.`);
          }
        }
        function isAbortSignal2(value) {
          if (typeof value !== "object" || value === null) {
            return false;
          }
          try {
            return typeof value.aborted === "boolean";
          } catch (_a) {
            return false;
          }
        }
        const supportsAbortController = typeof AbortController === "function";
        function createAbortController() {
          if (supportsAbortController) {
            return new AbortController();
          }
          return void 0;
        }
        class WritableStream {
          constructor(rawUnderlyingSink = {}, rawStrategy = {}) {
            if (rawUnderlyingSink === void 0) {
              rawUnderlyingSink = null;
            } else {
              assertObject(rawUnderlyingSink, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            const type3 = underlyingSink.type;
            if (type3 !== void 0) {
              throw new RangeError("Invalid type is specified");
            }
            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
            const highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          get locked() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("locked");
            }
            return IsWritableStreamLocked(this);
          }
          abort(reason = void 0) {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("abort"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"));
            }
            return WritableStreamAbort(this, reason);
          }
          close() {
            if (!IsWritableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$2("close"));
            }
            if (IsWritableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"));
            }
            if (WritableStreamCloseQueuedOrInFlight(this)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamClose(this);
          }
          getWriter() {
            if (!IsWritableStream(this)) {
              throw streamBrandCheckException$2("getWriter");
            }
            return AcquireWritableStreamDefaultWriter(this);
          }
        }
        Object.defineProperties(WritableStream.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          getWriter: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStream",
            configurable: true
          });
        }
        function AcquireWritableStreamDefaultWriter(stream) {
          return new WritableStreamDefaultWriter(stream);
        }
        function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(WritableStream.prototype);
          InitializeWritableStream(stream);
          const controller = Object.create(WritableStreamDefaultController.prototype);
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function InitializeWritableStream(stream) {
          stream._state = "writable";
          stream._storedError = void 0;
          stream._writer = void 0;
          stream._writableStreamController = void 0;
          stream._writeRequests = new SimpleQueue();
          stream._inFlightWriteRequest = void 0;
          stream._closeRequest = void 0;
          stream._inFlightCloseRequest = void 0;
          stream._pendingAbortRequest = void 0;
          stream._backpressure = false;
        }
        function IsWritableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_writableStreamController")) {
            return false;
          }
          return x instanceof WritableStream;
        }
        function IsWritableStreamLocked(stream) {
          if (stream._writer === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamAbort(stream, reason) {
          var _a;
          if (stream._state === "closed" || stream._state === "errored") {
            return promiseResolvedWith(void 0);
          }
          stream._writableStreamController._abortReason = reason;
          (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseResolvedWith(void 0);
          }
          if (stream._pendingAbortRequest !== void 0) {
            return stream._pendingAbortRequest._promise;
          }
          let wasAlreadyErroring = false;
          if (state === "erroring") {
            wasAlreadyErroring = true;
            reason = void 0;
          }
          const promise = newPromise((resolve2, reject) => {
            stream._pendingAbortRequest = {
              _promise: void 0,
              _resolve: resolve2,
              _reject: reject,
              _reason: reason,
              _wasAlreadyErroring: wasAlreadyErroring
            };
          });
          stream._pendingAbortRequest._promise = promise;
          if (!wasAlreadyErroring) {
            WritableStreamStartErroring(stream, reason);
          }
          return promise;
        }
        function WritableStreamClose(stream) {
          const state = stream._state;
          if (state === "closed" || state === "errored") {
            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
          }
          const promise = newPromise((resolve2, reject) => {
            const closeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._closeRequest = closeRequest;
          });
          const writer = stream._writer;
          if (writer !== void 0 && stream._backpressure && state === "writable") {
            defaultWriterReadyPromiseResolve(writer);
          }
          WritableStreamDefaultControllerClose(stream._writableStreamController);
          return promise;
        }
        function WritableStreamAddWriteRequest(stream) {
          const promise = newPromise((resolve2, reject) => {
            const writeRequest = {
              _resolve: resolve2,
              _reject: reject
            };
            stream._writeRequests.push(writeRequest);
          });
          return promise;
        }
        function WritableStreamDealWithRejection(stream, error2) {
          const state = stream._state;
          if (state === "writable") {
            WritableStreamStartErroring(stream, error2);
            return;
          }
          WritableStreamFinishErroring(stream);
        }
        function WritableStreamStartErroring(stream, reason) {
          const controller = stream._writableStreamController;
          stream._state = "erroring";
          stream._storedError = reason;
          const writer = stream._writer;
          if (writer !== void 0) {
            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
          }
          if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {
            WritableStreamFinishErroring(stream);
          }
        }
        function WritableStreamFinishErroring(stream) {
          stream._state = "errored";
          stream._writableStreamController[ErrorSteps]();
          const storedError = stream._storedError;
          stream._writeRequests.forEach((writeRequest) => {
            writeRequest._reject(storedError);
          });
          stream._writeRequests = new SimpleQueue();
          if (stream._pendingAbortRequest === void 0) {
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const abortRequest = stream._pendingAbortRequest;
          stream._pendingAbortRequest = void 0;
          if (abortRequest._wasAlreadyErroring) {
            abortRequest._reject(storedError);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
            return;
          }
          const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
          uponPromise(promise, () => {
            abortRequest._resolve();
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          }, (reason) => {
            abortRequest._reject(reason);
            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          });
        }
        function WritableStreamFinishInFlightWrite(stream) {
          stream._inFlightWriteRequest._resolve(void 0);
          stream._inFlightWriteRequest = void 0;
        }
        function WritableStreamFinishInFlightWriteWithError(stream, error2) {
          stream._inFlightWriteRequest._reject(error2);
          stream._inFlightWriteRequest = void 0;
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamFinishInFlightClose(stream) {
          stream._inFlightCloseRequest._resolve(void 0);
          stream._inFlightCloseRequest = void 0;
          const state = stream._state;
          if (state === "erroring") {
            stream._storedError = void 0;
            if (stream._pendingAbortRequest !== void 0) {
              stream._pendingAbortRequest._resolve();
              stream._pendingAbortRequest = void 0;
            }
          }
          stream._state = "closed";
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseResolve(writer);
          }
        }
        function WritableStreamFinishInFlightCloseWithError(stream, error2) {
          stream._inFlightCloseRequest._reject(error2);
          stream._inFlightCloseRequest = void 0;
          if (stream._pendingAbortRequest !== void 0) {
            stream._pendingAbortRequest._reject(error2);
            stream._pendingAbortRequest = void 0;
          }
          WritableStreamDealWithRejection(stream, error2);
        }
        function WritableStreamCloseQueuedOrInFlight(stream) {
          if (stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamHasOperationMarkedInFlight(stream) {
          if (stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0) {
            return false;
          }
          return true;
        }
        function WritableStreamMarkCloseRequestInFlight(stream) {
          stream._inFlightCloseRequest = stream._closeRequest;
          stream._closeRequest = void 0;
        }
        function WritableStreamMarkFirstWriteRequestInFlight(stream) {
          stream._inFlightWriteRequest = stream._writeRequests.shift();
        }
        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
          if (stream._closeRequest !== void 0) {
            stream._closeRequest._reject(stream._storedError);
            stream._closeRequest = void 0;
          }
          const writer = stream._writer;
          if (writer !== void 0) {
            defaultWriterClosedPromiseReject(writer, stream._storedError);
          }
        }
        function WritableStreamUpdateBackpressure(stream, backpressure) {
          const writer = stream._writer;
          if (writer !== void 0 && backpressure !== stream._backpressure) {
            if (backpressure) {
              defaultWriterReadyPromiseReset(writer);
            } else {
              defaultWriterReadyPromiseResolve(writer);
            }
          }
          stream._backpressure = backpressure;
        }
        class WritableStreamDefaultWriter {
          constructor(stream) {
            assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter");
            assertWritableStream(stream, "First parameter");
            if (IsWritableStreamLocked(stream)) {
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            }
            this._ownerWritableStream = stream;
            stream._writer = this;
            const state = stream._state;
            if (state === "writable") {
              if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {
                defaultWriterReadyPromiseInitialize(this);
              } else {
                defaultWriterReadyPromiseInitializeAsResolved(this);
              }
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "erroring") {
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
              defaultWriterClosedPromiseInitialize(this);
            } else if (state === "closed") {
              defaultWriterReadyPromiseInitializeAsResolved(this);
              defaultWriterClosedPromiseInitializeAsResolved(this);
            } else {
              const storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          get closed() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            }
            return this._closedPromise;
          }
          get desiredSize() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("desiredSize");
            }
            if (this._ownerWritableStream === void 0) {
              throw defaultWriterLockException("desiredSize");
            }
            return WritableStreamDefaultWriterGetDesiredSize(this);
          }
          get ready() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            }
            return this._readyPromise;
          }
          abort(reason = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("abort"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("abort"));
            }
            return WritableStreamDefaultWriterAbort(this, reason);
          }
          close() {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("close"));
            }
            if (WritableStreamCloseQueuedOrInFlight(stream)) {
              return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"));
            }
            return WritableStreamDefaultWriterClose(this);
          }
          releaseLock() {
            if (!IsWritableStreamDefaultWriter(this)) {
              throw defaultWriterBrandCheckException("releaseLock");
            }
            const stream = this._ownerWritableStream;
            if (stream === void 0) {
              return;
            }
            WritableStreamDefaultWriterRelease(this);
          }
          write(chunk = void 0) {
            if (!IsWritableStreamDefaultWriter(this)) {
              return promiseRejectedWith(defaultWriterBrandCheckException("write"));
            }
            if (this._ownerWritableStream === void 0) {
              return promiseRejectedWith(defaultWriterLockException("write to"));
            }
            return WritableStreamDefaultWriterWrite(this, chunk);
          }
        }
        Object.defineProperties(WritableStreamDefaultWriter.prototype, {
          abort: { enumerable: true },
          close: { enumerable: true },
          releaseLock: { enumerable: true },
          write: { enumerable: true },
          closed: { enumerable: true },
          desiredSize: { enumerable: true },
          ready: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultWriter",
            configurable: true
          });
        }
        function IsWritableStreamDefaultWriter(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultWriter;
        }
        function WritableStreamDefaultWriterAbort(writer, reason) {
          const stream = writer._ownerWritableStream;
          return WritableStreamAbort(stream, reason);
        }
        function WritableStreamDefaultWriterClose(writer) {
          const stream = writer._ownerWritableStream;
          return WritableStreamClose(stream);
        }
        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          return WritableStreamDefaultWriterClose(writer);
        }
        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
          if (writer._closedPromiseState === "pending") {
            defaultWriterClosedPromiseReject(writer, error2);
          } else {
            defaultWriterClosedPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
          if (writer._readyPromiseState === "pending") {
            defaultWriterReadyPromiseReject(writer, error2);
          } else {
            defaultWriterReadyPromiseResetToRejected(writer, error2);
          }
        }
        function WritableStreamDefaultWriterGetDesiredSize(writer) {
          const stream = writer._ownerWritableStream;
          const state = stream._state;
          if (state === "errored" || state === "erroring") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
        }
        function WritableStreamDefaultWriterRelease(writer) {
          const stream = writer._ownerWritableStream;
          const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);
          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
          stream._writer = void 0;
          writer._ownerWritableStream = void 0;
        }
        function WritableStreamDefaultWriterWrite(writer, chunk) {
          const stream = writer._ownerWritableStream;
          const controller = stream._writableStreamController;
          const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
          if (stream !== writer._ownerWritableStream) {
            return promiseRejectedWith(defaultWriterLockException("write to"));
          }
          const state = stream._state;
          if (state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed") {
            return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
          }
          if (state === "erroring") {
            return promiseRejectedWith(stream._storedError);
          }
          const promise = WritableStreamAddWriteRequest(stream);
          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
          return promise;
        }
        const closeSentinel = {};
        class WritableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get abortReason() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("abortReason");
            }
            return this._abortReason;
          }
          get signal() {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("signal");
            }
            if (this._abortController === void 0) {
              throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
            }
            return this._abortController.signal;
          }
          error(e = void 0) {
            if (!IsWritableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$2("error");
            }
            const state = this._controlledWritableStream._state;
            if (state !== "writable") {
              return;
            }
            WritableStreamDefaultControllerError(this, e);
          }
          [AbortSteps](reason) {
            const result = this._abortAlgorithm(reason);
            WritableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [ErrorSteps]() {
            ResetQueue(this);
          }
        }
        Object.defineProperties(WritableStreamDefaultController.prototype, {
          error: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "WritableStreamDefaultController",
            configurable: true
          });
        }
        function IsWritableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream")) {
            return false;
          }
          return x instanceof WritableStreamDefaultController;
        }
        function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledWritableStream = stream;
          stream._writableStreamController = controller;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._abortReason = void 0;
          controller._abortController = createAbortController();
          controller._started = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._writeAlgorithm = writeAlgorithm;
          controller._closeAlgorithm = closeAlgorithm;
          controller._abortAlgorithm = abortAlgorithm;
          const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
          const startResult = startAlgorithm();
          const startPromise = promiseResolvedWith(startResult);
          uponPromise(startPromise, () => {
            controller._started = true;
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (r) => {
            controller._started = true;
            WritableStreamDealWithRejection(stream, r);
          });
        }
        function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(WritableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let writeAlgorithm = () => promiseResolvedWith(void 0);
          let closeAlgorithm = () => promiseResolvedWith(void 0);
          let abortAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSink.start !== void 0) {
            startAlgorithm = () => underlyingSink.start(controller);
          }
          if (underlyingSink.write !== void 0) {
            writeAlgorithm = (chunk) => underlyingSink.write(chunk, controller);
          }
          if (underlyingSink.close !== void 0) {
            closeAlgorithm = () => underlyingSink.close();
          }
          if (underlyingSink.abort !== void 0) {
            abortAlgorithm = (reason) => underlyingSink.abort(reason);
          }
          SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function WritableStreamDefaultControllerClearAlgorithms(controller) {
          controller._writeAlgorithm = void 0;
          controller._closeAlgorithm = void 0;
          controller._abortAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function WritableStreamDefaultControllerClose(controller) {
          EnqueueValueWithSize(controller, closeSentinel, 0);
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
          try {
            return controller._strategySizeAlgorithm(chunk);
          } catch (chunkSizeE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
            return 1;
          }
        }
        function WritableStreamDefaultControllerGetDesiredSize(controller) {
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
          try {
            EnqueueValueWithSize(controller, chunk, chunkSize);
          } catch (enqueueE) {
            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
            return;
          }
          const stream = controller._controlledWritableStream;
          if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }
        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
          const stream = controller._controlledWritableStream;
          if (!controller._started) {
            return;
          }
          if (stream._inFlightWriteRequest !== void 0) {
            return;
          }
          const state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length === 0) {
            return;
          }
          const value = PeekQueueValue(controller);
          if (value === closeSentinel) {
            WritableStreamDefaultControllerProcessClose(controller);
          } else {
            WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
        function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
          if (controller._controlledWritableStream._state === "writable") {
            WritableStreamDefaultControllerError(controller, error2);
          }
        }
        function WritableStreamDefaultControllerProcessClose(controller) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkCloseRequestInFlight(stream);
          DequeueValue(controller);
          const sinkClosePromise = controller._closeAlgorithm();
          WritableStreamDefaultControllerClearAlgorithms(controller);
          uponPromise(sinkClosePromise, () => {
            WritableStreamFinishInFlightClose(stream);
          }, (reason) => {
            WritableStreamFinishInFlightCloseWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
          const stream = controller._controlledWritableStream;
          WritableStreamMarkFirstWriteRequestInFlight(stream);
          const sinkWritePromise = controller._writeAlgorithm(chunk);
          uponPromise(sinkWritePromise, () => {
            WritableStreamFinishInFlightWrite(stream);
            const state = stream._state;
            DequeueValue(controller);
            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
              const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
              WritableStreamUpdateBackpressure(stream, backpressure);
            }
            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
          }, (reason) => {
            if (stream._state === "writable") {
              WritableStreamDefaultControllerClearAlgorithms(controller);
            }
            WritableStreamFinishInFlightWriteWithError(stream, reason);
          });
        }
        function WritableStreamDefaultControllerGetBackpressure(controller) {
          const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
          return desiredSize <= 0;
        }
        function WritableStreamDefaultControllerError(controller, error2) {
          const stream = controller._controlledWritableStream;
          WritableStreamDefaultControllerClearAlgorithms(controller);
          WritableStreamStartErroring(stream, error2);
        }
        function streamBrandCheckException$2(name3) {
          return new TypeError(`WritableStream.prototype.${name3} can only be used on a WritableStream`);
        }
        function defaultControllerBrandCheckException$2(name3) {
          return new TypeError(`WritableStreamDefaultController.prototype.${name3} can only be used on a WritableStreamDefaultController`);
        }
        function defaultWriterBrandCheckException(name3) {
          return new TypeError(`WritableStreamDefaultWriter.prototype.${name3} can only be used on a WritableStreamDefaultWriter`);
        }
        function defaultWriterLockException(name3) {
          return new TypeError("Cannot " + name3 + " a stream using a released writer");
        }
        function defaultWriterClosedPromiseInitialize(writer) {
          writer._closedPromise = newPromise((resolve2, reject) => {
            writer._closedPromise_resolve = resolve2;
            writer._closedPromise_reject = reject;
            writer._closedPromiseState = "pending";
          });
        }
        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseReject(writer, reason);
        }
        function defaultWriterClosedPromiseInitializeAsResolved(writer) {
          defaultWriterClosedPromiseInitialize(writer);
          defaultWriterClosedPromiseResolve(writer);
        }
        function defaultWriterClosedPromiseReject(writer, reason) {
          if (writer._closedPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._closedPromise);
          writer._closedPromise_reject(reason);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "rejected";
        }
        function defaultWriterClosedPromiseResetToRejected(writer, reason) {
          defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterClosedPromiseResolve(writer) {
          if (writer._closedPromise_resolve === void 0) {
            return;
          }
          writer._closedPromise_resolve(void 0);
          writer._closedPromise_resolve = void 0;
          writer._closedPromise_reject = void 0;
          writer._closedPromiseState = "resolved";
        }
        function defaultWriterReadyPromiseInitialize(writer) {
          writer._readyPromise = newPromise((resolve2, reject) => {
            writer._readyPromise_resolve = resolve2;
            writer._readyPromise_reject = reject;
          });
          writer._readyPromiseState = "pending";
        }
        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseReject(writer, reason);
        }
        function defaultWriterReadyPromiseInitializeAsResolved(writer) {
          defaultWriterReadyPromiseInitialize(writer);
          defaultWriterReadyPromiseResolve(writer);
        }
        function defaultWriterReadyPromiseReject(writer, reason) {
          if (writer._readyPromise_reject === void 0) {
            return;
          }
          setPromiseIsHandledToTrue(writer._readyPromise);
          writer._readyPromise_reject(reason);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "rejected";
        }
        function defaultWriterReadyPromiseReset(writer) {
          defaultWriterReadyPromiseInitialize(writer);
        }
        function defaultWriterReadyPromiseResetToRejected(writer, reason) {
          defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
        }
        function defaultWriterReadyPromiseResolve(writer) {
          if (writer._readyPromise_resolve === void 0) {
            return;
          }
          writer._readyPromise_resolve(void 0);
          writer._readyPromise_resolve = void 0;
          writer._readyPromise_reject = void 0;
          writer._readyPromiseState = "fulfilled";
        }
        const NativeDOMException = typeof DOMException !== "undefined" ? DOMException : void 0;
        function isDOMExceptionConstructor(ctor) {
          if (!(typeof ctor === "function" || typeof ctor === "object")) {
            return false;
          }
          try {
            new ctor();
            return true;
          } catch (_a) {
            return false;
          }
        }
        function createDOMExceptionPolyfill() {
          const ctor = function DOMException2(message, name3) {
            this.message = message || "";
            this.name = name3 || "Error";
            if (Error.captureStackTrace) {
              Error.captureStackTrace(this, this.constructor);
            }
          };
          ctor.prototype = Object.create(Error.prototype);
          Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: true, configurable: true });
          return ctor;
        }
        const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
        function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
          const reader = AcquireReadableStreamDefaultReader(source);
          const writer = AcquireWritableStreamDefaultWriter(dest);
          source._disturbed = true;
          let shuttingDown = false;
          let currentWrite = promiseResolvedWith(void 0);
          return newPromise((resolve2, reject) => {
            let abortAlgorithm;
            if (signal !== void 0) {
              abortAlgorithm = () => {
                const error2 = new DOMException$1("Aborted", "AbortError");
                const actions = [];
                if (!preventAbort) {
                  actions.push(() => {
                    if (dest._state === "writable") {
                      return WritableStreamAbort(dest, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                if (!preventCancel) {
                  actions.push(() => {
                    if (source._state === "readable") {
                      return ReadableStreamCancel(source, error2);
                    }
                    return promiseResolvedWith(void 0);
                  });
                }
                shutdownWithAction(() => Promise.all(actions.map((action) => action())), true, error2);
              };
              if (signal.aborted) {
                abortAlgorithm();
                return;
              }
              signal.addEventListener("abort", abortAlgorithm);
            }
            function pipeLoop() {
              return newPromise((resolveLoop, rejectLoop) => {
                function next(done) {
                  if (done) {
                    resolveLoop();
                  } else {
                    PerformPromiseThen(pipeStep(), next, rejectLoop);
                  }
                }
                next(false);
              });
            }
            function pipeStep() {
              if (shuttingDown) {
                return promiseResolvedWith(true);
              }
              return PerformPromiseThen(writer._readyPromise, () => {
                return newPromise((resolveRead, rejectRead) => {
                  ReadableStreamDefaultReaderRead(reader, {
                    _chunkSteps: (chunk) => {
                      currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop3);
                      resolveRead(false);
                    },
                    _closeSteps: () => resolveRead(true),
                    _errorSteps: rejectRead
                  });
                });
              });
            }
            isOrBecomesErrored(source, reader._closedPromise, (storedError) => {
              if (!preventAbort) {
                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesErrored(dest, writer._closedPromise, (storedError) => {
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);
              } else {
                shutdown(true, storedError);
              }
            });
            isOrBecomesClosed(source, reader._closedPromise, () => {
              if (!preventClose) {
                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));
              } else {
                shutdown();
              }
            });
            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
              const destClosed = new TypeError("the destination writable stream closed before all data could be piped to it");
              if (!preventCancel) {
                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);
              } else {
                shutdown(true, destClosed);
              }
            }
            setPromiseIsHandledToTrue(pipeLoop());
            function waitForWritesToFinish() {
              const oldCurrentWrite = currentWrite;
              return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0);
            }
            function isOrBecomesErrored(stream, promise, action) {
              if (stream._state === "errored") {
                action(stream._storedError);
              } else {
                uponRejection(promise, action);
              }
            }
            function isOrBecomesClosed(stream, promise, action) {
              if (stream._state === "closed") {
                action();
              } else {
                uponFulfillment(promise, action);
              }
            }
            function shutdownWithAction(action, originalIsError, originalError) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), doTheRest);
              } else {
                doTheRest();
              }
              function doTheRest() {
                uponPromise(action(), () => finalize(originalIsError, originalError), (newError) => finalize(true, newError));
              }
            }
            function shutdown(isError, error2) {
              if (shuttingDown) {
                return;
              }
              shuttingDown = true;
              if (dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest)) {
                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error2));
              } else {
                finalize(isError, error2);
              }
            }
            function finalize(isError, error2) {
              WritableStreamDefaultWriterRelease(writer);
              ReadableStreamReaderGenericRelease(reader);
              if (signal !== void 0) {
                signal.removeEventListener("abort", abortAlgorithm);
              }
              if (isError) {
                reject(error2);
              } else {
                resolve2(void 0);
              }
            }
          });
        }
        class ReadableStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("desiredSize");
            }
            return ReadableStreamDefaultControllerGetDesiredSize(this);
          }
          close() {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("close");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits close");
            }
            ReadableStreamDefaultControllerClose(this);
          }
          enqueue(chunk = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("enqueue");
            }
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {
              throw new TypeError("The stream is not in a state that permits enqueue");
            }
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }
          error(e = void 0) {
            if (!IsReadableStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException$1("error");
            }
            ReadableStreamDefaultControllerError(this, e);
          }
          [CancelSteps](reason) {
            ResetQueue(this);
            const result = this._cancelAlgorithm(reason);
            ReadableStreamDefaultControllerClearAlgorithms(this);
            return result;
          }
          [PullSteps](readRequest) {
            const stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              const chunk = DequeueValue(this);
              if (this._closeRequested && this._queue.length === 0) {
                ReadableStreamDefaultControllerClearAlgorithms(this);
                ReadableStreamClose(stream);
              } else {
                ReadableStreamDefaultControllerCallPullIfNeeded(this);
              }
              readRequest._chunkSteps(chunk);
            } else {
              ReadableStreamAddReadRequest(stream, readRequest);
              ReadableStreamDefaultControllerCallPullIfNeeded(this);
            }
          }
        }
        Object.defineProperties(ReadableStreamDefaultController.prototype, {
          close: { enumerable: true },
          enqueue: { enumerable: true },
          error: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStreamDefaultController",
            configurable: true
          });
        }
        function IsReadableStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream")) {
            return false;
          }
          return x instanceof ReadableStreamDefaultController;
        }
        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
          const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
          if (!shouldPull) {
            return;
          }
          if (controller._pulling) {
            controller._pullAgain = true;
            return;
          }
          controller._pulling = true;
          const pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, () => {
            controller._pulling = false;
            if (controller._pullAgain) {
              controller._pullAgain = false;
              ReadableStreamDefaultControllerCallPullIfNeeded(controller);
            }
          }, (e) => {
            ReadableStreamDefaultControllerError(controller, e);
          });
        }
        function ReadableStreamDefaultControllerShouldCallPull(controller) {
          const stream = controller._controlledReadableStream;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return false;
          }
          if (!controller._started) {
            return false;
          }
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            return true;
          }
          const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
          if (desiredSize > 0) {
            return true;
          }
          return false;
        }
        function ReadableStreamDefaultControllerClearAlgorithms(controller) {
          controller._pullAlgorithm = void 0;
          controller._cancelAlgorithm = void 0;
          controller._strategySizeAlgorithm = void 0;
        }
        function ReadableStreamDefaultControllerClose(controller) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          controller._closeRequested = true;
          if (controller._queue.length === 0) {
            ReadableStreamDefaultControllerClearAlgorithms(controller);
            ReadableStreamClose(stream);
          }
        }
        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
            return;
          }
          const stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {
            ReadableStreamFulfillReadRequest(stream, chunk, false);
          } else {
            let chunkSize;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              ReadableStreamDefaultControllerError(controller, chunkSizeE);
              throw chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              ReadableStreamDefaultControllerError(controller, enqueueE);
              throw enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
        function ReadableStreamDefaultControllerError(controller, e) {
          const stream = controller._controlledReadableStream;
          if (stream._state !== "readable") {
            return;
          }
          ResetQueue(controller);
          ReadableStreamDefaultControllerClearAlgorithms(controller);
          ReadableStreamError(stream, e);
        }
        function ReadableStreamDefaultControllerGetDesiredSize(controller) {
          const state = controller._controlledReadableStream._state;
          if (state === "errored") {
            return null;
          }
          if (state === "closed") {
            return 0;
          }
          return controller._strategyHWM - controller._queueTotalSize;
        }
        function ReadableStreamDefaultControllerHasBackpressure(controller) {
          if (ReadableStreamDefaultControllerShouldCallPull(controller)) {
            return false;
          }
          return true;
        }
        function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
          const state = controller._controlledReadableStream._state;
          if (!controller._closeRequested && state === "readable") {
            return true;
          }
          return false;
        }
        function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
          controller._controlledReadableStream = stream;
          controller._queue = void 0;
          controller._queueTotalSize = void 0;
          ResetQueue(controller);
          controller._started = false;
          controller._closeRequested = false;
          controller._pullAgain = false;
          controller._pulling = false;
          controller._strategySizeAlgorithm = sizeAlgorithm;
          controller._strategyHWM = highWaterMark;
          controller._pullAlgorithm = pullAlgorithm;
          controller._cancelAlgorithm = cancelAlgorithm;
          stream._readableStreamController = controller;
          const startResult = startAlgorithm();
          uponPromise(promiseResolvedWith(startResult), () => {
            controller._started = true;
            ReadableStreamDefaultControllerCallPullIfNeeded(controller);
          }, (r) => {
            ReadableStreamDefaultControllerError(controller, r);
          });
        }
        function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          let startAlgorithm = () => void 0;
          let pullAlgorithm = () => promiseResolvedWith(void 0);
          let cancelAlgorithm = () => promiseResolvedWith(void 0);
          if (underlyingSource.start !== void 0) {
            startAlgorithm = () => underlyingSource.start(controller);
          }
          if (underlyingSource.pull !== void 0) {
            pullAlgorithm = () => underlyingSource.pull(controller);
          }
          if (underlyingSource.cancel !== void 0) {
            cancelAlgorithm = (reason) => underlyingSource.cancel(reason);
          }
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
        }
        function defaultControllerBrandCheckException$1(name3) {
          return new TypeError(`ReadableStreamDefaultController.prototype.${name3} can only be used on a ReadableStreamDefaultController`);
        }
        function ReadableStreamTee(stream, cloneForBranch2) {
          if (IsReadableByteStreamController(stream._readableStreamController)) {
            return ReadableByteStreamTee(stream);
          }
          return ReadableStreamDefaultTee(stream);
        }
        function ReadableStreamDefaultTee(stream, cloneForBranch2) {
          const reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function pullAlgorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  const chunk2 = chunk;
                  if (!canceled1) {
                    ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableStreamDefaultControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableStreamDefaultControllerClose(branch2._readableStreamController);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
          }
          branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);
          branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);
          uponRejection(reader._closedPromise, (r) => {
            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);
            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);
            if (!canceled1 || !canceled2) {
              resolveCancelPromise(void 0);
            }
          });
          return [branch1, branch2];
        }
        function ReadableByteStreamTee(stream) {
          let reader = AcquireReadableStreamDefaultReader(stream);
          let reading = false;
          let canceled1 = false;
          let canceled2 = false;
          let reason1;
          let reason2;
          let branch1;
          let branch2;
          let resolveCancelPromise;
          const cancelPromise = newPromise((resolve2) => {
            resolveCancelPromise = resolve2;
          });
          function forwardReaderError(thisReader) {
            uponRejection(thisReader._closedPromise, (r) => {
              if (thisReader !== reader) {
                return;
              }
              ReadableByteStreamControllerError(branch1._readableStreamController, r);
              ReadableByteStreamControllerError(branch2._readableStreamController, r);
              if (!canceled1 || !canceled2) {
                resolveCancelPromise(void 0);
              }
            });
          }
          function pullWithDefaultReader() {
            if (IsReadableStreamBYOBReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamDefaultReader(stream);
              forwardReaderError(reader);
            }
            const readRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const chunk1 = chunk;
                  let chunk2 = chunk;
                  if (!canceled1 && !canceled2) {
                    try {
                      chunk2 = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                  }
                  if (!canceled1) {
                    ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);
                  }
                  if (!canceled2) {
                    ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);
                  }
                });
              },
              _closeSteps: () => {
                reading = false;
                if (!canceled1) {
                  ReadableByteStreamControllerClose(branch1._readableStreamController);
                }
                if (!canceled2) {
                  ReadableByteStreamControllerClose(branch2._readableStreamController);
                }
                if (branch1._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);
                }
                if (branch2._readableStreamController._pendingPullIntos.length > 0) {
                  ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);
                }
                if (!canceled1 || !canceled2) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamDefaultReaderRead(reader, readRequest);
          }
          function pullWithBYOBReader(view, forBranch2) {
            if (IsReadableStreamDefaultReader(reader)) {
              ReadableStreamReaderGenericRelease(reader);
              reader = AcquireReadableStreamBYOBReader(stream);
              forwardReaderError(reader);
            }
            const byobBranch = forBranch2 ? branch2 : branch1;
            const otherBranch = forBranch2 ? branch1 : branch2;
            const readIntoRequest = {
              _chunkSteps: (chunk) => {
                queueMicrotask(() => {
                  reading = false;
                  const byobCanceled = forBranch2 ? canceled2 : canceled1;
                  const otherCanceled = forBranch2 ? canceled1 : canceled2;
                  if (!otherCanceled) {
                    let clonedChunk;
                    try {
                      clonedChunk = CloneAsUint8Array(chunk);
                    } catch (cloneE) {
                      ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);
                      ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);
                      resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                      return;
                    }
                    if (!byobCanceled) {
                      ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                    }
                    ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                  } else if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                });
              },
              _closeSteps: (chunk) => {
                reading = false;
                const byobCanceled = forBranch2 ? canceled2 : canceled1;
                const otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (!byobCanceled) {
                  ReadableByteStreamControllerClose(byobBranch._readableStreamController);
                }
                if (!otherCanceled) {
                  ReadableByteStreamControllerClose(otherBranch._readableStreamController);
                }
                if (chunk !== void 0) {
                  if (!byobCanceled) {
                    ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                  }
                  if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {
                    ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);
                  }
                }
                if (!byobCanceled || !otherCanceled) {
                  resolveCancelPromise(void 0);
                }
              },
              _errorSteps: () => {
                reading = false;
              }
            };
            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
          }
          function pull1Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, false);
            }
            return promiseResolvedWith(void 0);
          }
          function pull2Algorithm() {
            if (reading) {
              return promiseResolvedWith(void 0);
            }
            reading = true;
            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
            if (byobRequest === null) {
              pullWithDefaultReader();
            } else {
              pullWithBYOBReader(byobRequest._view, true);
            }
            return promiseResolvedWith(void 0);
          }
          function cancel1Algorithm(reason) {
            canceled1 = true;
            reason1 = reason;
            if (canceled2) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function cancel2Algorithm(reason) {
            canceled2 = true;
            reason2 = reason;
            if (canceled1) {
              const compositeReason = CreateArrayFromList([reason1, reason2]);
              const cancelResult = ReadableStreamCancel(stream, compositeReason);
              resolveCancelPromise(cancelResult);
            }
            return cancelPromise;
          }
          function startAlgorithm() {
            return;
          }
          branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);
          branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);
          forwardReaderError(reader);
          return [branch1, branch2];
        }
        function convertUnderlyingDefaultOrByteSource(source, context) {
          assertDictionary(source, context);
          const original = source;
          const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;
          const cancel = original === null || original === void 0 ? void 0 : original.cancel;
          const pull = original === null || original === void 0 ? void 0 : original.pull;
          const start2 = original === null || original === void 0 ? void 0 : original.start;
          const type3 = original === null || original === void 0 ? void 0 : original.type;
          return {
            autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),
            cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),
            pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),
            start: start2 === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start2, original, `${context} has member 'start' that`),
            type: type3 === void 0 ? void 0 : convertReadableStreamType(type3, `${context} has member 'type' that`)
          };
        }
        function convertUnderlyingSourceCancelCallback(fn, original, context) {
          assertFunction(fn, context);
          return (reason) => promiseCall(fn, original, [reason]);
        }
        function convertUnderlyingSourcePullCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertUnderlyingSourceStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertReadableStreamType(type3, context) {
          type3 = `${type3}`;
          if (type3 !== "bytes") {
            throw new TypeError(`${context} '${type3}' is not a valid enumeration value for ReadableStreamType`);
          }
          return type3;
        }
        function convertReaderOptions(options2, context) {
          assertDictionary(options2, context);
          const mode = options2 === null || options2 === void 0 ? void 0 : options2.mode;
          return {
            mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)
          };
        }
        function convertReadableStreamReaderMode(mode, context) {
          mode = `${mode}`;
          if (mode !== "byob") {
            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);
          }
          return mode;
        }
        function convertIteratorOptions(options2, context) {
          assertDictionary(options2, context);
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          return { preventCancel: Boolean(preventCancel) };
        }
        function convertPipeOptions(options2, context) {
          assertDictionary(options2, context);
          const preventAbort = options2 === null || options2 === void 0 ? void 0 : options2.preventAbort;
          const preventCancel = options2 === null || options2 === void 0 ? void 0 : options2.preventCancel;
          const preventClose = options2 === null || options2 === void 0 ? void 0 : options2.preventClose;
          const signal = options2 === null || options2 === void 0 ? void 0 : options2.signal;
          if (signal !== void 0) {
            assertAbortSignal(signal, `${context} has member 'signal' that`);
          }
          return {
            preventAbort: Boolean(preventAbort),
            preventCancel: Boolean(preventCancel),
            preventClose: Boolean(preventClose),
            signal
          };
        }
        function assertAbortSignal(signal, context) {
          if (!isAbortSignal2(signal)) {
            throw new TypeError(`${context} is not an AbortSignal.`);
          }
        }
        function convertReadableWritablePair(pair, context) {
          assertDictionary(pair, context);
          const readable = pair === null || pair === void 0 ? void 0 : pair.readable;
          assertRequiredField(readable, "readable", "ReadableWritablePair");
          assertReadableStream(readable, `${context} has member 'readable' that`);
          const writable3 = pair === null || pair === void 0 ? void 0 : pair.writable;
          assertRequiredField(writable3, "writable", "ReadableWritablePair");
          assertWritableStream(writable3, `${context} has member 'writable' that`);
          return { readable, writable: writable3 };
        }
        class ReadableStream2 {
          constructor(rawUnderlyingSource = {}, rawStrategy = {}) {
            if (rawUnderlyingSource === void 0) {
              rawUnderlyingSource = null;
            } else {
              assertObject(rawUnderlyingSource, "First parameter");
            }
            const strategy = convertQueuingStrategy(rawStrategy, "Second parameter");
            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            InitializeReadableStream(this);
            if (underlyingSource.type === "bytes") {
              if (strategy.size !== void 0) {
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              }
              const highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              const sizeAlgorithm = ExtractSizeAlgorithm(strategy);
              const highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          get locked() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("locked");
            }
            return IsReadableStreamLocked(this);
          }
          cancel(reason = void 0) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("cancel"));
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"));
            }
            return ReadableStreamCancel(this, reason);
          }
          getReader(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("getReader");
            }
            const options2 = convertReaderOptions(rawOptions, "First parameter");
            if (options2.mode === void 0) {
              return AcquireReadableStreamDefaultReader(this);
            }
            return AcquireReadableStreamBYOBReader(this);
          }
          pipeThrough(rawTransform, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("pipeThrough");
            }
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            const transform = convertReadableWritablePair(rawTransform, "First parameter");
            const options2 = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            }
            if (IsWritableStreamLocked(transform.writable)) {
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            }
            const promise = ReadableStreamPipeTo(this, transform.writable, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
            setPromiseIsHandledToTrue(promise);
            return transform.readable;
          }
          pipeTo(destination, rawOptions = {}) {
            if (!IsReadableStream(this)) {
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            }
            if (destination === void 0) {
              return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);
            }
            if (!IsWritableStream(destination)) {
              return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));
            }
            let options2;
            try {
              options2 = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e) {
              return promiseRejectedWith(e);
            }
            if (IsReadableStreamLocked(this)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"));
            }
            if (IsWritableStreamLocked(destination)) {
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"));
            }
            return ReadableStreamPipeTo(this, destination, options2.preventClose, options2.preventAbort, options2.preventCancel, options2.signal);
          }
          tee() {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("tee");
            }
            const branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }
          values(rawOptions = void 0) {
            if (!IsReadableStream(this)) {
              throw streamBrandCheckException$1("values");
            }
            const options2 = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options2.preventCancel);
          }
        }
        Object.defineProperties(ReadableStream2.prototype, {
          cancel: { enumerable: true },
          getReader: { enumerable: true },
          pipeThrough: { enumerable: true },
          pipeTo: { enumerable: true },
          tee: { enumerable: true },
          values: { enumerable: true },
          locked: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "ReadableStream",
            configurable: true
          });
        }
        if (typeof SymbolPolyfill.asyncIterator === "symbol") {
          Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
            value: ReadableStream2.prototype.values,
            writable: true,
            configurable: true
          });
        }
        function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableStreamDefaultController.prototype);
          SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
          return stream;
        }
        function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
          const stream = Object.create(ReadableStream2.prototype);
          InitializeReadableStream(stream);
          const controller = Object.create(ReadableByteStreamController.prototype);
          SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0);
          return stream;
        }
        function InitializeReadableStream(stream) {
          stream._state = "readable";
          stream._reader = void 0;
          stream._storedError = void 0;
          stream._disturbed = false;
        }
        function IsReadableStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_readableStreamController")) {
            return false;
          }
          return x instanceof ReadableStream2;
        }
        function IsReadableStreamLocked(stream) {
          if (stream._reader === void 0) {
            return false;
          }
          return true;
        }
        function ReadableStreamCancel(stream, reason) {
          stream._disturbed = true;
          if (stream._state === "closed") {
            return promiseResolvedWith(void 0);
          }
          if (stream._state === "errored") {
            return promiseRejectedWith(stream._storedError);
          }
          ReadableStreamClose(stream);
          const reader = stream._reader;
          if (reader !== void 0 && IsReadableStreamBYOBReader(reader)) {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._closeSteps(void 0);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
          const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
          return transformPromiseWith(sourceCancelPromise, noop3);
        }
        function ReadableStreamClose(stream) {
          stream._state = "closed";
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseResolve(reader);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._closeSteps();
            });
            reader._readRequests = new SimpleQueue();
          }
        }
        function ReadableStreamError(stream, e) {
          stream._state = "errored";
          stream._storedError = e;
          const reader = stream._reader;
          if (reader === void 0) {
            return;
          }
          defaultReaderClosedPromiseReject(reader, e);
          if (IsReadableStreamDefaultReader(reader)) {
            reader._readRequests.forEach((readRequest) => {
              readRequest._errorSteps(e);
            });
            reader._readRequests = new SimpleQueue();
          } else {
            reader._readIntoRequests.forEach((readIntoRequest) => {
              readIntoRequest._errorSteps(e);
            });
            reader._readIntoRequests = new SimpleQueue();
          }
        }
        function streamBrandCheckException$1(name3) {
          return new TypeError(`ReadableStream.prototype.${name3} can only be used on a ReadableStream`);
        }
        function convertQueuingStrategyInit(init3, context) {
          assertDictionary(init3, context);
          const highWaterMark = init3 === null || init3 === void 0 ? void 0 : init3.highWaterMark;
          assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit");
          return {
            highWaterMark: convertUnrestrictedDouble(highWaterMark)
          };
        }
        const byteLengthSizeFunction = (chunk) => {
          return chunk.byteLength;
        };
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class ByteLengthQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "ByteLengthQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._byteLengthQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("highWaterMark");
            }
            return this._byteLengthQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsByteLengthQueuingStrategy(this)) {
              throw byteLengthBrandCheckException("size");
            }
            return byteLengthSizeFunction;
          }
        }
        Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "ByteLengthQueuingStrategy",
            configurable: true
          });
        }
        function byteLengthBrandCheckException(name3) {
          return new TypeError(`ByteLengthQueuingStrategy.prototype.${name3} can only be used on a ByteLengthQueuingStrategy`);
        }
        function IsByteLengthQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof ByteLengthQueuingStrategy;
        }
        const countSizeFunction = () => {
          return 1;
        };
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: true
        });
        class CountQueuingStrategy {
          constructor(options2) {
            assertRequiredArgument(options2, 1, "CountQueuingStrategy");
            options2 = convertQueuingStrategyInit(options2, "First parameter");
            this._countQueuingStrategyHighWaterMark = options2.highWaterMark;
          }
          get highWaterMark() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("highWaterMark");
            }
            return this._countQueuingStrategyHighWaterMark;
          }
          get size() {
            if (!IsCountQueuingStrategy(this)) {
              throw countBrandCheckException("size");
            }
            return countSizeFunction;
          }
        }
        Object.defineProperties(CountQueuingStrategy.prototype, {
          highWaterMark: { enumerable: true },
          size: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
            value: "CountQueuingStrategy",
            configurable: true
          });
        }
        function countBrandCheckException(name3) {
          return new TypeError(`CountQueuingStrategy.prototype.${name3} can only be used on a CountQueuingStrategy`);
        }
        function IsCountQueuingStrategy(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark")) {
            return false;
          }
          return x instanceof CountQueuingStrategy;
        }
        function convertTransformer(original, context) {
          assertDictionary(original, context);
          const flush = original === null || original === void 0 ? void 0 : original.flush;
          const readableType = original === null || original === void 0 ? void 0 : original.readableType;
          const start2 = original === null || original === void 0 ? void 0 : original.start;
          const transform = original === null || original === void 0 ? void 0 : original.transform;
          const writableType = original === null || original === void 0 ? void 0 : original.writableType;
          return {
            flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),
            readableType,
            start: start2 === void 0 ? void 0 : convertTransformerStartCallback(start2, original, `${context} has member 'start' that`),
            transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),
            writableType
          };
        }
        function convertTransformerFlushCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => promiseCall(fn, original, [controller]);
        }
        function convertTransformerStartCallback(fn, original, context) {
          assertFunction(fn, context);
          return (controller) => reflectCall(fn, original, [controller]);
        }
        function convertTransformerTransformCallback(fn, original, context) {
          assertFunction(fn, context);
          return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);
        }
        class TransformStream2 {
          constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {
            if (rawTransformer === void 0) {
              rawTransformer = null;
            }
            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter");
            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter");
            const transformer2 = convertTransformer(rawTransformer, "First parameter");
            if (transformer2.readableType !== void 0) {
              throw new RangeError("Invalid readableType specified");
            }
            if (transformer2.writableType !== void 0) {
              throw new RangeError("Invalid writableType specified");
            }
            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);
            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);
            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
            let startPromise_resolve;
            const startPromise = newPromise((resolve2) => {
              startPromise_resolve = resolve2;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer2);
            if (transformer2.start !== void 0) {
              startPromise_resolve(transformer2.start(this._transformStreamController));
            } else {
              startPromise_resolve(void 0);
            }
          }
          get readable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("readable");
            }
            return this._readable;
          }
          get writable() {
            if (!IsTransformStream(this)) {
              throw streamBrandCheckException("writable");
            }
            return this._writable;
          }
        }
        Object.defineProperties(TransformStream2.prototype, {
          readable: { enumerable: true },
          writable: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStream2.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStream",
            configurable: true
          });
        }
        function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
          function startAlgorithm() {
            return startPromise;
          }
          function writeAlgorithm(chunk) {
            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
          }
          function abortAlgorithm(reason) {
            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
          }
          function closeAlgorithm() {
            return TransformStreamDefaultSinkCloseAlgorithm(stream);
          }
          stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
          function pullAlgorithm() {
            return TransformStreamDefaultSourcePullAlgorithm(stream);
          }
          function cancelAlgorithm(reason) {
            TransformStreamErrorWritableAndUnblockWrite(stream, reason);
            return promiseResolvedWith(void 0);
          }
          stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
          stream._backpressure = void 0;
          stream._backpressureChangePromise = void 0;
          stream._backpressureChangePromise_resolve = void 0;
          TransformStreamSetBackpressure(stream, true);
          stream._transformStreamController = void 0;
        }
        function IsTransformStream(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_transformStreamController")) {
            return false;
          }
          return x instanceof TransformStream2;
        }
        function TransformStreamError(stream, e) {
          ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);
          TransformStreamErrorWritableAndUnblockWrite(stream, e);
        }
        function TransformStreamErrorWritableAndUnblockWrite(stream, e) {
          TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);
          WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);
          if (stream._backpressure) {
            TransformStreamSetBackpressure(stream, false);
          }
        }
        function TransformStreamSetBackpressure(stream, backpressure) {
          if (stream._backpressureChangePromise !== void 0) {
            stream._backpressureChangePromise_resolve();
          }
          stream._backpressureChangePromise = newPromise((resolve2) => {
            stream._backpressureChangePromise_resolve = resolve2;
          });
          stream._backpressure = backpressure;
        }
        class TransformStreamDefaultController {
          constructor() {
            throw new TypeError("Illegal constructor");
          }
          get desiredSize() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("desiredSize");
            }
            const readableController = this._controlledTransformStream._readable._readableStreamController;
            return ReadableStreamDefaultControllerGetDesiredSize(readableController);
          }
          enqueue(chunk = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("enqueue");
            }
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }
          error(reason = void 0) {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("error");
            }
            TransformStreamDefaultControllerError(this, reason);
          }
          terminate() {
            if (!IsTransformStreamDefaultController(this)) {
              throw defaultControllerBrandCheckException("terminate");
            }
            TransformStreamDefaultControllerTerminate(this);
          }
        }
        Object.defineProperties(TransformStreamDefaultController.prototype, {
          enqueue: { enumerable: true },
          error: { enumerable: true },
          terminate: { enumerable: true },
          desiredSize: { enumerable: true }
        });
        if (typeof SymbolPolyfill.toStringTag === "symbol") {
          Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
            value: "TransformStreamDefaultController",
            configurable: true
          });
        }
        function IsTransformStreamDefaultController(x) {
          if (!typeIsObject(x)) {
            return false;
          }
          if (!Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream")) {
            return false;
          }
          return x instanceof TransformStreamDefaultController;
        }
        function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
          controller._controlledTransformStream = stream;
          stream._transformStreamController = controller;
          controller._transformAlgorithm = transformAlgorithm;
          controller._flushAlgorithm = flushAlgorithm;
        }
        function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer2) {
          const controller = Object.create(TransformStreamDefaultController.prototype);
          let transformAlgorithm = (chunk) => {
            try {
              TransformStreamDefaultControllerEnqueue(controller, chunk);
              return promiseResolvedWith(void 0);
            } catch (transformResultE) {
              return promiseRejectedWith(transformResultE);
            }
          };
          let flushAlgorithm = () => promiseResolvedWith(void 0);
          if (transformer2.transform !== void 0) {
            transformAlgorithm = (chunk) => transformer2.transform(chunk, controller);
          }
          if (transformer2.flush !== void 0) {
            flushAlgorithm = () => transformer2.flush(controller);
          }
          SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
        }
        function TransformStreamDefaultControllerClearAlgorithms(controller) {
          controller._transformAlgorithm = void 0;
          controller._flushAlgorithm = void 0;
        }
        function TransformStreamDefaultControllerEnqueue(controller, chunk) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {
            throw new TypeError("Readable side is not in a state that permits enqueue");
          }
          try {
            ReadableStreamDefaultControllerEnqueue(readableController, chunk);
          } catch (e) {
            TransformStreamErrorWritableAndUnblockWrite(stream, e);
            throw stream._readable._storedError;
          }
          const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
          if (backpressure !== stream._backpressure) {
            TransformStreamSetBackpressure(stream, true);
          }
        }
        function TransformStreamDefaultControllerError(controller, e) {
          TransformStreamError(controller._controlledTransformStream, e);
        }
        function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
          const transformPromise = controller._transformAlgorithm(chunk);
          return transformPromiseWith(transformPromise, void 0, (r) => {
            TransformStreamError(controller._controlledTransformStream, r);
            throw r;
          });
        }
        function TransformStreamDefaultControllerTerminate(controller) {
          const stream = controller._controlledTransformStream;
          const readableController = stream._readable._readableStreamController;
          ReadableStreamDefaultControllerClose(readableController);
          const error2 = new TypeError("TransformStream terminated");
          TransformStreamErrorWritableAndUnblockWrite(stream, error2);
        }
        function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
          const controller = stream._transformStreamController;
          if (stream._backpressure) {
            const backpressureChangePromise = stream._backpressureChangePromise;
            return transformPromiseWith(backpressureChangePromise, () => {
              const writable3 = stream._writable;
              const state = writable3._state;
              if (state === "erroring") {
                throw writable3._storedError;
              }
              return TransformStreamDefaultControllerPerformTransform(controller, chunk);
            });
          }
          return TransformStreamDefaultControllerPerformTransform(controller, chunk);
        }
        function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
          TransformStreamError(stream, reason);
          return promiseResolvedWith(void 0);
        }
        function TransformStreamDefaultSinkCloseAlgorithm(stream) {
          const readable = stream._readable;
          const controller = stream._transformStreamController;
          const flushPromise = controller._flushAlgorithm();
          TransformStreamDefaultControllerClearAlgorithms(controller);
          return transformPromiseWith(flushPromise, () => {
            if (readable._state === "errored") {
              throw readable._storedError;
            }
            ReadableStreamDefaultControllerClose(readable._readableStreamController);
          }, (r) => {
            TransformStreamError(stream, r);
            throw readable._storedError;
          });
        }
        function TransformStreamDefaultSourcePullAlgorithm(stream) {
          TransformStreamSetBackpressure(stream, false);
          return stream._backpressureChangePromise;
        }
        function defaultControllerBrandCheckException(name3) {
          return new TypeError(`TransformStreamDefaultController.prototype.${name3} can only be used on a TransformStreamDefaultController`);
        }
        function streamBrandCheckException(name3) {
          return new TypeError(`TransformStream.prototype.${name3} can only be used on a TransformStream`);
        }
        exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;
        exports2.CountQueuingStrategy = CountQueuingStrategy;
        exports2.ReadableByteStreamController = ReadableByteStreamController;
        exports2.ReadableStream = ReadableStream2;
        exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader;
        exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;
        exports2.ReadableStreamDefaultController = ReadableStreamDefaultController;
        exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader;
        exports2.TransformStream = TransformStream2;
        exports2.TransformStreamDefaultController = TransformStreamDefaultController;
        exports2.WritableStream = WritableStream;
        exports2.WritableStreamDefaultController = WritableStreamDefaultController;
        exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter;
        Object.defineProperty(exports2, "__esModule", { value: true });
      });
    })(ponyfill_es2018, ponyfill_es2018.exports);
    POOL_SIZE$1 = 65536;
    if (!globalThis.ReadableStream) {
      try {
        const process2 = require("node:process");
        const { emitWarning } = process2;
        try {
          process2.emitWarning = () => {
          };
          Object.assign(globalThis, require("node:stream/web"));
          process2.emitWarning = emitWarning;
        } catch (error2) {
          process2.emitWarning = emitWarning;
          throw error2;
        }
      } catch (error2) {
        Object.assign(globalThis, ponyfill_es2018.exports);
      }
    }
    try {
      const { Blob: Blob3 } = require("buffer");
      if (Blob3 && !Blob3.prototype.stream) {
        Blob3.prototype.stream = function name3(params) {
          let position = 0;
          const blob = this;
          return new ReadableStream({
            type: "bytes",
            async pull(ctrl) {
              const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));
              const buffer = await chunk.arrayBuffer();
              position += buffer.byteLength;
              ctrl.enqueue(new Uint8Array(buffer));
              if (position === blob.size) {
                ctrl.close();
              }
            }
          });
        };
      }
    } catch (error2) {
    }
    POOL_SIZE = 65536;
    _Blob = class Blob {
      #parts = [];
      #type = "";
      #size = 0;
      constructor(blobParts = [], options2 = {}) {
        if (typeof blobParts !== "object" || blobParts === null) {
          throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        }
        if (typeof blobParts[Symbol.iterator] !== "function") {
          throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        }
        if (typeof options2 !== "object" && typeof options2 !== "function") {
          throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        }
        if (options2 === null)
          options2 = {};
        const encoder = new TextEncoder();
        for (const element of blobParts) {
          let part;
          if (ArrayBuffer.isView(element)) {
            part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));
          } else if (element instanceof ArrayBuffer) {
            part = new Uint8Array(element.slice(0));
          } else if (element instanceof Blob) {
            part = element;
          } else {
            part = encoder.encode(element);
          }
          this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;
          this.#parts.push(part);
        }
        const type3 = options2.type === void 0 ? "" : String(options2.type);
        this.#type = /^[\x20-\x7E]*$/.test(type3) ? type3 : "";
      }
      get size() {
        return this.#size;
      }
      get type() {
        return this.#type;
      }
      async text() {
        const decoder = new TextDecoder();
        let str = "";
        for await (const part of toIterator(this.#parts, false)) {
          str += decoder.decode(part, { stream: true });
        }
        str += decoder.decode();
        return str;
      }
      async arrayBuffer() {
        const data = new Uint8Array(this.size);
        let offset = 0;
        for await (const chunk of toIterator(this.#parts, false)) {
          data.set(chunk, offset);
          offset += chunk.length;
        }
        return data.buffer;
      }
      stream() {
        const it = toIterator(this.#parts, true);
        return new globalThis.ReadableStream({
          type: "bytes",
          async pull(ctrl) {
            const chunk = await it.next();
            chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);
          },
          async cancel() {
            await it.return();
          }
        });
      }
      slice(start2 = 0, end = this.size, type3 = "") {
        const { size } = this;
        let relativeStart = start2 < 0 ? Math.max(size + start2, 0) : Math.min(start2, size);
        let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);
        const span = Math.max(relativeEnd - relativeStart, 0);
        const parts = this.#parts;
        const blobParts = [];
        let added = 0;
        for (const part of parts) {
          if (added >= span) {
            break;
          }
          const size2 = ArrayBuffer.isView(part) ? part.byteLength : part.size;
          if (relativeStart && size2 <= relativeStart) {
            relativeStart -= size2;
            relativeEnd -= size2;
          } else {
            let chunk;
            if (ArrayBuffer.isView(part)) {
              chunk = part.subarray(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.byteLength;
            } else {
              chunk = part.slice(relativeStart, Math.min(size2, relativeEnd));
              added += chunk.size;
            }
            relativeEnd -= size2;
            blobParts.push(chunk);
            relativeStart = 0;
          }
        }
        const blob = new Blob([], { type: String(type3).toLowerCase() });
        blob.#size = span;
        blob.#parts = blobParts;
        return blob;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](object2) {
        return object2 && typeof object2 === "object" && typeof object2.constructor === "function" && (typeof object2.stream === "function" || typeof object2.arrayBuffer === "function") && /^(Blob|File)$/.test(object2[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(_Blob.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Blob2 = _Blob;
    Blob$1 = Blob2;
    FetchBaseError = class extends Error {
      constructor(message, type3) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.type = type3;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    FetchError = class extends FetchBaseError {
      constructor(message, type3, systemError) {
        super(message, type3);
        if (systemError) {
          this.code = this.errno = systemError.code;
          this.erroredSysCall = systemError.syscall;
        }
      }
    };
    NAME = Symbol.toStringTag;
    isURLSearchParameters = (object2) => {
      return typeof object2 === "object" && typeof object2.append === "function" && typeof object2.delete === "function" && typeof object2.get === "function" && typeof object2.getAll === "function" && typeof object2.has === "function" && typeof object2.set === "function" && typeof object2.sort === "function" && object2[NAME] === "URLSearchParams";
    };
    isBlob = (object2) => {
      return typeof object2 === "object" && typeof object2.arrayBuffer === "function" && typeof object2.type === "string" && typeof object2.stream === "function" && typeof object2.constructor === "function" && /^(Blob|File)$/.test(object2[NAME]);
    };
    isAbortSignal = (object2) => {
      return typeof object2 === "object" && (object2[NAME] === "AbortSignal" || object2[NAME] === "EventTarget");
    };
    carriage = "\r\n";
    dashes = "-".repeat(2);
    carriageLength = Buffer.byteLength(carriage);
    getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    getBoundary = () => (0, import_crypto.randomBytes)(8).toString("hex");
    INTERNALS$2 = Symbol("Body internals");
    Body = class {
      constructor(body, {
        size = 0
      } = {}) {
        let boundary = null;
        if (body === null) {
          body = null;
        } else if (isURLSearchParameters(body)) {
          body = Buffer.from(body.toString());
        } else if (isBlob(body))
          ;
        else if (Buffer.isBuffer(body))
          ;
        else if (import_util.types.isAnyArrayBuffer(body)) {
          body = Buffer.from(body);
        } else if (ArrayBuffer.isView(body)) {
          body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
        } else if (body instanceof import_stream.default)
          ;
        else if (isFormData(body)) {
          boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          body = import_stream.default.Readable.from(formDataIterator(body, boundary));
        } else {
          body = Buffer.from(String(body));
        }
        this[INTERNALS$2] = {
          body,
          boundary,
          disturbed: false,
          error: null
        };
        this.size = size;
        if (body instanceof import_stream.default) {
          body.on("error", (error_) => {
            const error2 = error_ instanceof FetchBaseError ? error_ : new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, "system", error_);
            this[INTERNALS$2].error = error2;
          });
        }
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      async arrayBuffer() {
        const { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      async blob() {
        const ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].body.type || "";
        const buf = await this.buffer();
        return new Blob$1([buf], {
          type: ct
        });
      }
      async json() {
        const buffer = await consumeBody(this);
        return JSON.parse(buffer.toString());
      }
      async text() {
        const buffer = await consumeBody(this);
        return buffer.toString();
      }
      buffer() {
        return consumeBody(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    clone = (instance, highWaterMark) => {
      let p1;
      let p2;
      let { body } = instance;
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof import_stream.default && typeof body.getBoundary !== "function") {
        p1 = new import_stream.PassThrough({ highWaterMark });
        p2 = new import_stream.PassThrough({ highWaterMark });
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS$2].body = p1;
        body = p2;
      }
      return body;
    };
    extractContentType = (body, request) => {
      if (body === null) {
        return null;
      }
      if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      }
      if (isURLSearchParameters(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      }
      if (isBlob(body)) {
        return body.type || null;
      }
      if (Buffer.isBuffer(body) || import_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {
        return null;
      }
      if (body && typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${body.getBoundary()}`;
      }
      if (isFormData(body)) {
        return `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;
      }
      if (body instanceof import_stream.default) {
        return null;
      }
      return "text/plain;charset=UTF-8";
    };
    getTotalBytes = (request) => {
      const { body } = request;
      if (body === null) {
        return 0;
      }
      if (isBlob(body)) {
        return body.size;
      }
      if (Buffer.isBuffer(body)) {
        return body.length;
      }
      if (body && typeof body.getLengthSync === "function") {
        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;
      }
      if (isFormData(body)) {
        return getFormDataLength(request[INTERNALS$2].boundary);
      }
      return null;
    };
    writeToStream = (dest, { body }) => {
      if (body === null) {
        dest.end();
      } else if (isBlob(body)) {
        import_stream.default.Readable.from(body.stream()).pipe(dest);
      } else if (Buffer.isBuffer(body)) {
        dest.write(body);
        dest.end();
      } else {
        body.pipe(dest);
      }
    };
    validateHeaderName = typeof import_http.default.validateHeaderName === "function" ? import_http.default.validateHeaderName : (name3) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name3)) {
        const error2 = new TypeError(`Header name must be a valid HTTP token [${name3}]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_HTTP_TOKEN" });
        throw error2;
      }
    };
    validateHeaderValue = typeof import_http.default.validateHeaderValue === "function" ? import_http.default.validateHeaderValue : (name3, value) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
        const error2 = new TypeError(`Invalid character in header content ["${name3}"]`);
        Object.defineProperty(error2, "code", { value: "ERR_INVALID_CHAR" });
        throw error2;
      }
    };
    Headers = class extends URLSearchParams {
      constructor(init3) {
        let result = [];
        if (init3 instanceof Headers) {
          const raw = init3.raw();
          for (const [name3, values] of Object.entries(raw)) {
            result.push(...values.map((value) => [name3, value]));
          }
        } else if (init3 == null)
          ;
        else if (typeof init3 === "object" && !import_util.types.isBoxedPrimitive(init3)) {
          const method = init3[Symbol.iterator];
          if (method == null) {
            result.push(...Object.entries(init3));
          } else {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            result = [...init3].map((pair) => {
              if (typeof pair !== "object" || import_util.types.isBoxedPrimitive(pair)) {
                throw new TypeError("Each header pair must be an iterable object");
              }
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              return [...pair];
            });
          }
        } else {
          throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        }
        result = result.length > 0 ? result.map(([name3, value]) => {
          validateHeaderName(name3);
          validateHeaderValue(name3, String(value));
          return [String(name3).toLowerCase(), String(value)];
        }) : void 0;
        super(result);
        return new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name3, value) => {
                  validateHeaderName(name3);
                  validateHeaderValue(name3, String(value));
                  return URLSearchParams.prototype[p].call(target, String(name3).toLowerCase(), String(value));
                };
              case "delete":
              case "has":
              case "getAll":
                return (name3) => {
                  validateHeaderName(name3);
                  return URLSearchParams.prototype[p].call(target, String(name3).toLowerCase());
                };
              case "keys":
                return () => {
                  target.sort();
                  return new Set(URLSearchParams.prototype.keys.call(target)).keys();
                };
              default:
                return Reflect.get(target, p, receiver);
            }
          }
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(name3) {
        const values = this.getAll(name3);
        if (values.length === 0) {
          return null;
        }
        let value = values.join(", ");
        if (/^content-encoding$/i.test(name3)) {
          value = value.toLowerCase();
        }
        return value;
      }
      forEach(callback, thisArg = void 0) {
        for (const name3 of this.keys()) {
          Reflect.apply(callback, thisArg, [this.get(name3), name3, this]);
        }
      }
      *values() {
        for (const name3 of this.keys()) {
          yield this.get(name3);
        }
      }
      *entries() {
        for (const name3 of this.keys()) {
          yield [name3, this.get(name3)];
        }
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((result, key) => {
          result[key] = this.getAll(key);
          return result;
        }, {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((result, key) => {
          const values = this.getAll(key);
          if (key === "host") {
            result[key] = values[0];
          } else {
            result[key] = values.length > 1 ? values : values[0];
          }
          return result;
        }, {});
      }
    };
    Object.defineProperties(Headers.prototype, ["get", "entries", "forEach", "values"].reduce((result, property) => {
      result[property] = { enumerable: true };
      return result;
    }, {}));
    redirectStatus = new Set([301, 302, 303, 307, 308]);
    isRedirect = (code) => {
      return redirectStatus.has(code);
    };
    INTERNALS$1 = Symbol("Response internals");
    Response = class extends Body {
      constructor(body = null, options2 = {}) {
        super(body, options2);
        const status = options2.status != null ? options2.status : 200;
        const headers = new Headers(options2.headers);
        if (body !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          type: "default",
          url: options2.url,
          status,
          statusText: options2.statusText || "",
          headers,
          counter: options2.counter,
          highWaterMark: options2.highWaterMark
        };
      }
      get type() {
        return this[INTERNALS$1].type;
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      clone() {
        return new Response(clone(this, this.highWaterMark), {
          type: this.type,
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected,
          size: this.size
        });
      }
      static redirect(url, status = 302) {
        if (!isRedirect(status)) {
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        }
        return new Response(null, {
          headers: {
            location: new URL(url).toString()
          },
          status
        });
      }
      static error() {
        const response = new Response(null, { status: 0, statusText: "" });
        response[INTERNALS$1].type = "error";
        return response;
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response.prototype, {
      type: { enumerable: true },
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    getSearch = (parsedURL) => {
      if (parsedURL.search) {
        return parsedURL.search;
      }
      const lastOffset = parsedURL.href.length - 1;
      const hash2 = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash2.length] === "?" ? "?" : "";
    };
    INTERNALS = Symbol("Request internals");
    isRequest = (object2) => {
      return typeof object2 === "object" && typeof object2[INTERNALS] === "object";
    };
    Request = class extends Body {
      constructor(input, init3 = {}) {
        let parsedURL;
        if (isRequest(input)) {
          parsedURL = new URL(input.url);
        } else {
          parsedURL = new URL(input);
          input = {};
        }
        let method = init3.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init3.body != null || isRequest(input)) && input.body !== null && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        const inputBody = init3.body ? init3.body : isRequest(input) && input.body !== null ? clone(input) : null;
        super(inputBody, {
          size: init3.size || input.size || 0
        });
        const headers = new Headers(init3.headers || input.headers || {});
        if (inputBody !== null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody, this);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init3) {
          signal = init3.signal;
        }
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        }
        this[INTERNALS] = {
          method,
          redirect: init3.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        };
        this.follow = init3.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init3.follow;
        this.compress = init3.compress === void 0 ? input.compress === void 0 ? true : input.compress : init3.compress;
        this.counter = init3.counter || input.counter || 0;
        this.agent = init3.agent || input.agent;
        this.highWaterMark = init3.highWaterMark || input.highWaterMark || 16384;
        this.insecureHTTPParser = init3.insecureHTTPParser || input.insecureHTTPParser || false;
      }
      get method() {
        return this[INTERNALS].method;
      }
      get url() {
        return (0, import_url.format)(this[INTERNALS].parsedURL);
      }
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      get signal() {
        return this[INTERNALS].signal;
      }
      clone() {
        return new Request(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true }
    });
    getNodeRequestOptions = (request) => {
      const { parsedURL } = request[INTERNALS];
      const headers = new Headers(request[INTERNALS].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method)) {
        contentLengthValue = "0";
      }
      if (request.body !== null) {
        const totalBytes = getTotalBytes(request);
        if (typeof totalBytes === "number" && !Number.isNaN(totalBytes)) {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch");
      }
      if (request.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate,br");
      }
      let { agent } = request;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      if (!headers.has("Connection") && !agent) {
        headers.set("Connection", "close");
      }
      const search = getSearch(parsedURL);
      const requestOptions = {
        path: parsedURL.pathname + search,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
      return requestOptions;
    };
    AbortError = class extends FetchBaseError {
      constructor(message, type3 = "aborted") {
        super(message, type3);
      }
    };
    supportedSchemas = new Set(["data:", "http:", "https:"]);
  }
});

// node_modules/@sveltejs/adapter-vercel/files/shims.js
var init_shims = __esm({
  "node_modules/@sveltejs/adapter-vercel/files/shims.js"() {
    init_install_fetch();
  }
});

// .svelte-kit/output/server/chunks/layout-dcf06324.js
var layout_dcf06324_exports = {};
__export(layout_dcf06324_exports, {
  default: () => Layout
});
var Layout;
var init_layout_dcf06324 = __esm({
  ".svelte-kit/output/server/chunks/layout-dcf06324.js"() {
    init_shims();
    init_app_ca4b120c();
    Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${slots.default ? slots.default({}) : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/error-57931332.js
var error_57931332_exports = {};
__export(error_57931332_exports, {
  default: () => Error2,
  load: () => load
});
function load({ error: error2, status }) {
  return { props: { error: error2, status } };
}
var Error2;
var init_error_57931332 = __esm({
  ".svelte-kit/output/server/chunks/error-57931332.js"() {
    init_shims();
    init_app_ca4b120c();
    Error2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { status } = $$props;
      let { error: error2 } = $$props;
      if ($$props.status === void 0 && $$bindings.status && status !== void 0)
        $$bindings.status(status);
      if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
        $$bindings.error(error2);
      return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
    });
  }
});

// .svelte-kit/output/server/chunks/rto2017_ni_simplified_3dp.geojson-b549cdc6.js
function writable(value, start2 = noop) {
  let stop;
  const subscribers = new Set();
  function set2(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set2(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start2(set2) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set: set2, update, subscribe: subscribe2 };
}
function ascending$1(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
function bisector(f) {
  let delta = f;
  let compare1 = f;
  let compare2 = f;
  if (f.length !== 2) {
    delta = (d, x) => f(d) - x;
    compare1 = ascending$1;
    compare2 = (d, x) => ascending$1(f(d), x);
  }
  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a[mid], x) < 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a[mid], x) <= 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }
  return { left, center, right };
}
function number$1(x) {
  return x === null ? NaN : +x;
}
function intern_get({ _intern, _key }, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value);
  return value;
}
function intern_delete({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}
function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}
function ticks(start2, stop, count) {
  var reverse, i = -1, n, ticks2, step;
  stop = +stop, start2 = +start2, count = +count;
  if (start2 === stop && count > 0)
    return [start2];
  if (reverse = stop < start2)
    n = start2, start2 = stop, stop = n;
  if ((step = tickIncrement(start2, stop, count)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    let r0 = Math.round(start2 / step), r1 = Math.round(stop / step);
    if (r0 * step < start2)
      ++r0;
    if (r1 * step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start2 * step), r1 = Math.round(stop * step);
    if (r0 / step < start2)
      ++r0;
    if (r1 / step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) / step;
  }
  if (reverse)
    ticks2.reverse();
  return ticks2;
}
function tickIncrement(start2, stop, count) {
  var step = (stop - start2) / Math.max(0, count), power = Math.floor(Math.log(step) / Math.LN10), error2 = step / Math.pow(10, power);
  return power >= 0 ? (error2 >= e10 ? 10 : error2 >= e5 ? 5 : error2 >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error2 >= e10 ? 10 : error2 >= e5 ? 5 : error2 >= e2 ? 2 : 1);
}
function tickStep(start2, stop, count) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error2 = step0 / step1;
  if (error2 >= e10)
    step1 *= 10;
  else if (error2 >= e5)
    step1 *= 5;
  else if (error2 >= e2)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}
function* flatten(arrays) {
  for (const array2 of arrays) {
    yield* array2;
  }
}
function merge(arrays) {
  return Array.from(flatten(arrays));
}
function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}
function noop$1() {
}
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}
function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n)
    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}
function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n)
    streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}
function geoStream(object2, stream) {
  if (object2 && streamObjectType.hasOwnProperty(object2.type)) {
    streamObjectType[object2.type](object2, stream);
  } else {
    streamGeometry(object2, stream);
  }
}
function areaRingStart$1() {
  areaStream$1.point = areaPointFirst$1;
}
function areaRingEnd$1() {
  areaPoint$1(lambda00$1, phi00$1);
}
function areaPointFirst$1(lambda, phi) {
  areaStream$1.point = areaPoint$1;
  lambda00$1 = lambda, phi00$1 = phi;
  lambda *= radians, phi *= radians;
  lambda0$1 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);
}
function areaPoint$1(lambda, phi) {
  lambda *= radians, phi *= radians;
  phi = phi / 2 + quarterPi;
  var dLambda = lambda - lambda0$1, sdLambda = dLambda >= 0 ? 1 : -1, adLambda = sdLambda * dLambda, cosPhi = cos(phi), sinPhi = sin(phi), k = sinPhi0 * sinPhi, u = cosPhi0 * cosPhi + k * cos(adLambda), v = k * sdLambda * sin(adLambda);
  areaRingSum$1.add(atan2(v, u));
  lambda0$1 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}
function spherical(cartesian2) {
  return [atan2(cartesian2[1], cartesian2[0]), asin(cartesian2[2])];
}
function cartesian(spherical2) {
  var lambda = spherical2[0], phi = spherical2[1], cosPhi = cos(phi);
  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];
}
function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}
function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}
function cartesianNormalizeInPlace(d) {
  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
function boundsPoint$1(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0)
    phi0 = phi;
  if (phi > phi1)
    phi1 = phi;
}
function linePoint(lambda, phi) {
  var p = cartesian([lambda * radians, phi * radians]);
  if (p0) {
    var normal = cartesianCross(p0, p), equatorial = [normal[1], -normal[0], 0], inflection = cartesianCross(equatorial, normal);
    cartesianNormalizeInPlace(inflection);
    inflection = spherical(inflection);
    var delta = lambda - lambda2, sign2 = delta > 0 ? 1 : -1, lambdai = inflection[0] * degrees$1 * sign2, phii, antimeridian = abs(delta) > 180;
    if (antimeridian ^ (sign2 * lambda2 < lambdai && lambdai < sign2 * lambda)) {
      phii = inflection[1] * degrees$1;
      if (phii > phi1)
        phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign2 * lambda2 < lambdai && lambdai < sign2 * lambda)) {
      phii = -inflection[1] * degrees$1;
      if (phii < phi0)
        phi0 = phii;
    } else {
      if (phi < phi0)
        phi0 = phi;
      if (phi > phi1)
        phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1))
          lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1))
          lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0)
          lambda0 = lambda;
        if (lambda > lambda1)
          lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1))
            lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1))
            lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0)
    phi0 = phi;
  if (phi > phi1)
    phi1 = phi;
  p0 = p, lambda2 = lambda;
}
function boundsLineStart() {
  boundsStream$2.point = linePoint;
}
function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream$2.point = boundsPoint$1;
  p0 = null;
}
function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }
  areaStream$1.point(lambda, phi);
  linePoint(lambda, phi);
}
function boundsRingStart() {
  areaStream$1.lineStart();
}
function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  areaStream$1.lineEnd();
  if (abs(deltaSum) > epsilon)
    lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
}
function angle(lambda02, lambda12) {
  return (lambda12 -= lambda02) < 0 ? lambda12 + 360 : lambda12;
}
function rangeCompare(a, b) {
  return a[0] - b[0];
}
function rangeContains(range2, x) {
  return range2[0] <= range2[1] ? range2[0] <= x && x <= range2[1] : x < range2[0] || range2[1] < x;
}
function geoBounds(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  geoStream(feature, boundsStream$2);
  if (n = ranges.length) {
    ranges.sort(rangeCompare);
    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];
      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1]))
          a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1]))
          a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    }
    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax)
        deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }
  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
function compose(a, b) {
  function compose2(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }
  if (a.invert && b.invert)
    compose2.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
  return compose2;
}
function rotationIdentity(lambda, phi) {
  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];
}
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}
function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];
  };
}
function rotationLambda(deltaLambda) {
  var rotation2 = forwardRotationLambda(deltaLambda);
  rotation2.invert = forwardRotationLambda(-deltaLambda);
  return rotation2;
}
function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = cos(deltaPhi), sinDeltaPhi = sin(deltaPhi), cosDeltaGamma = cos(deltaGamma), sinDeltaGamma = sin(deltaGamma);
  function rotation2(lambda, phi) {
    var cosPhi = cos(phi), x = cos(lambda) * cosPhi, y = sin(lambda) * cosPhi, z = sin(phi), k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      asin(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }
  rotation2.invert = function(lambda, phi) {
    var cosPhi = cos(phi), x = cos(lambda) * cosPhi, y = sin(lambda) * cosPhi, z = sin(phi), k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      asin(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };
  return rotation2;
}
function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);
  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
  }
  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
  };
  return forward;
}
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta)
    return;
  var cosRadius = cos(radius), sinRadius = sin(radius), step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1)
      t0 += direction * tau;
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);
    stream.point(point[0], point[1]);
  }
}
function circleRadius(cosRadius, point) {
  point = cartesian(point), point[0] -= cosRadius;
  cartesianNormalizeInPlace(point);
  var radius = acos(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;
}
function clipBuffer() {
  var lines = [], line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: noop$1,
    rejoin: function() {
      if (lines.length > 1)
        lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
function pointEqual(a, b) {
  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;
}
function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other;
  this.e = entry;
  this.v = false;
  this.n = this.p = null;
}
function clipRejoin(segments, compareIntersection2, startInside, interpolate2, stream) {
  var subject = [], clip2 = [], i, n;
  segments.forEach(function(segment) {
    if ((n2 = segment.length - 1) <= 0)
      return;
    var n2, p02 = segment[0], p1 = segment[n2], x;
    if (pointEqual(p02, p1)) {
      if (!p02[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n2; ++i)
          stream.point((p02 = segment[i])[0], p02[1]);
        stream.lineEnd();
        return;
      }
      p1[0] += 2 * epsilon;
    }
    subject.push(x = new Intersection(p02, segment, null, true));
    clip2.push(x.o = new Intersection(p02, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip2.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length)
    return;
  clip2.sort(compareIntersection2);
  link(subject);
  link(clip2);
  for (i = 0, n = clip2.length; i < n; ++i) {
    clip2[i].e = startInside = !startInside;
  }
  var start2 = subject[0], points, point;
  while (1) {
    var current = start2, isSubject = true;
    while (current.v)
      if ((current = current.n) === start2)
        return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i)
            stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate2(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i)
            stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate2(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}
function link(array2) {
  if (!(n = array2.length))
    return;
  var n, i = 0, a = array2[0], b;
  while (++i < n) {
    a.n = b = array2[i];
    b.p = a;
    a = b;
  }
  a.n = b = array2[0];
  b.p = a;
}
function longitude(point) {
  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);
}
function polygonContains(polygon, point) {
  var lambda = longitude(point), phi = point[1], sinPhi = sin(phi), normal = [sin(lambda), -cos(lambda), 0], angle2 = 0, winding = 0;
  var sum = new Adder();
  if (sinPhi === 1)
    phi = halfPi + epsilon;
  else if (sinPhi === -1)
    phi = -halfPi - epsilon;
  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length))
      continue;
    var ring, m, point0 = ring[m - 1], lambda02 = longitude(point0), phi02 = point0[1] / 2 + quarterPi, sinPhi02 = sin(phi02), cosPhi02 = cos(phi02);
    for (var j = 0; j < m; ++j, lambda02 = lambda12, sinPhi02 = sinPhi1, cosPhi02 = cosPhi1, point0 = point1) {
      var point1 = ring[j], lambda12 = longitude(point1), phi12 = point1[1] / 2 + quarterPi, sinPhi1 = sin(phi12), cosPhi1 = cos(phi12), delta = lambda12 - lambda02, sign2 = delta >= 0 ? 1 : -1, absDelta = sign2 * delta, antimeridian = absDelta > pi, k = sinPhi02 * sinPhi1;
      sum.add(atan2(k * sign2 * sin(absDelta), cosPhi02 * cosPhi1 + k * cos(absDelta)));
      angle2 += antimeridian ? delta + sign2 * tau : delta;
      if (antimeridian ^ lambda02 >= lambda ^ lambda12 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection = cartesianCross(normal, arc);
        cartesianNormalizeInPlace(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }
  return (angle2 < -epsilon || angle2 < epsilon && sum < -epsilon2$1) ^ winding & 1;
}
function clip(pointVisible, clipLine2, interpolate2, start2) {
  return function(sink) {
    var line = clipLine2(sink), ringBuffer = clipBuffer(), ringSink = clipLine2(ringBuffer), polygonStarted = false, polygon, segments, ring;
    var clip2 = {
      point,
      lineStart,
      lineEnd,
      polygonStart: function() {
        clip2.point = pointRing;
        clip2.lineStart = ringStart;
        clip2.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip2.point = point;
        clip2.lineStart = lineStart;
        clip2.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start2);
        if (segments.length) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          clipRejoin(segments, compareIntersection, startInside, interpolate2, sink);
        } else if (startInside) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate2(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted)
          sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate2(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };
    function point(lambda, phi) {
      if (pointVisible(lambda, phi))
        sink.point(lambda, phi);
    }
    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }
    function lineStart() {
      clip2.point = pointLine;
      line.lineStart();
    }
    function lineEnd() {
      clip2.point = point;
      line.lineEnd();
    }
    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }
    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }
    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i, n = ringSegments.length, m, segment, point2;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n)
        return;
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted)
            sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i)
            sink.point((point2 = segment[i])[0], point2[1]);
          sink.lineEnd();
        }
        return;
      }
      if (n > 1 && clean & 2)
        ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }
    return clip2;
  };
}
function validSegment(segment) {
  return segment.length > 1;
}
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);
}
function clipAntimeridianLine(stream) {
  var lambda02 = NaN, phi02 = NaN, sign0 = NaN, clean;
  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda12, phi12) {
      var sign1 = lambda12 > 0 ? pi : -pi, delta = abs(lambda12 - lambda02);
      if (abs(delta - pi) < epsilon) {
        stream.point(lambda02, phi02 = (phi02 + phi12) / 2 > 0 ? halfPi : -halfPi);
        stream.point(sign0, phi02);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi02);
        stream.point(lambda12, phi02);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi) {
        if (abs(lambda02 - sign0) < epsilon)
          lambda02 -= sign0 * epsilon;
        if (abs(lambda12 - sign1) < epsilon)
          lambda12 -= sign1 * epsilon;
        phi02 = clipAntimeridianIntersect(lambda02, phi02, lambda12, phi12);
        stream.point(sign0, phi02);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi02);
        clean = 0;
      }
      stream.point(lambda02 = lambda12, phi02 = phi12);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda02 = phi02 = NaN;
    },
    clean: function() {
      return 2 - clean;
    }
  };
}
function clipAntimeridianIntersect(lambda02, phi02, lambda12, phi12) {
  var cosPhi02, cosPhi1, sinLambda0Lambda1 = sin(lambda02 - lambda12);
  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi02) * (cosPhi1 = cos(phi12)) * sin(lambda12) - sin(phi12) * (cosPhi02 = cos(phi02)) * sin(lambda02)) / (cosPhi02 * cosPhi1 * sinLambda0Lambda1)) : (phi02 + phi12) / 2;
}
function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * halfPi;
    stream.point(-pi, phi);
    stream.point(0, phi);
    stream.point(pi, phi);
    stream.point(pi, 0);
    stream.point(pi, -phi);
    stream.point(0, -phi);
    stream.point(-pi, -phi);
    stream.point(-pi, 0);
    stream.point(-pi, phi);
  } else if (abs(from[0] - to[0]) > epsilon) {
    var lambda = from[0] < to[0] ? pi : -pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
function clipCircle(radius) {
  var cr = cos(radius), delta = 6 * radians, smallRadius = cr > 0, notHemisphere = abs(cr) > epsilon;
  function interpolate2(from, to, direction, stream) {
    circleStream(stream, radius, delta, direction, from, to);
  }
  function visible(lambda, phi) {
    return cos(lambda) * cos(phi) > cr;
  }
  function clipLine2(stream) {
    var point0, c0, v0, v00, clean;
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi], point2, v = visible(lambda, phi), c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;
        if (!point0 && (v00 = v0 = v))
          stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !pointEqual(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0)
          stream.lineEnd();
        point0 = null;
      },
      clean: function() {
        return clean | (v00 && v0) << 1;
      }
    };
  }
  function intersect(a, b, two) {
    var pa = cartesian(a), pb = cartesian(b);
    var n1 = [1, 0, 0], n2 = cartesianCross(pa, pb), n2n2 = cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
    if (!determinant)
      return !two && a;
    var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = cartesianCross(n1, n2), A = cartesianScale(n1, c1), B = cartesianScale(n2, c2);
    cartesianAddInPlace(A, B);
    var u = n1xn2, w = cartesianDot(A, u), uu = cartesianDot(u, u), t2 = w * w - uu * (cartesianDot(A, A) - 1);
    if (t2 < 0)
      return;
    var t = sqrt(t2), q = cartesianScale(u, (-w - t) / uu);
    cartesianAddInPlace(q, A);
    q = spherical(q);
    if (!two)
      return q;
    var lambda02 = a[0], lambda12 = b[0], phi02 = a[1], phi12 = b[1], z;
    if (lambda12 < lambda02)
      z = lambda02, lambda02 = lambda12, lambda12 = z;
    var delta2 = lambda12 - lambda02, polar = abs(delta2 - pi) < epsilon, meridian = polar || delta2 < epsilon;
    if (!polar && phi12 < phi02)
      z = phi02, phi02 = phi12, phi12 = z;
    if (meridian ? polar ? phi02 + phi12 > 0 ^ q[1] < (abs(q[0] - lambda02) < epsilon ? phi02 : phi12) : phi02 <= q[1] && q[1] <= phi12 : delta2 > pi ^ (lambda02 <= q[0] && q[0] <= lambda12)) {
      var q1 = cartesianScale(u, (-w + t) / uu);
      cartesianAddInPlace(q1, A);
      return [q, spherical(q1)];
    }
  }
  function code(lambda, phi) {
    var r = smallRadius ? radius : pi - radius, code2 = 0;
    if (lambda < -r)
      code2 |= 1;
    else if (lambda > r)
      code2 |= 2;
    if (phi < -r)
      code2 |= 4;
    else if (phi > r)
      code2 |= 8;
    return code2;
  }
  return clip(visible, clipLine2, interpolate2, smallRadius ? [0, -radius] : [-pi, radius - pi]);
}
function clipLine(a, b, x02, y02, x12, y12) {
  var ax = a[0], ay = a[1], bx = b[0], by = b[1], t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
  r = x02 - ax;
  if (!dx && r > 0)
    return;
  r /= dx;
  if (dx < 0) {
    if (r < t0)
      return;
    if (r < t1)
      t1 = r;
  } else if (dx > 0) {
    if (r > t1)
      return;
    if (r > t0)
      t0 = r;
  }
  r = x12 - ax;
  if (!dx && r < 0)
    return;
  r /= dx;
  if (dx < 0) {
    if (r > t1)
      return;
    if (r > t0)
      t0 = r;
  } else if (dx > 0) {
    if (r < t0)
      return;
    if (r < t1)
      t1 = r;
  }
  r = y02 - ay;
  if (!dy && r > 0)
    return;
  r /= dy;
  if (dy < 0) {
    if (r < t0)
      return;
    if (r < t1)
      t1 = r;
  } else if (dy > 0) {
    if (r > t1)
      return;
    if (r > t0)
      t0 = r;
  }
  r = y12 - ay;
  if (!dy && r < 0)
    return;
  r /= dy;
  if (dy < 0) {
    if (r > t1)
      return;
    if (r > t0)
      t0 = r;
  } else if (dy > 0) {
    if (r < t0)
      return;
    if (r < t1)
      t1 = r;
  }
  if (t0 > 0)
    a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1)
    b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
function clipRectangle(x02, y02, x12, y12) {
  function visible(x, y) {
    return x02 <= x && x <= x12 && y02 <= y && y <= y12;
  }
  function interpolate2(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do
        stream.point(a === 0 || a === 3 ? x02 : x12, a > 1 ? y12 : y02);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }
  function corner(p, direction) {
    return abs(p[0] - x02) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x12) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y02) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
  }
  function compareIntersection2(a, b) {
    return comparePoint(a.x, b.x);
  }
  function comparePoint(a, b) {
    var ca = corner(a, 1), cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }
  return function(stream) {
    var activeStream = stream, bufferStream = clipBuffer(), segments, polygon, ring, x__, y__, v__, x_, y_, v_, first, clean;
    var clipStream = {
      point,
      lineStart,
      lineEnd,
      polygonStart,
      polygonEnd
    };
    function point(x, y) {
      if (visible(x, y))
        activeStream.point(x, y);
    }
    function polygonInside() {
      var winding = 0;
      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring2 = polygon[i], j = 1, m = ring2.length, point2 = ring2[0], a0, a1, b0 = point2[0], b1 = point2[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point2 = ring2[j], b0 = point2[0], b1 = point2[1];
          if (a1 <= y12) {
            if (b1 > y12 && (b0 - a0) * (y12 - a1) > (b1 - a1) * (x02 - a0))
              ++winding;
          } else {
            if (b1 <= y12 && (b0 - a0) * (y12 - a1) < (b1 - a1) * (x02 - a0))
              --winding;
          }
        }
      }
      return winding;
    }
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }
    function polygonEnd() {
      var startInside = polygonInside(), cleanInside = clean && startInside, visible2 = (segments = merge(segments)).length;
      if (cleanInside || visible2) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate2(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible2) {
          clipRejoin(segments, compareIntersection2, startInside, interpolate2, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }
    function lineStart() {
      clipStream.point = linePoint2;
      if (polygon)
        polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }
    function lineEnd() {
      if (segments) {
        linePoint2(x__, y__);
        if (v__ && v_)
          bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_)
        activeStream.lineEnd();
    }
    function linePoint2(x, y) {
      var v = visible(x, y);
      if (polygon)
        ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_)
          activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))], b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (clipLine(a, b, x02, y02, x12, y12)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v)
              activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }
    return clipStream;
  };
}
function areaRingStart() {
  areaStream.point = areaPointFirst;
}
function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00$2 = x0$3 = x, y00$2 = y0$3 = y;
}
function areaPoint(x, y) {
  areaRingSum.add(y0$3 * x - x0$3 * y);
  x0$3 = x, y0$3 = y;
}
function areaRingEnd() {
  areaPoint(x00$2, y00$2);
}
function boundsPoint(x, y) {
  if (x < x0$2)
    x0$2 = x;
  if (x > x1)
    x1 = x;
  if (y < y0$2)
    y0$2 = y;
  if (y > y1)
    y1 = y;
}
function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}
function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}
function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0$1 = x, y0$1 = y);
}
function centroidPointLine(x, y) {
  var dx = x - x0$1, dy = y - y0$1, z = sqrt(dx * dx + dy * dy);
  X1 += z * (x0$1 + x) / 2;
  Y1 += z * (y0$1 + y) / 2;
  Z1 += z;
  centroidPoint(x0$1 = x, y0$1 = y);
}
function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}
function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}
function centroidRingEnd() {
  centroidPointRing(x00$1, y00$1);
}
function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);
}
function centroidPointRing(x, y) {
  var dx = x - x0$1, dy = y - y0$1, z = sqrt(dx * dx + dy * dy);
  X1 += z * (x0$1 + x) / 2;
  Y1 += z * (y0$1 + y) / 2;
  Z1 += z;
  z = y0$1 * x - x0$1 * y;
  X2 += z * (x0$1 + x);
  Y2 += z * (y0$1 + y);
  Z2 += z * 3;
  centroidPoint(x0$1 = x, y0$1 = y);
}
function PathContext(context) {
  this._context = context;
}
function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}
function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(sqrt(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}
function PathString() {
  this._string = [];
}
function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
function geoPath(projection2, context) {
  var pointRadius = 4.5, projectionStream, contextStream;
  function path(object2) {
    if (object2) {
      if (typeof pointRadius === "function")
        contextStream.pointRadius(+pointRadius.apply(this, arguments));
      geoStream(object2, projectionStream(contextStream));
    }
    return contextStream.result();
  }
  path.area = function(object2) {
    geoStream(object2, projectionStream(pathArea));
    return pathArea.result();
  };
  path.measure = function(object2) {
    geoStream(object2, projectionStream(pathMeasure));
    return pathMeasure.result();
  };
  path.bounds = function(object2) {
    geoStream(object2, projectionStream(boundsStream$1));
    return boundsStream$1.result();
  };
  path.centroid = function(object2) {
    geoStream(object2, projectionStream(pathCentroid));
    return pathCentroid.result();
  };
  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection2 = null, identity$4) : (projection2 = _).stream, path) : projection2;
  };
  path.context = function(_) {
    if (!arguments.length)
      return context;
    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);
    if (typeof pointRadius !== "function")
      contextStream.pointRadius(pointRadius);
    return path;
  };
  path.pointRadius = function(_) {
    if (!arguments.length)
      return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };
  return path.projection(projection2).context(context);
}
function transformer$1(methods) {
  return function(stream) {
    var s2 = new TransformStream();
    for (var key in methods)
      s2[key] = methods[key];
    s2.stream = stream;
    return s2;
  };
}
function TransformStream() {
}
function fit(projection2, fitBounds, object2) {
  var clip2 = projection2.clipExtent && projection2.clipExtent();
  projection2.scale(150).translate([0, 0]);
  if (clip2 != null)
    projection2.clipExtent(null);
  geoStream(object2, projection2.stream(boundsStream$1));
  fitBounds(boundsStream$1.result());
  if (clip2 != null)
    projection2.clipExtent(clip2);
  return projection2;
}
function fitExtent(projection2, extent, object2) {
  return fit(projection2, function(b) {
    var w = extent[1][0] - extent[0][0], h = extent[1][1] - extent[0][1], k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])), x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2, y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection2.scale(150 * k).translate([x, y]);
  }, object2);
}
function fitSize(projection2, size, object2) {
  return fitExtent(projection2, [[0, 0], size], object2);
}
function fitWidth(projection2, width, object2) {
  return fit(projection2, function(b) {
    var w = +width, k = w / (b[1][0] - b[0][0]), x = (w - k * (b[1][0] + b[0][0])) / 2, y = -k * b[0][1];
    projection2.scale(150 * k).translate([x, y]);
  }, object2);
}
function fitHeight(projection2, height, object2) {
  return fit(projection2, function(b) {
    var h = +height, k = h / (b[1][1] - b[0][1]), x = -k * b[0][0], y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection2.scale(150 * k).translate([x, y]);
  }, object2);
}
function resample(project, delta2) {
  return +delta2 ? resample$1(project, delta2) : resampleNone(project);
}
function resampleNone(project) {
  return transformer$1({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}
function resample$1(project, delta2) {
  function resampleLineTo(x02, y02, lambda02, a0, b0, c0, x12, y12, lambda12, a1, b1, c1, depth, stream) {
    var dx = x12 - x02, dy = y12 - y02, d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = sqrt(a * a + b * b + c * c), phi2 = asin(c /= m), lambda22 = abs(abs(c) - 1) < epsilon || abs(lambda02 - lambda12) < epsilon ? (lambda02 + lambda12) / 2 : atan2(b, a), p = project(lambda22, phi2), x2 = p[0], y2 = p[1], dx2 = x2 - x02, dy2 = y2 - y02, dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        resampleLineTo(x02, y02, lambda02, a0, b0, c0, x2, y2, lambda22, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda22, a, b, c, x12, y12, lambda12, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda002, x002, y002, a00, b00, c00, lambda02, x02, y02, a0, b0, c0;
    var resampleStream = {
      point,
      lineStart,
      lineEnd,
      polygonStart: function() {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function() {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };
    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }
    function lineStart() {
      x02 = NaN;
      resampleStream.point = linePoint2;
      stream.lineStart();
    }
    function linePoint2(lambda, phi) {
      var c = cartesian([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x02, y02, lambda02, a0, b0, c0, x02 = p[0], y02 = p[1], lambda02 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x02, y02);
    }
    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }
    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }
    function ringPoint(lambda, phi) {
      linePoint2(lambda002 = lambda, phi), x002 = x02, y002 = y02, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint2;
    }
    function ringEnd() {
      resampleLineTo(x02, y02, lambda02, a0, b0, c0, x002, y002, lambda002, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }
    return resampleStream;
  };
}
function transformRotate(rotate) {
  return transformer$1({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}
function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}
function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  if (!alpha)
    return scaleTranslate(k, dx, dy, sx, sy);
  var cosAlpha = cos(alpha), sinAlpha = sin(alpha), a = cosAlpha * k, b = sinAlpha * k, ai = cosAlpha / k, bi = sinAlpha / k, ci = (sinAlpha * dy - cosAlpha * dx) / k, fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}
function projection(project) {
  return projectionMutator(function() {
    return project;
  })();
}
function projectionMutator(projectAt) {
  var project, k = 150, x = 480, y = 250, lambda = 0, phi = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha = 0, sx = 1, sy = 1, theta = null, preclip = clipAntimeridian, x02 = null, y02, x12, y12, postclip = identity$4, delta2 = 0.5, projectResample, projectTransform, projectRotateTransform, cache, cacheStream;
  function projection2(point) {
    return projectRotateTransform(point[0] * radians, point[1] * radians);
  }
  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * degrees$1, point[1] * degrees$1];
  }
  projection2.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };
  projection2.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = void 0, reset()) : preclip;
  };
  projection2.postclip = function(_) {
    return arguments.length ? (postclip = _, x02 = y02 = x12 = y12 = null, reset()) : postclip;
  };
  projection2.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
  };
  projection2.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x02 = y02 = x12 = y12 = null, identity$4) : clipRectangle(x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1]), reset()) : x02 == null ? null : [[x02, y02], [x12, y12]];
  };
  projection2.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };
  projection2.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };
  projection2.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
  };
  projection2.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
  };
  projection2.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees$1;
  };
  projection2.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };
  projection2.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };
  projection2.precision = function(_) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
  };
  projection2.fitExtent = function(extent, object2) {
    return fitExtent(projection2, extent, object2);
  };
  projection2.fitSize = function(size, object2) {
    return fitSize(projection2, size, object2);
  };
  projection2.fitWidth = function(width, object2) {
    return fitWidth(projection2, width, object2);
  };
  projection2.fitHeight = function(height, object2) {
    return fitHeight(projection2, height, object2);
  };
  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)), transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose(project, transform);
    projectRotateTransform = compose(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }
  function reset() {
    cache = cacheStream = null;
    return projection2;
  }
  return function() {
    project = projectAt.apply(this, arguments);
    projection2.invert = project.invert && invert;
    return recenter();
  };
}
function mercatorRaw(lambda, phi) {
  return [lambda, log(tan((halfPi + phi) / 2))];
}
function geoMercator() {
  return mercatorProjection(mercatorRaw).scale(961 / tau);
}
function mercatorProjection(project) {
  var m = projection(project), center = m.center, scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, x02 = null, y02, x12, y12;
  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };
  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };
  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };
  m.clipExtent = function(_) {
    return arguments.length ? (_ == null ? x02 = y02 = x12 = y12 = null : (x02 = +_[0][0], y02 = +_[0][1], x12 = +_[1][0], y12 = +_[1][1]), reclip()) : x02 == null ? null : [[x02, y02], [x12, y12]];
  };
  function reclip() {
    var k = pi * scale(), t = m(rotation(m.rotate()).invert([0, 0]));
    return clipExtent(x02 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x02), y02], [Math.min(t[0] + k, x12), y12]] : [[x02, Math.max(t[1] - k, y02)], [x12, Math.min(t[1] + k, y12)]]);
  }
  return reclip();
}
function createProjection(projection2) {
  projection2 = projection2() ?? geoMercator();
  const { subscribe: subscribe2, set: set2, update } = writable(projection2);
  let layerBoundingBoxes = {};
  let size = [0, 0];
  const recalc = () => {
    const json = {
      type: "FeatureCollection",
      features: Object.values(layerBoundingBoxes).map((d) => ({
        geometry: {
          type: "LineString",
          coordinates: d
        }
      }))
    };
    projection2.fitSize(size, json);
    set2(projection2);
  };
  return {
    subscribe: subscribe2,
    set: set2,
    update,
    size: (_size) => {
      if (_size) {
        size = _size;
        recalc();
      }
      return size;
    },
    setProjection: (_projection) => {
      if (_projection) {
        projection2 = _projection();
        recalc();
      }
    },
    addLayer: (geojson, layerName) => {
      layerName = layerName ?? Math.random().toString(36).slice(-9);
      layerBoundingBoxes[layerName] = geoBounds(geojson);
      recalc();
      return layerName;
    },
    clear: (layerName) => {
      if (layerName) {
        delete layerBoundingBoxes[layerName];
      } else {
        layerBoundingBoxes = {};
      }
      recalc();
    }
  };
}
function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t))
      throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}
function Dispatch(_) {
  this._ = _;
}
function parseTypenames$1(typenames, types2) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name22 = "", i = t.indexOf(".");
    if (i >= 0)
      name22 = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types2.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    return { type: t, name: name22 };
  });
}
function get$1(type22, name22) {
  for (var i = 0, n = type22.length, c; i < n; ++i) {
    if ((c = type22[i]).name === name22) {
      return c.value;
    }
  }
}
function set$1(type22, name22, callback) {
  for (var i = 0, n = type22.length; i < n; ++i) {
    if (type22[i].name === name22) {
      type22[i] = noop2, type22 = type22.slice(0, i).concat(type22.slice(i + 1));
      break;
    }
  }
  if (callback != null)
    type22.push({ name: name22, value: callback });
  return type22;
}
function namespace(name22) {
  var prefix = name22 += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name22.slice(0, i)) !== "xmlns")
    name22 = name22.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? { space: namespaces[prefix], local: name22 } : name22;
}
function creatorInherit(name22) {
  return function() {
    var document2 = this.ownerDocument, uri = this.namespaceURI;
    return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name22) : document2.createElementNS(uri, name22);
  };
}
function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}
function creator(name22) {
  var fullname = namespace(name22);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
function none() {
}
function selector(selector2) {
  return selector2 == null ? none : function() {
    return this.querySelector(selector2);
  };
}
function selection_select(select2) {
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select2.call(node, node.__data__, i, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }
  return new Selection$1(subgroups, this._parents);
}
function array(x) {
  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);
}
function empty() {
  return [];
}
function selectorAll(selector2) {
  return selector2 == null ? empty : function() {
    return this.querySelectorAll(selector2);
  };
}
function arrayAll(select2) {
  return function() {
    return array(select2.apply(this, arguments));
  };
}
function selection_selectAll(select2) {
  if (typeof select2 === "function")
    select2 = arrayAll(select2);
  else
    select2 = selectorAll(select2);
  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select2.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }
  return new Selection$1(subgroups, parents);
}
function matcher(selector2) {
  return function() {
    return this.matches(selector2);
  };
}
function childMatcher(selector2) {
  return function(node) {
    return node.matches(selector2);
  };
}
function childFind(match) {
  return function() {
    return find.call(this.children, match);
  };
}
function childFirst() {
  return this.firstElementChild;
}
function selection_selectChild(match) {
  return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : childMatcher(match)));
}
function children() {
  return Array.from(this.children);
}
function childrenFilter(match) {
  return function() {
    return filter.call(this.children, match);
  };
}
function selection_selectChildren(match) {
  return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
}
function selection_filter(match) {
  if (typeof match !== "function")
    match = matcher(match);
  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Selection$1(subgroups, this._parents);
}
function sparse(update) {
  return new Array(update.length);
}
function selection_enter() {
  return new Selection$1(this._enter || this._groups.map(sparse), this._parents);
}
function EnterNode(parent, datum2) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum2;
}
function constant$2(x) {
  return function() {
    return x;
  };
}
function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0, node, groupLength = group.length, dataLength = data.length;
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}
function bindKey(parent, group, enter, update, exit, data, key) {
  var i, node, nodeByKeyValue = new Map(), groupLength = group.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
      exit[i] = node;
    }
  }
}
function datum(node) {
  return node.__data__;
}
function selection_data(value, key) {
  if (!arguments.length)
    return Array.from(this, datum);
  var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
  if (typeof value !== "function")
    value = constant$2(value);
  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j], group = groups[j], groupLength = group.length, data = arraylike(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1)
          i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength)
          ;
        previous._next = next || null;
      }
    }
  }
  update = new Selection$1(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
function arraylike(data) {
  return typeof data === "object" && "length" in data ? data : Array.from(data);
}
function selection_exit() {
  return new Selection$1(this._exit || this._groups.map(sparse), this._parents);
}
function selection_join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  if (typeof onenter === "function") {
    enter = onenter(enter);
    if (enter)
      enter = enter.selection();
  } else {
    enter = enter.append(onenter + "");
  }
  if (onupdate != null) {
    update = onupdate(update);
    if (update)
      update = update.selection();
  }
  if (onexit == null)
    exit.remove();
  else
    onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
function selection_merge(context) {
  var selection2 = context.selection ? context.selection() : context;
  for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge2 = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge2[i] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Selection$1(merges, this._parents);
}
function selection_order() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m; ) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4)
          next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }
  return this;
}
function selection_sort(compare) {
  if (!compare)
    compare = ascending;
  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }
  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }
  return new Selection$1(sortgroups, this._parents).order();
}
function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
function selection_call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
function selection_nodes() {
  return Array.from(this);
}
function selection_node() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node)
        return node;
    }
  }
  return null;
}
function selection_size() {
  let size = 0;
  for (const node of this)
    ++size;
  return size;
}
function selection_empty() {
  return !this.node();
}
function selection_each(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i])
        callback.call(node, node.__data__, i, group);
    }
  }
  return this;
}
function attrRemove$1(name22) {
  return function() {
    this.removeAttribute(name22);
  };
}
function attrRemoveNS$1(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant$1(name22, value) {
  return function() {
    this.setAttribute(name22, value);
  };
}
function attrConstantNS$1(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}
function attrFunction$1(name22, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null)
      this.removeAttribute(name22);
    else
      this.setAttribute(name22, v);
  };
}
function attrFunctionNS$1(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null)
      this.removeAttributeNS(fullname.space, fullname.local);
    else
      this.setAttributeNS(fullname.space, fullname.local, v);
  };
}
function selection_attr(name22, value) {
  var fullname = namespace(name22);
  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }
  return this.each((value == null ? fullname.local ? attrRemoveNS$1 : attrRemove$1 : typeof value === "function" ? fullname.local ? attrFunctionNS$1 : attrFunction$1 : fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, value));
}
function defaultView(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
}
function styleRemove$1(name22) {
  return function() {
    this.style.removeProperty(name22);
  };
}
function styleConstant$1(name22, value, priority) {
  return function() {
    this.style.setProperty(name22, value, priority);
  };
}
function styleFunction$1(name22, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null)
      this.style.removeProperty(name22);
    else
      this.style.setProperty(name22, v, priority);
  };
}
function selection_style(name22, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove$1 : typeof value === "function" ? styleFunction$1 : styleConstant$1)(name22, value, priority == null ? "" : priority)) : styleValue(this.node(), name22);
}
function styleValue(node, name22) {
  return node.style.getPropertyValue(name22) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name22);
}
function propertyRemove(name22) {
  return function() {
    delete this[name22];
  };
}
function propertyConstant(name22, value) {
  return function() {
    this[name22] = value;
  };
}
function propertyFunction(name22, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null)
      delete this[name22];
    else
      this[name22] = v;
  };
}
function selection_property(name22, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name22, value)) : this.node()[name22];
}
function classArray(string) {
  return string.trim().split(/^|\s+/);
}
function classList(node) {
  return node.classList || new ClassList(node);
}
function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}
function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n)
    list.add(names[i]);
}
function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n)
    list.remove(names[i]);
}
function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}
function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}
function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}
function selection_classed(name22, value) {
  var names = classArray(name22 + "");
  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n)
      if (!list.contains(names[i]))
        return false;
    return true;
  }
  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
function textRemove() {
  this.textContent = "";
}
function textConstant$1(value) {
  return function() {
    this.textContent = value;
  };
}
function textFunction$1(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}
function selection_text(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction$1 : textConstant$1)(value)) : this.node().textContent;
}
function htmlRemove() {
  this.innerHTML = "";
}
function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}
function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}
function selection_html(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
function raise() {
  if (this.nextSibling)
    this.parentNode.appendChild(this);
}
function selection_raise() {
  return this.each(raise);
}
function lower() {
  if (this.previousSibling)
    this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function selection_lower() {
  return this.each(lower);
}
function selection_append(name22) {
  var create2 = typeof name22 === "function" ? name22 : creator(name22);
  return this.select(function() {
    return this.appendChild(create2.apply(this, arguments));
  });
}
function constantNull() {
  return null;
}
function selection_insert(name22, before) {
  var create2 = typeof name22 === "function" ? name22 : creator(name22), select2 = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create2.apply(this, arguments), select2.apply(this, arguments) || null);
  });
}
function remove() {
  var parent = this.parentNode;
  if (parent)
    parent.removeChild(this);
}
function selection_remove() {
  return this.each(remove);
}
function selection_cloneShallow() {
  var clone2 = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_cloneDeep() {
  var clone2 = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
function selection_datum(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}
function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name22 = "", i = t.indexOf(".");
    if (i >= 0)
      name22 = t.slice(i + 1), t = t.slice(0, i);
    return { type: t, name: name22 };
  });
}
function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on)
      return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }
    if (++i)
      on.length = i;
    else
      delete this.__on;
  };
}
function onAdd(typename, value, options2) {
  return function() {
    var on = this.__on, o, listener = contextListener(value);
    if (on)
      for (var j = 0, m = on.length; j < m; ++j) {
        if ((o = on[j]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options2);
          o.value = value;
          return;
        }
      }
    this.addEventListener(typename.type, listener, options2);
    o = { type: typename.type, name: typename.name, value, listener, options: options2 };
    if (!on)
      this.__on = [o];
    else
      on.push(o);
  };
}
function selection_on(typename, value, options2) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;
  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on)
      for (var j = 0, m = on.length, o; j < m; ++j) {
        for (i = 0, o = on[j]; i < n; ++i) {
          if ((t = typenames[i]).type === o.type && t.name === o.name) {
            return o.value;
          }
        }
      }
    return;
  }
  on = value ? onAdd : onRemove;
  for (i = 0; i < n; ++i)
    this.each(on(typenames[i], value, options2));
  return this;
}
function dispatchEvent(node, type22, params) {
  var window2 = defaultView(node), event = window2.CustomEvent;
  if (typeof event === "function") {
    event = new event(type22, params);
  } else {
    event = window2.document.createEvent("Event");
    if (params)
      event.initEvent(type22, params.bubbles, params.cancelable), event.detail = params.detail;
    else
      event.initEvent(type22, false, false);
  }
  node.dispatchEvent(event);
}
function dispatchConstant(type22, params) {
  return function() {
    return dispatchEvent(this, type22, params);
  };
}
function dispatchFunction(type22, params) {
  return function() {
    return dispatchEvent(this, type22, params.apply(this, arguments));
  };
}
function selection_dispatch(type22, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type22, params));
}
function* selection_iterator() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i])
        yield node;
    }
  }
}
function Selection$1(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}
function selection() {
  return new Selection$1([[document.documentElement]], root);
}
function selection_selection() {
  return this;
}
function select(selector2) {
  return typeof selector2 === "string" ? new Selection$1([[document.querySelector(selector2)]], [document.documentElement]) : new Selection$1([[selector2]], root);
}
function sourceEvent(event) {
  let sourceEvent2;
  while (sourceEvent2 = event.sourceEvent)
    event = sourceEvent2;
  return event;
}
function pointer(event, node) {
  event = sourceEvent(event);
  if (node === void 0)
    node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}
function noevent$1(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
function dragDisable(view) {
  var root2 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", noevent$1, nonpassivecapture);
  if ("onselectstart" in root2) {
    selection2.on("selectstart.drag", noevent$1, nonpassivecapture);
  } else {
    root2.__noselect = root2.style.MozUserSelect;
    root2.style.MozUserSelect = "none";
  }
}
function yesdrag(view, noclick) {
  var root2 = view.document.documentElement, selection2 = select(view).on("dragstart.drag", null);
  if (noclick) {
    selection2.on("click.drag", noevent$1, nonpassivecapture);
    setTimeout(function() {
      selection2.on("click.drag", null);
    }, 0);
  }
  if ("onselectstart" in root2) {
    selection2.on("selectstart.drag", null);
  } else {
    root2.style.MozUserSelect = root2.__noselect;
    delete root2.__noselect;
  }
}
function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color() {
}
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format22) {
  var m, l;
  format22 = (format22 + "").trim().toLowerCase();
  return (m = reHex.exec(format22)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format22)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format22)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format22)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format22)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format22)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format22)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format22) ? rgbn(named[format22]) : format22 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
  return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a) {
  if (a <= 0)
    r = g = b = NaN;
  return new Rgb(r, g, b, a);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}
function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s2, l, a) {
  if (a <= 0)
    h = s2 = l = NaN;
  else if (l <= 0 || l >= 1)
    h = s2 = NaN;
  else if (s2 <= 0)
    h = NaN;
  return new Hsl(h, s2, l, a);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s2 = max - min, l = (max + min) / 2;
  if (s2) {
    if (r === max)
      h = (g - b) / s2 + (g < b) * 6;
    else if (g === max)
      h = (b - r) / s2 + 2;
    else
      h = (r - g) / s2 + 4;
    s2 /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s2 = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s2, l, o.opacity);
}
function hsl(h, s2, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s2, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s2, l, opacity) {
  this.h = +h;
  this.s = +s2;
  this.l = +l;
  this.opacity = +opacity;
}
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
function linear$1(a, d) {
  return function(t) {
    return a + t * d;
  };
}
function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : constant$1(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? linear$1(a, d) : constant$1(isNaN(a) ? b : a);
}
function numberArray(a, b) {
  if (!b)
    b = [];
  var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
  return function(t) {
    for (i = 0; i < n; ++i)
      c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}
function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
function genericArray(a, b) {
  var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
  for (i = 0; i < na; ++i)
    x[i] = interpolate$1(a[i], b[i]);
  for (; i < nb; ++i)
    c[i] = b[i];
  return function(t) {
    for (i = 0; i < na; ++i)
      c[i] = x[i](t);
    return c;
  };
}
function date(a, b) {
  var d = new Date();
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
function interpolateNumber(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}
function object(a, b) {
  var i = {}, c = {}, k;
  if (a === null || typeof a !== "object")
    a = {};
  if (b === null || typeof b !== "object")
    b = {};
  for (k in b) {
    if (k in a) {
      i[k] = interpolate$1(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }
  return function(t) {
    for (k in i)
      c[k] = i[k](t);
    return c;
  };
}
function zero(b) {
  return function() {
    return b;
  };
}
function one(b) {
  return function(t) {
    return b(t) + "";
  };
}
function interpolateString(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s2 = [], q = [];
  a = a + "", b = b + "";
  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      bs = b.slice(bi, bs);
      if (s2[i])
        s2[i] += bs;
      else
        s2[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i])
        s2[i] += bm;
      else
        s2[++i] = bm;
    } else {
      s2[++i] = null;
      q.push({ i, x: interpolateNumber(am, bm) });
    }
    bi = reB.lastIndex;
  }
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s2[i])
      s2[i] += bs;
    else
      s2[++i] = bs;
  }
  return s2.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
    for (var i2 = 0, o; i2 < b; ++i2)
      s2[(o = q[i2]).i] = o.x(t);
    return s2.join("");
  });
}
function interpolate$1(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant$1(b) : (t === "number" ? interpolateNumber : t === "string" ? (c = color(b)) ? (b = c, interpolateRgb) : interpolateString : b instanceof color ? interpolateRgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : interpolateNumber)(a, b);
}
function interpolateRound(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
function decompose(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b))
    a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d)
    c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d))
    c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c)
    a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX,
    scaleY
  };
}
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? identity$3 : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
  if (value == null)
    return identity$3;
  if (!svgNode)
    svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate()))
    return identity$3;
  value = value.matrix;
  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
}
function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s2) {
    return s2.length ? s2.pop() + " " : "";
  }
  function translate(xa, ya, xb, yb, s2, q) {
    if (xa !== xb || ya !== yb) {
      var i = s2.push("translate(", null, pxComma, null, pxParen);
      q.push({ i: i - 4, x: interpolateNumber(xa, xb) }, { i: i - 2, x: interpolateNumber(ya, yb) });
    } else if (xb || yb) {
      s2.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }
  function rotate(a, b, s2, q) {
    if (a !== b) {
      if (a - b > 180)
        b += 360;
      else if (b - a > 180)
        a += 360;
      q.push({ i: s2.push(pop(s2) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b) });
    } else if (b) {
      s2.push(pop(s2) + "rotate(" + b + degParen);
    }
  }
  function skewX(a, b, s2, q) {
    if (a !== b) {
      q.push({ i: s2.push(pop(s2) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b) });
    } else if (b) {
      s2.push(pop(s2) + "skewX(" + b + degParen);
    }
  }
  function scale(xa, ya, xb, yb, s2, q) {
    if (xa !== xb || ya !== yb) {
      var i = s2.push(pop(s2) + "scale(", null, ",", null, ")");
      q.push({ i: i - 4, x: interpolateNumber(xa, xb) }, { i: i - 2, x: interpolateNumber(ya, yb) });
    } else if (xb !== 1 || yb !== 1) {
      s2.push(pop(s2) + "scale(" + xb + "," + yb + ")");
    }
  }
  return function(a, b) {
    var s2 = [], q = [];
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s2, q);
    rotate(a.rotate, b.rotate, s2, q);
    skewX(a.skewX, b.skewX, s2, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s2, q);
    a = b = null;
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n)
        s2[(o = q[i]).i] = o.x(t);
      return s2.join("");
    };
  };
}
function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}
function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}
function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
  clockNow = 0;
}
function Timer() {
  this._call = this._time = this._next = null;
}
function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}
function timerFlush() {
  now();
  ++frame;
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0)
      t._call.call(void 0, e);
    t = t._next;
  }
  --frame;
}
function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout$1 = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}
function poke() {
  var now2 = clock.now(), delay = now2 - clockLast;
  if (delay > pokeDelay)
    clockSkew -= delay, clockLast = now2;
}
function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time)
        time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}
function sleep(time) {
  if (frame)
    return;
  if (timeout$1)
    timeout$1 = clearTimeout(timeout$1);
  var delay = time - clockNow;
  if (delay > 24) {
    if (time < Infinity)
      timeout$1 = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval)
      interval = clearInterval(interval);
  } else {
    if (!interval)
      clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
function timeout(callback, delay, time) {
  var t = new Timer();
  delay = delay == null ? 0 : +delay;
  t.restart((elapsed) => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
function schedule(node, name22, id2, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules)
    node.__transition = {};
  else if (id2 in schedules)
    return;
  create(node, id2, {
    name: name22,
    index,
    group,
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}
function init(node, id2) {
  var schedule2 = get(node, id2);
  if (schedule2.state > CREATED)
    throw new Error("too late; already scheduled");
  return schedule2;
}
function set(node, id2) {
  var schedule2 = get(node, id2);
  if (schedule2.state > STARTED)
    throw new Error("too late; already running");
  return schedule2;
}
function get(node, id2) {
  var schedule2 = node.__transition;
  if (!schedule2 || !(schedule2 = schedule2[id2]))
    throw new Error("transition not found");
  return schedule2;
}
function create(node, id2, self2) {
  var schedules = node.__transition, tween;
  schedules[id2] = self2;
  self2.timer = timer(schedule2, 0, self2.time);
  function schedule2(elapsed) {
    self2.state = SCHEDULED;
    self2.timer.restart(start2, self2.delay, self2.time);
    if (self2.delay <= elapsed)
      start2(elapsed - self2.delay);
  }
  function start2(elapsed) {
    var i, j, n, o;
    if (self2.state !== SCHEDULED)
      return stop();
    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self2.name)
        continue;
      if (o.state === STARTED)
        return timeout(start2);
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } else if (+i < id2) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }
    timeout(function() {
      if (self2.state === STARTED) {
        self2.state = RUNNING;
        self2.timer.restart(tick, self2.delay, self2.time);
        tick(elapsed);
      }
    });
    self2.state = STARTING;
    self2.on.call("start", node, node.__data__, self2.index, self2.group);
    if (self2.state !== STARTING)
      return;
    self2.state = STARTED;
    tween = new Array(n = self2.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self2.tween[i].value.call(node, node.__data__, self2.index, self2.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }
  function tick(elapsed) {
    var t = elapsed < self2.duration ? self2.ease.call(null, elapsed / self2.duration) : (self2.timer.restart(stop), self2.state = ENDING, 1), i = -1, n = tween.length;
    while (++i < n) {
      tween[i].call(node, t);
    }
    if (self2.state === ENDING) {
      self2.on.call("end", node, node.__data__, self2.index, self2.group);
      stop();
    }
  }
  function stop() {
    self2.state = ENDED;
    self2.timer.stop();
    delete schedules[id2];
    for (var i in schedules)
      return;
    delete node.__transition;
  }
}
function interrupt(node, name22) {
  var schedules = node.__transition, schedule2, active, empty22 = true, i;
  if (!schedules)
    return;
  name22 = name22 == null ? null : name22 + "";
  for (i in schedules) {
    if ((schedule2 = schedules[i]).name !== name22) {
      empty22 = false;
      continue;
    }
    active = schedule2.state > STARTING && schedule2.state < ENDING;
    schedule2.state = ENDED;
    schedule2.timer.stop();
    schedule2.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule2.index, schedule2.group);
    delete schedules[i];
  }
  if (empty22)
    delete node.__transition;
}
function selection_interrupt(name22) {
  return this.each(function() {
    interrupt(this, name22);
  });
}
function tweenRemove(id2, name22) {
  var tween0, tween1;
  return function() {
    var schedule2 = set(this, id2), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name22) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }
    schedule2.tween = tween1;
  };
}
function tweenFunction(id2, name22, value) {
  var tween0, tween1;
  if (typeof value !== "function")
    throw new Error();
  return function() {
    var schedule2 = set(this, id2), tween = schedule2.tween;
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = { name: name22, value }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name22) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n)
        tween1.push(t);
    }
    schedule2.tween = tween1;
  };
}
function transition_tween(name22, value) {
  var id2 = this._id;
  name22 += "";
  if (arguments.length < 2) {
    var tween = get(this.node(), id2).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name22) {
        return t.value;
      }
    }
    return null;
  }
  return this.each((value == null ? tweenRemove : tweenFunction)(id2, name22, value));
}
function tweenValue(transition, name22, value) {
  var id2 = transition._id;
  transition.each(function() {
    var schedule2 = set(this, id2);
    (schedule2.value || (schedule2.value = {}))[name22] = value.apply(this, arguments);
  });
  return function(node) {
    return get(node, id2).value[name22];
  };
}
function interpolate(a, b) {
  var c;
  return (typeof b === "number" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);
}
function attrRemove(name22) {
  return function() {
    this.removeAttribute(name22);
  };
}
function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant(name22, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttribute(name22);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function attrConstantNS(fullname, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function attrFunction(name22, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null)
      return void this.removeAttribute(name22);
    string0 = this.getAttribute(name22);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function attrFunctionNS(fullname, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null)
      return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function transition_attr(name22, value) {
  var fullname = namespace(name22), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name22, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name22, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
function attrInterpolate(name22, i) {
  return function(t) {
    this.setAttribute(name22, i.call(this, t));
  };
}
function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}
function attrTweenNS(fullname, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0)
      t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }
  tween._value = value;
  return tween;
}
function attrTween(name22, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0)
      t0 = (i0 = i) && attrInterpolate(name22, i);
    return t0;
  }
  tween._value = value;
  return tween;
}
function transition_attrTween(name22, value) {
  var key = "attr." + name22;
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  var fullname = namespace(name22);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
function delayFunction(id2, value) {
  return function() {
    init(this, id2).delay = +value.apply(this, arguments);
  };
}
function delayConstant(id2, value) {
  return value = +value, function() {
    init(this, id2).delay = value;
  };
}
function transition_delay(value) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id2, value)) : get(this.node(), id2).delay;
}
function durationFunction(id2, value) {
  return function() {
    set(this, id2).duration = +value.apply(this, arguments);
  };
}
function durationConstant(id2, value) {
  return value = +value, function() {
    set(this, id2).duration = value;
  };
}
function transition_duration(value) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id2, value)) : get(this.node(), id2).duration;
}
function easeConstant(id2, value) {
  if (typeof value !== "function")
    throw new Error();
  return function() {
    set(this, id2).ease = value;
  };
}
function transition_ease(value) {
  var id2 = this._id;
  return arguments.length ? this.each(easeConstant(id2, value)) : get(this.node(), id2).ease;
}
function easeVarying(id2, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (typeof v !== "function")
      throw new Error();
    set(this, id2).ease = v;
  };
}
function transition_easeVarying(value) {
  if (typeof value !== "function")
    throw new Error();
  return this.each(easeVarying(this._id, value));
}
function transition_filter(match) {
  if (typeof match !== "function")
    match = matcher(match);
  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }
  return new Transition(subgroups, this._parents, this._name, this._id);
}
function transition_merge(transition) {
  if (transition._id !== this._id)
    throw new Error();
  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge2 = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge2[i] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Transition(merges, this._parents, this._name, this._id);
}
function start(name22) {
  return (name22 + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0)
      t = t.slice(0, i);
    return !t || t === "start";
  });
}
function onFunction(id2, name22, listener) {
  var on0, on1, sit = start(name22) ? init : set;
  return function() {
    var schedule2 = sit(this, id2), on = schedule2.on;
    if (on !== on0)
      (on1 = (on0 = on).copy()).on(name22, listener);
    schedule2.on = on1;
  };
}
function transition_on(name22, listener) {
  var id2 = this._id;
  return arguments.length < 2 ? get(this.node(), id2).on.on(name22) : this.each(onFunction(id2, name22, listener));
}
function removeFunction(id2) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition)
      if (+i !== id2)
        return;
    if (parent)
      parent.removeChild(this);
  };
}
function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}
function transition_select(select2) {
  var name22 = this._name, id2 = this._id;
  if (typeof select2 !== "function")
    select2 = selector(select2);
  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select2.call(node, node.__data__, i, group))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule(subgroup[i], name22, id2, i, subgroup, get(node, id2));
      }
    }
  }
  return new Transition(subgroups, this._parents, name22, id2);
}
function transition_selectAll(select2) {
  var name22 = this._name, id2 = this._id;
  if (typeof select2 !== "function")
    select2 = selectorAll(select2);
  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children2 = select2.call(node, node.__data__, i, group), child, inherit2 = get(node, id2), k = 0, l = children2.length; k < l; ++k) {
          if (child = children2[k]) {
            schedule(child, name22, id2, k, children2, inherit2);
          }
        }
        subgroups.push(children2);
        parents.push(node);
      }
    }
  }
  return new Transition(subgroups, parents, name22, id2);
}
function transition_selection() {
  return new Selection(this._groups, this._parents);
}
function styleNull(name22, interpolate2) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name22), string1 = (this.style.removeProperty(name22), styleValue(this, name22));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, string10 = string1);
  };
}
function styleRemove(name22) {
  return function() {
    this.style.removeProperty(name22);
  };
}
function styleConstant(name22, interpolate2, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = styleValue(this, name22);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate2(string00 = string0, value1);
  };
}
function styleFunction(name22, interpolate2, value) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name22), value1 = value(this), string1 = value1 + "";
    if (value1 == null)
      string1 = value1 = (this.style.removeProperty(name22), styleValue(this, name22));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate2(string00 = string0, value1));
  };
}
function styleMaybeRemove(id2, name22) {
  var on0, on1, listener0, key = "style." + name22, event = "end." + key, remove2;
  return function() {
    var schedule2 = set(this, id2), on = schedule2.on, listener = schedule2.value[key] == null ? remove2 || (remove2 = styleRemove(name22)) : void 0;
    if (on !== on0 || listener0 !== listener)
      (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule2.on = on1;
  };
}
function transition_style(name22, value, priority) {
  var i = (name22 += "") === "transform" ? interpolateTransformCss : interpolate;
  return value == null ? this.styleTween(name22, styleNull(name22, i)).on("end.style." + name22, styleRemove(name22)) : typeof value === "function" ? this.styleTween(name22, styleFunction(name22, i, tweenValue(this, "style." + name22, value))).each(styleMaybeRemove(this._id, name22)) : this.styleTween(name22, styleConstant(name22, i, value), priority).on("end.style." + name22, null);
}
function styleInterpolate(name22, i, priority) {
  return function(t) {
    this.style.setProperty(name22, i.call(this, t), priority);
  };
}
function styleTween(name22, value, priority) {
  var t, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0)
      t = (i0 = i) && styleInterpolate(name22, i, priority);
    return t;
  }
  tween._value = value;
  return tween;
}
function transition_styleTween(name22, value, priority) {
  var key = "style." + (name22 += "");
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  return this.tween(key, styleTween(name22, value, priority == null ? "" : priority));
}
function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}
function textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}
function transition_text(value) {
  return this.tween("text", typeof value === "function" ? textFunction(tweenValue(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}
function textTween(value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0)
      t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }
  tween._value = value;
  return tween;
}
function transition_textTween(value) {
  var key = "text";
  if (arguments.length < 1)
    return (key = this.tween(key)) && key._value;
  if (value == null)
    return this.tween(key, null);
  if (typeof value !== "function")
    throw new Error();
  return this.tween(key, textTween(value));
}
function transition_transition() {
  var name22 = this._name, id0 = this._id, id1 = newId();
  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit2 = get(node, id0);
        schedule(node, name22, id1, i, group, {
          time: inherit2.time + inherit2.delay + inherit2.duration,
          delay: 0,
          duration: inherit2.duration,
          ease: inherit2.ease
        });
      }
    }
  }
  return new Transition(groups, this._parents, name22, id1);
}
function transition_end() {
  var on0, on1, that = this, id2 = that._id, size = that.size();
  return new Promise(function(resolve2, reject) {
    var cancel = { value: reject }, end = { value: function() {
      if (--size === 0)
        resolve2();
    } };
    that.each(function() {
      var schedule2 = set(this, id2), on = schedule2.on;
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }
      schedule2.on = on1;
    });
    if (size === 0)
      resolve2();
  });
}
function Transition(groups, parents, name22, id2) {
  this._groups = groups;
  this._parents = parents;
  this._name = name22;
  this._id = id2;
}
function newId() {
  return ++id;
}
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
function inherit(node, id2) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id2])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id2} not found`);
    }
  }
  return timing;
}
function selection_transition(name22) {
  var id2, timing;
  if (name22 instanceof Transition) {
    id2 = name22._id, name22 = name22._name;
  } else {
    id2 = newId(), (timing = defaultTiming).time = now(), name22 = name22 == null ? null : name22 + "";
  }
  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        schedule(node, name22, id2, i, group, timing || inherit(node, id2));
      }
    }
  }
  return new Transition(groups, this._parents, name22, id2);
}
function ZoomEvent(type22, {
  sourceEvent: sourceEvent2,
  target,
  transform,
  dispatch: dispatch2
}) {
  Object.defineProperties(this, {
    type: { value: type22, enumerable: true, configurable: true },
    sourceEvent: { value: sourceEvent2, enumerable: true, configurable: true },
    target: { value: target, enumerable: true, configurable: true },
    transform: { value: transform, enumerable: true, configurable: true },
    _: { value: dispatch2 }
  });
}
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}
function nopropagation(event) {
  event.stopImmediatePropagation();
}
function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
function defaultFilter(event) {
  return (!event.ctrlKey || event.type === "wheel") && !event.button;
}
function defaultExtent() {
  var e = this;
  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }
    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }
  return [[0, 0], [e.clientWidth, e.clientHeight]];
}
function defaultTransform() {
  return this.__zoom || identity$2;
}
function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 2e-3) * (event.ctrlKey ? 10 : 1);
}
function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}
function zoom() {
  var filter2 = defaultFilter, extent = defaultExtent, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable, scaleExtent = [0, Infinity], translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]], duration = 250, interpolate2 = interpolateZoom, listeners = dispatch("start", "zoom", "end"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;
  function zoom2(selection2) {
    selection2.property("__zoom", defaultTransform).on("wheel.zoom", wheeled, { passive: false }).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  zoom2.transform = function(collection, transform, point, event) {
    var selection2 = collection.selection ? collection.selection() : collection;
    selection2.property("__zoom", defaultTransform);
    if (collection !== selection2) {
      schedule2(collection, transform, point, event);
    } else {
      selection2.interrupt().each(function() {
        gesture(this, arguments).event(event).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };
  zoom2.scaleBy = function(selection2, k, p, event) {
    zoom2.scaleTo(selection2, function() {
      var k0 = this.__zoom.k, k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };
  zoom2.scaleTo = function(selection2, k, p, event) {
    zoom2.transform(selection2, function() {
      var e = extent.apply(this, arguments), t0 = this.__zoom, p02 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p, p1 = t0.invert(p02), k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p02, p1), e, translateExtent);
    }, p, event);
  };
  zoom2.translateBy = function(selection2, x, y, event) {
    zoom2.transform(selection2, function() {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };
  zoom2.translateTo = function(selection2, x, y, p, event) {
    zoom2.transform(selection2, function() {
      var e = extent.apply(this, arguments), t = this.__zoom, p02 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(identity$2.translate(p02[0], p02[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p, event);
  };
  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
  }
  function translate(transform, p02, p1) {
    var x = p02[0] - p1[0] * transform.k, y = p02[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
  }
  function centroid(extent2) {
    return [(+extent2[0][0] + +extent2[1][0]) / 2, (+extent2[0][1] + +extent2[1][1]) / 2];
  }
  function schedule2(transition, transform, point, event) {
    transition.on("start.zoom", function() {
      gesture(this, arguments).event(event).start();
    }).on("interrupt.zoom end.zoom", function() {
      gesture(this, arguments).event(event).end();
    }).tween("zoom", function() {
      var that = this, args = arguments, g = gesture(that, args).event(event), e = extent.apply(that, args), p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point, w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = typeof transform === "function" ? transform.apply(that, args) : transform, i = interpolate2(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function(t) {
        if (t === 1)
          t = b;
        else {
          var l = i(t), k = w / l[2];
          t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
        }
        g.zoom(null, t);
      };
    });
  }
  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }
  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }
  Gesture.prototype = {
    event: function(event) {
      if (event)
        this.sourceEvent = event;
      return this;
    },
    start: function() {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }
      return this;
    },
    zoom: function(key, transform) {
      if (this.mouse && key !== "mouse")
        this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch")
        this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch")
        this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function() {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }
      return this;
    },
    emit: function(type22) {
      var d = select(this.that).datum();
      listeners.call(type22, this.that, new ZoomEvent(type22, {
        sourceEvent: this.sourceEvent,
        target: zoom2,
        type: type22,
        transform: this.that.__zoom,
        dispatch: listeners
      }), d);
    }
  };
  function wheeled(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var g = gesture(this, args).event(event), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = pointer(event);
    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }
      clearTimeout(g.wheel);
    } else if (t.k === k)
      return;
    else {
      g.mouse = [p, t.invert(p)];
      interrupt(this);
      g.start();
    }
    noevent(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));
    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }
  function mousedowned(event, ...args) {
    if (touchending || !filter2.apply(this, arguments))
      return;
    var currentTarget = event.currentTarget, g = gesture(this, args, true).event(event), v = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true), p = pointer(event, currentTarget), x02 = event.clientX, y02 = event.clientY;
    dragDisable(event.view);
    nopropagation(event);
    g.mouse = [p, this.__zoom.invert(p)];
    interrupt(this);
    g.start();
    function mousemoved(event2) {
      noevent(event2);
      if (!g.moved) {
        var dx = event2.clientX - x02, dy = event2.clientY - y02;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }
      g.event(event2).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event2, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }
    function mouseupped(event2) {
      v.on("mousemove.zoom mouseup.zoom", null);
      yesdrag(event2.view, g.moved);
      noevent(event2);
      g.event(event2).end();
    }
  }
  function dblclicked(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var t0 = this.__zoom, p02 = pointer(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t0.invert(p02), k1 = t0.k * (event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p02, p1), extent.apply(this, args), translateExtent);
    noevent(event);
    if (duration > 0)
      select(this).transition().duration(duration).call(schedule2, t1, p02, event);
    else
      select(this).call(zoom2.transform, t1, p02, event);
  }
  function touchstarted(event, ...args) {
    if (!filter2.apply(this, arguments))
      return;
    var touches = event.touches, n = touches.length, g = gesture(this, args, event.changedTouches.length === n).event(event), started, i, t, p;
    nopropagation(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0)
        g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
      else if (!g.touch1 && g.touch0[2] !== p[2])
        g.touch1 = p, g.taps = 0;
    }
    if (touchstarting)
      touchstarting = clearTimeout(touchstarting);
    if (started) {
      if (g.taps < 2)
        touchfirst = p[0], touchstarting = setTimeout(function() {
          touchstarting = null;
        }, touchDelay);
      interrupt(this);
      g.start();
    }
  }
  function touchmoved(event, ...args) {
    if (!this.__zooming)
      return;
    var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t, p, l;
    noevent(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier)
        g.touch0[0] = p;
      else if (g.touch1 && g.touch1[2] === t.identifier)
        g.touch1[0] = p;
    }
    t = g.that.__zoom;
    if (g.touch1) {
      var p02 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p02[0]) * dp + (dp = p1[1] - p02[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p02[0] + p1[0]) / 2, (p02[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0)
      p = g.touch0[0], l = g.touch0[1];
    else
      return;
    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }
  function touchended(event, ...args) {
    if (!this.__zooming)
      return;
    var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t;
    nopropagation(event);
    if (touchending)
      clearTimeout(touchending);
    touchending = setTimeout(function() {
      touchending = null;
    }, touchDelay);
    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier)
        delete g.touch0;
      else if (g.touch1 && g.touch1[2] === t.identifier)
        delete g.touch1;
    }
    if (g.touch1 && !g.touch0)
      g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0)
      g.touch0[1] = this.__zoom.invert(g.touch0[0]);
    else {
      g.end();
      if (g.taps === 2) {
        t = pointer(t, this);
        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = select(this).on("dblclick.zoom");
          if (p)
            p.apply(this, arguments);
        }
      }
    }
  }
  zoom2.wheelDelta = function(_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant(+_), zoom2) : wheelDelta;
  };
  zoom2.filter = function(_) {
    return arguments.length ? (filter2 = typeof _ === "function" ? _ : constant(!!_), zoom2) : filter2;
  };
  zoom2.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : constant(!!_), zoom2) : touchable;
  };
  zoom2.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom2) : extent;
  };
  zoom2.scaleExtent = function(_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom2) : [scaleExtent[0], scaleExtent[1]];
  };
  zoom2.translateExtent = function(_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom2) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };
  zoom2.constrain = function(_) {
    return arguments.length ? (constrain = _, zoom2) : constrain;
  };
  zoom2.duration = function(_) {
    return arguments.length ? (duration = +_, zoom2) : duration;
  };
  zoom2.interpolate = function(_) {
    return arguments.length ? (interpolate2 = _, zoom2) : interpolate2;
  };
  zoom2.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom2 : value;
  };
  zoom2.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom2) : Math.sqrt(clickDistance2);
  };
  zoom2.tapDistance = function(_) {
    return arguments.length ? (tapDistance = +_, zoom2) : tapDistance;
  };
  return zoom2;
}
function createZoomer() {
  const z = zoom();
  let _svg;
  return {
    zoomer: (svg, offset) => {
      _svg = svg;
      const { left, top } = offset ?? { left: 0, top: 0 };
      select(svg).select("g").attr("style", `transform:translate(${left}px, ${top}px)`);
      select(svg).call(z.on("zoom", ({ transform }) => {
        const { k, x, y } = transform;
        select(svg).select("g").attr("style", `transform:translate(${left + x}px, ${top + y}px) scale(${k})`);
      }));
    },
    reset: () => {
      select(_svg).transition().duration(750).call(z.transform, identity$2);
    }
  };
}
function initRange(domain, range2) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range2).domain(domain);
      break;
  }
  return this;
}
function ordinal() {
  var index = new InternMap(), domain = [], range2 = [], unknown = implicit;
  function scale(d) {
    let i = index.get(d);
    if (i === void 0) {
      if (unknown !== implicit)
        return unknown;
      index.set(d, i = domain.push(d) - 1);
    }
    return range2[i % range2.length];
  }
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index = new InternMap();
    for (const value of _) {
      if (index.has(value))
        continue;
      index.set(value, domain.push(value) - 1);
    }
    return scale;
  };
  scale.range = function(_) {
    return arguments.length ? (range2 = Array.from(_), scale) : range2.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range2).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}
function constants(x) {
  return function() {
    return x;
  };
}
function number(x) {
  return +x;
}
function identity$1(x) {
  return x;
}
function normalize(a, b) {
  return (b -= a = +a) ? function(x) {
    return (x - a) / b;
  } : constants(isNaN(b) ? NaN : 0.5);
}
function clamper(a, b) {
  var t;
  if (a > b)
    t = a, a = b, b = t;
  return function(x) {
    return Math.max(a, Math.min(b, x));
  };
}
function bimap(domain, range2, interpolate2) {
  var d0 = domain[0], d1 = domain[1], r0 = range2[0], r1 = range2[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);
  return function(x) {
    return r0(d0(x));
  };
}
function polymap(domain, range2, interpolate2) {
  var j = Math.min(domain.length, range2.length) - 1, d = new Array(j), r = new Array(j), i = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range2 = range2.slice().reverse();
  }
  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate2(range2[i], range2[i + 1]);
  }
  return function(x) {
    var i2 = bisect(domain, x, 1, j) - 1;
    return r[i2](d[i2](x));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range2 = unit, interpolate2 = interpolate$1, transform, untransform, unknown, clamp = identity$1, piecewise, output, input;
  function rescale() {
    var n = Math.min(domain.length, range2.length);
    if (clamp !== identity$1)
      clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range2, interpolate2)))(transform(clamp(x)));
  }
  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range2, domain.map(transform), interpolateNumber)))(y)));
  };
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range2 = Array.from(_), rescale()) : range2.slice();
  };
  scale.rangeRound = function(_) {
    return range2 = Array.from(_), interpolate2 = interpolateRound, rescale();
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity$1, rescale()) : clamp !== identity$1;
  };
  scale.interpolate = function(_) {
    return arguments.length ? (interpolate2 = _, rescale()) : interpolate2;
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity$1, identity$1);
}
function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
}
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}
function exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}
function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
    while (i > 0 && g > 0) {
      if (length + g + 1 > width)
        g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width)
        break;
      g = grouping[j = (j + 1) % grouping.length];
    }
    return t.reverse().join(thousands);
  };
}
function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
function formatTrim(s2) {
  out:
    for (var n = s2.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s2[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s2[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
}
function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d)
    return x + "";
  var coefficient = d[0], exponent2 = d[1], i = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0];
}
function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d)
    return x + "";
  var coefficient = d[0], exponent2 = d[1];
  return exponent2 < 0 ? "0." + new Array(-exponent2).join("0") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + "." + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join("0");
}
function identity(x) {
  return x;
}
function formatLocale(locale2) {
  var group = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity : formatGroup(map.call(locale2.grouping, Number), locale2.thousands + ""), currencyPrefix = locale2.currency === void 0 ? "" : locale2.currency[0] + "", currencySuffix = locale2.currency === void 0 ? "" : locale2.currency[1] + "", decimal = locale2.decimal === void 0 ? "." : locale2.decimal + "", numerals = locale2.numerals === void 0 ? identity : formatNumerals(map.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? "%" : locale2.percent + "", minus = locale2.minus === void 0 ? "\u2212" : locale2.minus + "", nan = locale2.nan === void 0 ? "NaN" : locale2.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign2 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type22 = specifier.type;
    if (type22 === "n")
      comma = true, type22 = "g";
    else if (!formatTypes[type22])
      precision === void 0 && (precision = 12), trim = true, type22 = "g";
    if (zero2 || fill === "0" && align === "=")
      zero2 = true, fill = "0", align = "=";
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type22) ? "0" + type22.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type22) ? percent : "";
    var formatType = formatTypes[type22], maybeSuffix = /[defgprs%]/.test(type22);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type22) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format22(value) {
      var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
      if (type22 === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim)
          value = formatTrim(value);
        if (valueNegative && +value === 0 && sign2 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign2 === "(" ? sign2 : minus : sign2 === "-" || sign2 === "(" ? "" : sign2) + valuePrefix;
        valueSuffix = (type22 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign2 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value = group(value, Infinity);
      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma && zero2)
        value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format22.toString = function() {
      return specifier + "";
    };
    return format22;
  }
  function formatPrefix2(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
    return function(value2) {
      return f(k * value2) + prefix;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}
function defaultLocale(definition) {
  locale = formatLocale(definition);
  format2 = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}
function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}
function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
}
function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, exponent(max) - exponent(step)) + 1;
}
function tickFormat(start2, stop, count, specifier) {
  var step = tickStep(start2, stop, count), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value)))
        specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format2(specifier);
}
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };
  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };
  scale.nice = function(count) {
    if (count == null)
      count = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start2 = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start2, stop, count);
      if (step === prestep) {
        d[i0] = start2;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start2 = Math.floor(start2 / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start2 = Math.ceil(start2 * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
var subscriber_queue, ascendingBisect, bisectRight, bisect, Adder, InternMap, e10, e5, e2, epsilon, epsilon2$1, pi, halfPi, quarterPi, tau, degrees$1, radians, abs, atan, atan2, cos, exp, log, sin, sign, sqrt, tan, streamObjectType, streamGeometryType, areaRingSum$1, areaSum$1, lambda00$1, phi00$1, lambda0$1, cosPhi0, sinPhi0, areaStream$1, lambda0, phi0, lambda1, phi1, lambda2, lambda00, phi00, p0, deltaSum, ranges, range, boundsStream$2, clipAntimeridian, clipMax, clipMin, identity$4, areaSum, areaRingSum, x00$2, y00$2, x0$3, y0$3, areaStream, pathArea, x0$2, y0$2, x1, y1, boundsStream, boundsStream$1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, x00$1, y00$1, x0$1, y0$1, centroidStream, pathCentroid, lengthSum, lengthRing, x00, y00, x0, y0, lengthStream, pathMeasure, maxDepth, cosMinDistance, transformRadians, noop2, xhtml, namespaces, find, filter, root, nonpassivecapture, darker, brighter, reI, reN, reP, reHex, reRgbInteger, reRgbPercent, reRgbaInteger, reRgbaPercent, reHslPercent, reHslaPercent, named, constant$1, interpolateRgb, reA, reB, degrees, identity$3, svgNode, interpolateTransformCss, interpolateTransformSvg, epsilon2, interpolateZoom, frame, timeout$1, interval, pokeDelay, taskHead, taskTail, clockLast, clockNow, clockSkew, clock, setFrame, emptyOn, emptyTween, CREATED, SCHEDULED, STARTING, STARTED, RUNNING, ENDING, ENDED, Selection, id, selection_prototype, defaultTiming, constant, identity$2, css, BaseMap, FeatureLayer, type$1, name$1, crs$1, features$1, rto, implicit, unit, re, prefixExponent, formatTypes, map, prefixes, locale, format2, formatPrefix, type, name, crs, features, northisland;
var init_rto2017_ni_simplified_3dp_geojson_b549cdc6 = __esm({
  ".svelte-kit/output/server/chunks/rto2017_ni_simplified_3dp.geojson-b549cdc6.js"() {
    init_shims();
    init_app_ca4b120c();
    subscriber_queue = [];
    ascendingBisect = bisector(ascending$1);
    bisectRight = ascendingBisect.right;
    bisector(number$1).center;
    bisect = bisectRight;
    Adder = class {
      constructor() {
        this._partials = new Float64Array(32);
        this._n = 0;
      }
      add(x) {
        const p = this._partials;
        let i = 0;
        for (let j = 0; j < this._n && j < 32; j++) {
          const y = p[j], hi = x + y, lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
          if (lo)
            p[i++] = lo;
          x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
      }
      valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
          hi = p[--n];
          while (n > 0) {
            x = hi;
            y = p[--n];
            hi = x + y;
            lo = y - (hi - x);
            if (lo)
              break;
          }
          if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
            y = lo * 2;
            x = hi + y;
            if (y == x - hi)
              hi = x;
          }
        }
        return hi;
      }
    };
    InternMap = class extends Map {
      constructor(entries, key = keyof) {
        super();
        Object.defineProperties(this, { _intern: { value: new Map() }, _key: { value: key } });
        if (entries != null)
          for (const [key2, value] of entries)
            this.set(key2, value);
      }
      get(key) {
        return super.get(intern_get(this, key));
      }
      has(key) {
        return super.has(intern_get(this, key));
      }
      set(key, value) {
        return super.set(intern_set(this, key), value);
      }
      delete(key) {
        return super.delete(intern_delete(this, key));
      }
    };
    e10 = Math.sqrt(50);
    e5 = Math.sqrt(10);
    e2 = Math.sqrt(2);
    epsilon = 1e-6;
    epsilon2$1 = 1e-12;
    pi = Math.PI;
    halfPi = pi / 2;
    quarterPi = pi / 4;
    tau = pi * 2;
    degrees$1 = 180 / pi;
    radians = pi / 180;
    abs = Math.abs;
    atan = Math.atan;
    atan2 = Math.atan2;
    cos = Math.cos;
    exp = Math.exp;
    log = Math.log;
    sin = Math.sin;
    sign = Math.sign || function(x) {
      return x > 0 ? 1 : x < 0 ? -1 : 0;
    };
    sqrt = Math.sqrt;
    tan = Math.tan;
    streamObjectType = {
      Feature: function(object2, stream) {
        streamGeometry(object2.geometry, stream);
      },
      FeatureCollection: function(object2, stream) {
        var features22 = object2.features, i = -1, n = features22.length;
        while (++i < n)
          streamGeometry(features22[i].geometry, stream);
      }
    };
    streamGeometryType = {
      Sphere: function(object2, stream) {
        stream.sphere();
      },
      Point: function(object2, stream) {
        object2 = object2.coordinates;
        stream.point(object2[0], object2[1], object2[2]);
      },
      MultiPoint: function(object2, stream) {
        var coordinates = object2.coordinates, i = -1, n = coordinates.length;
        while (++i < n)
          object2 = coordinates[i], stream.point(object2[0], object2[1], object2[2]);
      },
      LineString: function(object2, stream) {
        streamLine(object2.coordinates, stream, 0);
      },
      MultiLineString: function(object2, stream) {
        var coordinates = object2.coordinates, i = -1, n = coordinates.length;
        while (++i < n)
          streamLine(coordinates[i], stream, 0);
      },
      Polygon: function(object2, stream) {
        streamPolygon(object2.coordinates, stream);
      },
      MultiPolygon: function(object2, stream) {
        var coordinates = object2.coordinates, i = -1, n = coordinates.length;
        while (++i < n)
          streamPolygon(coordinates[i], stream);
      },
      GeometryCollection: function(object2, stream) {
        var geometries = object2.geometries, i = -1, n = geometries.length;
        while (++i < n)
          streamGeometry(geometries[i], stream);
      }
    };
    areaRingSum$1 = new Adder();
    areaSum$1 = new Adder();
    areaStream$1 = {
      point: noop$1,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: function() {
        areaRingSum$1 = new Adder();
        areaStream$1.lineStart = areaRingStart$1;
        areaStream$1.lineEnd = areaRingEnd$1;
      },
      polygonEnd: function() {
        var areaRing = +areaRingSum$1;
        areaSum$1.add(areaRing < 0 ? tau + areaRing : areaRing);
        this.lineStart = this.lineEnd = this.point = noop$1;
      },
      sphere: function() {
        areaSum$1.add(tau);
      }
    };
    boundsStream$2 = {
      point: boundsPoint$1,
      lineStart: boundsLineStart,
      lineEnd: boundsLineEnd,
      polygonStart: function() {
        boundsStream$2.point = boundsRingPoint;
        boundsStream$2.lineStart = boundsRingStart;
        boundsStream$2.lineEnd = boundsRingEnd;
        deltaSum = new Adder();
        areaStream$1.polygonStart();
      },
      polygonEnd: function() {
        areaStream$1.polygonEnd();
        boundsStream$2.point = boundsPoint$1;
        boundsStream$2.lineStart = boundsLineStart;
        boundsStream$2.lineEnd = boundsLineEnd;
        if (areaRingSum$1 < 0)
          lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
        else if (deltaSum > epsilon)
          phi1 = 90;
        else if (deltaSum < -epsilon)
          phi0 = -90;
        range[0] = lambda0, range[1] = lambda1;
      },
      sphere: function() {
        lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
      }
    };
    rotationIdentity.invert = rotationIdentity;
    clipAntimeridian = clip(function() {
      return true;
    }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]);
    clipMax = 1e9;
    clipMin = -clipMax;
    identity$4 = (x) => x;
    areaSum = new Adder();
    areaRingSum = new Adder();
    areaStream = {
      point: noop$1,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: function() {
        areaStream.lineStart = areaRingStart;
        areaStream.lineEnd = areaRingEnd;
      },
      polygonEnd: function() {
        areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop$1;
        areaSum.add(abs(areaRingSum));
        areaRingSum = new Adder();
      },
      result: function() {
        var area = areaSum / 2;
        areaSum = new Adder();
        return area;
      }
    };
    pathArea = areaStream;
    x0$2 = Infinity;
    y0$2 = x0$2;
    x1 = -x0$2;
    y1 = x1;
    boundsStream = {
      point: boundsPoint,
      lineStart: noop$1,
      lineEnd: noop$1,
      polygonStart: noop$1,
      polygonEnd: noop$1,
      result: function() {
        var bounds = [[x0$2, y0$2], [x1, y1]];
        x1 = y1 = -(y0$2 = x0$2 = Infinity);
        return bounds;
      }
    };
    boundsStream$1 = boundsStream;
    X0 = 0;
    Y0 = 0;
    Z0 = 0;
    X1 = 0;
    Y1 = 0;
    Z1 = 0;
    X2 = 0;
    Y2 = 0;
    Z2 = 0;
    centroidStream = {
      point: centroidPoint,
      lineStart: centroidLineStart,
      lineEnd: centroidLineEnd,
      polygonStart: function() {
        centroidStream.lineStart = centroidRingStart;
        centroidStream.lineEnd = centroidRingEnd;
      },
      polygonEnd: function() {
        centroidStream.point = centroidPoint;
        centroidStream.lineStart = centroidLineStart;
        centroidStream.lineEnd = centroidLineEnd;
      },
      result: function() {
        var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
        X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
        return centroid;
      }
    };
    pathCentroid = centroidStream;
    PathContext.prototype = {
      _radius: 4.5,
      pointRadius: function(_) {
        return this._radius = _, this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0)
          this._context.closePath();
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._context.moveTo(x, y);
            this._point = 1;
            break;
          }
          case 1: {
            this._context.lineTo(x, y);
            break;
          }
          default: {
            this._context.moveTo(x + this._radius, y);
            this._context.arc(x, y, this._radius, 0, tau);
            break;
          }
        }
      },
      result: noop$1
    };
    lengthSum = new Adder();
    lengthStream = {
      point: noop$1,
      lineStart: function() {
        lengthStream.point = lengthPointFirst;
      },
      lineEnd: function() {
        if (lengthRing)
          lengthPoint(x00, y00);
        lengthStream.point = noop$1;
      },
      polygonStart: function() {
        lengthRing = true;
      },
      polygonEnd: function() {
        lengthRing = null;
      },
      result: function() {
        var length = +lengthSum;
        lengthSum = new Adder();
        return length;
      }
    };
    pathMeasure = lengthStream;
    PathString.prototype = {
      _radius: 4.5,
      _circle: circle(4.5),
      pointRadius: function(_) {
        if ((_ = +_) !== this._radius)
          this._radius = _, this._circle = null;
        return this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0)
          this._string.push("Z");
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._string.push("M", x, ",", y);
            this._point = 1;
            break;
          }
          case 1: {
            this._string.push("L", x, ",", y);
            break;
          }
          default: {
            if (this._circle == null)
              this._circle = circle(this._radius);
            this._string.push("M", x, ",", y, this._circle);
            break;
          }
        }
      },
      result: function() {
        if (this._string.length) {
          var result = this._string.join("");
          this._string = [];
          return result;
        } else {
          return null;
        }
      }
    };
    TransformStream.prototype = {
      constructor: TransformStream,
      point: function(x, y) {
        this.stream.point(x, y);
      },
      sphere: function() {
        this.stream.sphere();
      },
      lineStart: function() {
        this.stream.lineStart();
      },
      lineEnd: function() {
        this.stream.lineEnd();
      },
      polygonStart: function() {
        this.stream.polygonStart();
      },
      polygonEnd: function() {
        this.stream.polygonEnd();
      }
    };
    maxDepth = 16;
    cosMinDistance = cos(30 * radians);
    transformRadians = transformer$1({
      point: function(x, y) {
        this.stream.point(x * radians, y * radians);
      }
    });
    mercatorRaw.invert = function(x, y) {
      return [x, 2 * atan(exp(y)) - halfPi];
    };
    noop2 = { value: () => {
    } };
    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function(typename, callback) {
        var _ = this._, T = parseTypenames$1(typename + "", _), t, i = -1, n = T.length;
        if (arguments.length < 2) {
          while (++i < n)
            if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name)))
              return t;
          return;
        }
        if (callback != null && typeof callback !== "function")
          throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type)
            _[t] = set$1(_[t], typename.name, callback);
          else if (callback == null)
            for (t in _)
              _[t] = set$1(_[t], typename.name, null);
        }
        return this;
      },
      copy: function() {
        var copy2 = {}, _ = this._;
        for (var t in _)
          copy2[t] = _[t].slice();
        return new Dispatch(copy2);
      },
      call: function(type22, that) {
        if ((n = arguments.length - 2) > 0)
          for (var args = new Array(n), i = 0, n, t; i < n; ++i)
            args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type22))
          throw new Error("unknown type: " + type22);
        for (t = this._[type22], i = 0, n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      },
      apply: function(type22, that, args) {
        if (!this._.hasOwnProperty(type22))
          throw new Error("unknown type: " + type22);
        for (var t = this._[type22], i = 0, n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      }
    };
    xhtml = "http://www.w3.org/1999/xhtml";
    namespaces = {
      svg: "http://www.w3.org/2000/svg",
      xhtml,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };
    find = Array.prototype.find;
    filter = Array.prototype.filter;
    EnterNode.prototype = {
      constructor: EnterNode,
      appendChild: function(child) {
        return this._parent.insertBefore(child, this._next);
      },
      insertBefore: function(child, next) {
        return this._parent.insertBefore(child, next);
      },
      querySelector: function(selector2) {
        return this._parent.querySelector(selector2);
      },
      querySelectorAll: function(selector2) {
        return this._parent.querySelectorAll(selector2);
      }
    };
    ClassList.prototype = {
      add: function(name22) {
        var i = this._names.indexOf(name22);
        if (i < 0) {
          this._names.push(name22);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function(name22) {
        var i = this._names.indexOf(name22);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function(name22) {
        return this._names.indexOf(name22) >= 0;
      }
    };
    root = [null];
    Selection$1.prototype = selection.prototype = {
      constructor: Selection$1,
      select: selection_select,
      selectAll: selection_selectAll,
      selectChild: selection_selectChild,
      selectChildren: selection_selectChildren,
      filter: selection_filter,
      data: selection_data,
      enter: selection_enter,
      exit: selection_exit,
      join: selection_join,
      merge: selection_merge,
      selection: selection_selection,
      order: selection_order,
      sort: selection_sort,
      call: selection_call,
      nodes: selection_nodes,
      node: selection_node,
      size: selection_size,
      empty: selection_empty,
      each: selection_each,
      attr: selection_attr,
      style: selection_style,
      property: selection_property,
      classed: selection_classed,
      text: selection_text,
      html: selection_html,
      raise: selection_raise,
      lower: selection_lower,
      append: selection_append,
      insert: selection_insert,
      remove: selection_remove,
      clone: selection_clone,
      datum: selection_datum,
      on: selection_on,
      dispatch: selection_dispatch,
      [Symbol.iterator]: selection_iterator
    };
    nonpassivecapture = { capture: true, passive: false };
    darker = 0.7;
    brighter = 1 / darker;
    reI = "\\s*([+-]?\\d+)\\s*";
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
    reHex = /^#([0-9a-f]{3,8})$/;
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
    named = {
      aliceblue: 15792383,
      antiquewhite: 16444375,
      aqua: 65535,
      aquamarine: 8388564,
      azure: 15794175,
      beige: 16119260,
      bisque: 16770244,
      black: 0,
      blanchedalmond: 16772045,
      blue: 255,
      blueviolet: 9055202,
      brown: 10824234,
      burlywood: 14596231,
      cadetblue: 6266528,
      chartreuse: 8388352,
      chocolate: 13789470,
      coral: 16744272,
      cornflowerblue: 6591981,
      cornsilk: 16775388,
      crimson: 14423100,
      cyan: 65535,
      darkblue: 139,
      darkcyan: 35723,
      darkgoldenrod: 12092939,
      darkgray: 11119017,
      darkgreen: 25600,
      darkgrey: 11119017,
      darkkhaki: 12433259,
      darkmagenta: 9109643,
      darkolivegreen: 5597999,
      darkorange: 16747520,
      darkorchid: 10040012,
      darkred: 9109504,
      darksalmon: 15308410,
      darkseagreen: 9419919,
      darkslateblue: 4734347,
      darkslategray: 3100495,
      darkslategrey: 3100495,
      darkturquoise: 52945,
      darkviolet: 9699539,
      deeppink: 16716947,
      deepskyblue: 49151,
      dimgray: 6908265,
      dimgrey: 6908265,
      dodgerblue: 2003199,
      firebrick: 11674146,
      floralwhite: 16775920,
      forestgreen: 2263842,
      fuchsia: 16711935,
      gainsboro: 14474460,
      ghostwhite: 16316671,
      gold: 16766720,
      goldenrod: 14329120,
      gray: 8421504,
      green: 32768,
      greenyellow: 11403055,
      grey: 8421504,
      honeydew: 15794160,
      hotpink: 16738740,
      indianred: 13458524,
      indigo: 4915330,
      ivory: 16777200,
      khaki: 15787660,
      lavender: 15132410,
      lavenderblush: 16773365,
      lawngreen: 8190976,
      lemonchiffon: 16775885,
      lightblue: 11393254,
      lightcoral: 15761536,
      lightcyan: 14745599,
      lightgoldenrodyellow: 16448210,
      lightgray: 13882323,
      lightgreen: 9498256,
      lightgrey: 13882323,
      lightpink: 16758465,
      lightsalmon: 16752762,
      lightseagreen: 2142890,
      lightskyblue: 8900346,
      lightslategray: 7833753,
      lightslategrey: 7833753,
      lightsteelblue: 11584734,
      lightyellow: 16777184,
      lime: 65280,
      limegreen: 3329330,
      linen: 16445670,
      magenta: 16711935,
      maroon: 8388608,
      mediumaquamarine: 6737322,
      mediumblue: 205,
      mediumorchid: 12211667,
      mediumpurple: 9662683,
      mediumseagreen: 3978097,
      mediumslateblue: 8087790,
      mediumspringgreen: 64154,
      mediumturquoise: 4772300,
      mediumvioletred: 13047173,
      midnightblue: 1644912,
      mintcream: 16121850,
      mistyrose: 16770273,
      moccasin: 16770229,
      navajowhite: 16768685,
      navy: 128,
      oldlace: 16643558,
      olive: 8421376,
      olivedrab: 7048739,
      orange: 16753920,
      orangered: 16729344,
      orchid: 14315734,
      palegoldenrod: 15657130,
      palegreen: 10025880,
      paleturquoise: 11529966,
      palevioletred: 14381203,
      papayawhip: 16773077,
      peachpuff: 16767673,
      peru: 13468991,
      pink: 16761035,
      plum: 14524637,
      powderblue: 11591910,
      purple: 8388736,
      rebeccapurple: 6697881,
      red: 16711680,
      rosybrown: 12357519,
      royalblue: 4286945,
      saddlebrown: 9127187,
      salmon: 16416882,
      sandybrown: 16032864,
      seagreen: 3050327,
      seashell: 16774638,
      sienna: 10506797,
      silver: 12632256,
      skyblue: 8900331,
      slateblue: 6970061,
      slategray: 7372944,
      slategrey: 7372944,
      snow: 16775930,
      springgreen: 65407,
      steelblue: 4620980,
      tan: 13808780,
      teal: 32896,
      thistle: 14204888,
      tomato: 16737095,
      turquoise: 4251856,
      violet: 15631086,
      wheat: 16113331,
      white: 16777215,
      whitesmoke: 16119285,
      yellow: 16776960,
      yellowgreen: 10145074
    };
    define(Color, color, {
      copy: function(channels) {
        return Object.assign(new this.constructor(), this, channels);
      },
      displayable: function() {
        return this.rgb().displayable();
      },
      hex: color_formatHex,
      formatHex: color_formatHex,
      formatHsl: color_formatHsl,
      formatRgb: color_formatRgb,
      toString: color_formatRgb
    });
    define(Rgb, rgb, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function() {
        return this;
      },
      displayable: function() {
        return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
      },
      hex: rgb_formatHex,
      formatHex: rgb_formatHex,
      formatRgb: rgb_formatRgb,
      toString: rgb_formatRgb
    }));
    define(Hsl, hsl, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s2, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
      },
      displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
      },
      formatHsl: function() {
        var a = this.opacity;
        a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
      }
    }));
    constant$1 = (x) => () => x;
    interpolateRgb = function rgbGamma(y) {
      var color2 = gamma(y);
      function rgb$1(start2, end) {
        var r = color2((start2 = rgb(start2)).r, (end = rgb(end)).r), g = color2(start2.g, end.g), b = color2(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
        return function(t) {
          start2.r = r(t);
          start2.g = g(t);
          start2.b = b(t);
          start2.opacity = opacity(t);
          return start2 + "";
        };
      }
      rgb$1.gamma = rgbGamma;
      return rgb$1;
    }(1);
    reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
    reB = new RegExp(reA.source, "g");
    degrees = 180 / Math.PI;
    identity$3 = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };
    interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
    epsilon2 = 1e-12;
    interpolateZoom = function zoomRho(rho, rho2, rho4) {
      function zoom2(p02, p1) {
        var ux0 = p02[0], uy0 = p02[1], w0 = p02[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
        if (d2 < epsilon2) {
          S = Math.log(w1 / w0) / rho;
          i = function(t) {
            return [
              ux0 + t * dx,
              uy0 + t * dy,
              w0 * Math.exp(rho * t * S)
            ];
          };
        } else {
          var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
          S = (r1 - r0) / rho;
          i = function(t) {
            var s2 = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s2 + r0) - sinh(r0));
            return [
              ux0 + u * dx,
              uy0 + u * dy,
              w0 * coshr0 / cosh(rho * s2 + r0)
            ];
          };
        }
        i.duration = S * 1e3 * rho / Math.SQRT2;
        return i;
      }
      zoom2.rho = function(_) {
        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
      };
      return zoom2;
    }(Math.SQRT2, 2, 4);
    frame = 0;
    timeout$1 = 0;
    interval = 0;
    pokeDelay = 1e3;
    clockLast = 0;
    clockNow = 0;
    clockSkew = 0;
    clock = typeof performance === "object" && performance.now ? performance : Date;
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
      setTimeout(f, 17);
    };
    Timer.prototype = timer.prototype = {
      constructor: Timer,
      restart: function(callback, delay, time) {
        if (typeof callback !== "function")
          throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
          if (taskTail)
            taskTail._next = this;
          else
            taskHead = this;
          taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
      },
      stop: function() {
        if (this._call) {
          this._call = null;
          this._time = Infinity;
          sleep();
        }
      }
    };
    emptyOn = dispatch("start", "end", "cancel", "interrupt");
    emptyTween = [];
    CREATED = 0;
    SCHEDULED = 1;
    STARTING = 2;
    STARTED = 3;
    RUNNING = 4;
    ENDING = 5;
    ENDED = 6;
    Selection = selection.prototype.constructor;
    id = 0;
    selection_prototype = selection.prototype;
    Transition.prototype = {
      constructor: Transition,
      select: transition_select,
      selectAll: transition_selectAll,
      selectChild: selection_prototype.selectChild,
      selectChildren: selection_prototype.selectChildren,
      filter: transition_filter,
      merge: transition_merge,
      selection: transition_selection,
      transition: transition_transition,
      call: selection_prototype.call,
      nodes: selection_prototype.nodes,
      node: selection_prototype.node,
      size: selection_prototype.size,
      empty: selection_prototype.empty,
      each: selection_prototype.each,
      on: transition_on,
      attr: transition_attr,
      attrTween: transition_attrTween,
      style: transition_style,
      styleTween: transition_styleTween,
      text: transition_text,
      textTween: transition_textTween,
      remove: transition_remove,
      tween: transition_tween,
      delay: transition_delay,
      duration: transition_duration,
      ease: transition_ease,
      easeVarying: transition_easeVarying,
      end: transition_end,
      [Symbol.iterator]: selection_prototype[Symbol.iterator]
    };
    defaultTiming = {
      time: null,
      delay: 0,
      duration: 250,
      ease: cubicInOut
    };
    selection.prototype.interrupt = selection_interrupt;
    selection.prototype.transition = selection_transition;
    constant = (x) => () => x;
    Transform.prototype = {
      constructor: Transform,
      scale: function(k) {
        return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
      },
      translate: function(x, y) {
        return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
      },
      apply: function(point) {
        return [point[0] * this.k + this.x, point[1] * this.k + this.y];
      },
      applyX: function(x) {
        return x * this.k + this.x;
      },
      applyY: function(y) {
        return y * this.k + this.y;
      },
      invert: function(location) {
        return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
      },
      invertX: function(x) {
        return (x - this.x) / this.k;
      },
      invertY: function(y) {
        return (y - this.y) / this.k;
      },
      rescaleX: function(x) {
        return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
      },
      rescaleY: function(y) {
        return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
      },
      toString: function() {
        return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
      }
    };
    identity$2 = new Transform(1, 0, 0);
    css = {
      code: "#svgwrapper.svelte-14pe4bp{height:100%;width:100%}svg.svelte-14pe4bp{height:100%;width:100%}",
      map: null
    };
    BaseMap = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { projection: projection2 = null } = $$props;
      let { margin = { left: 10, right: 10, top: 10, bottom: 10 } } = $$props;
      let { background = "unset" } = $$props;
      const { zoomer, reset } = createZoomer();
      const zoomReset = reset;
      let width = 0;
      let height = 0;
      let _projection = createProjection(projection2 ?? geoMercator);
      let setSize = (height2, width2) => _projection.size([height2, width2]);
      setContext("basemap", { projection: _projection });
      if ($$props.projection === void 0 && $$bindings.projection && projection2 !== void 0)
        $$bindings.projection(projection2);
      if ($$props.margin === void 0 && $$bindings.margin && margin !== void 0)
        $$bindings.margin(margin);
      if ($$props.background === void 0 && $$bindings.background && background !== void 0)
        $$bindings.background(background);
      if ($$props.zoomReset === void 0 && $$bindings.zoomReset && zoomReset !== void 0)
        $$bindings.zoomReset(zoomReset);
      $$result.css.add(css);
      {
        _projection.setProjection(projection2);
      }
      {
        setSize(height - (margin.top + margin.bottom), width - (margin.left + margin.right));
      }
      return `<div id="${"svgwrapper"}" class="${"svelte-14pe4bp"}"><svg${add_attribute("style", `background-color:${background}`, 0)} class="${"svelte-14pe4bp"}"><g>${slots.default ? slots.default({}) : ``}</g></svg>
</div>`;
    });
    FeatureLayer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let geoPathFn;
      let _styleAccessor;
      let $projection, $$unsubscribe_projection;
      let { geojson } = $$props;
      let { styleAccessor = (feature, selected) => ({
        "vector-effect": "non-scaling-stroke",
        fill: "lightgrey",
        stroke: "black"
      }) } = $$props;
      let { selectMode = null } = $$props;
      let { selection: selection2 = [] } = $$props;
      let { idAccessor = (feature) => JSON.stringify(feature.properties) } = $$props;
      let { layerName = null } = $$props;
      let { addExtentsToProjection = true } = $$props;
      const dispatch2 = createEventDispatcher();
      let features22 = geojson.features;
      let { projection: projection2 } = getContext("basemap");
      $$unsubscribe_projection = subscribe(projection2, (value) => $projection = value);
      if (addExtentsToProjection) {
        layerName = projection2.addLayer(geojson, layerName);
      }
      onDestroy(() => {
        if (addExtentsToProjection) {
          projection2.clear(layerName);
        }
        dispatch2("destroy", layerName);
      });
      const isSelected = (feature, selection3) => !!selection3.find((s2) => s2 == idAccessor(feature));
      if ($$props.geojson === void 0 && $$bindings.geojson && geojson !== void 0)
        $$bindings.geojson(geojson);
      if ($$props.styleAccessor === void 0 && $$bindings.styleAccessor && styleAccessor !== void 0)
        $$bindings.styleAccessor(styleAccessor);
      if ($$props.selectMode === void 0 && $$bindings.selectMode && selectMode !== void 0)
        $$bindings.selectMode(selectMode);
      if ($$props.selection === void 0 && $$bindings.selection && selection2 !== void 0)
        $$bindings.selection(selection2);
      if ($$props.idAccessor === void 0 && $$bindings.idAccessor && idAccessor !== void 0)
        $$bindings.idAccessor(idAccessor);
      if ($$props.layerName === void 0 && $$bindings.layerName && layerName !== void 0)
        $$bindings.layerName(layerName);
      if ($$props.addExtentsToProjection === void 0 && $$bindings.addExtentsToProjection && addExtentsToProjection !== void 0)
        $$bindings.addExtentsToProjection(addExtentsToProjection);
      geoPathFn = geoPath($projection);
      _styleAccessor = (feature, selection3) => styleAccessor(feature, isSelected(feature, selection3));
      {
        if (selection2.length > selectMode) {
          while (selection2.length > selectMode) {
            selection2.shift();
          }
          selection2 = selection2;
        }
      }
      $$unsubscribe_projection();
      return `<g class="${"map-group"}">${each(features22, (feature) => `<path${spread([
        { class: "feature-path" },
        escape_object(_styleAccessor(feature, selection2)),
        {
          d: escape_attribute_value(geoPathFn(feature))
        }
      ])}></path>`)}</g>`;
    });
    type$1 = "FeatureCollection";
    name$1 = "b4_rto2017_simplified_3dp";
    crs$1 = {
      type: "name",
      properties: {
        name: "urn:ogc:def:crs:OGC:1.3:CRS84"
      }
    };
    features$1 = [
      {
        type: "Feature",
        properties: {
          OBJECTID: 6,
          RTO2017_V1: "06",
          RTO2017__1: "Whakatane-Kawerau",
          Shape_STAr: 448835782008e-2,
          Shape_STLe: 370915.833753
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.717,
                  -37.873
                ],
                [
                  177.017,
                  -37.938
                ],
                [
                  177.039,
                  -37.964
                ],
                [
                  177.157,
                  -37.987
                ],
                [
                  177.102,
                  -38.025
                ],
                [
                  177.133,
                  -38.076
                ],
                [
                  177.163,
                  -38.083
                ],
                [
                  177.173,
                  -38.115
                ],
                [
                  177.159,
                  -38.12
                ],
                [
                  177.145,
                  -38.227
                ],
                [
                  177.168,
                  -38.263
                ],
                [
                  177.207,
                  -38.264
                ],
                [
                  177.229,
                  -38.287
                ],
                [
                  177.215,
                  -38.342
                ],
                [
                  177.238,
                  -38.347
                ],
                [
                  177.24,
                  -38.364
                ],
                [
                  177.204,
                  -38.386
                ],
                [
                  177.182,
                  -38.488
                ],
                [
                  177.207,
                  -38.514
                ],
                [
                  177.167,
                  -38.578
                ],
                [
                  177.122,
                  -38.584
                ],
                [
                  177.1,
                  -38.627
                ],
                [
                  177.078,
                  -38.611
                ],
                [
                  177.046,
                  -38.621
                ],
                [
                  176.972,
                  -38.705
                ],
                [
                  176.929,
                  -38.698
                ],
                [
                  176.887,
                  -38.667
                ],
                [
                  176.823,
                  -38.691
                ],
                [
                  176.773,
                  -38.684
                ],
                [
                  176.743,
                  -38.728
                ],
                [
                  176.714,
                  -38.728
                ],
                [
                  176.692,
                  -38.806
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.624,
                  -38.754
                ],
                [
                  176.617,
                  -38.701
                ],
                [
                  176.646,
                  -38.606
                ],
                [
                  176.618,
                  -38.595
                ],
                [
                  176.606,
                  -38.609
                ],
                [
                  176.552,
                  -38.581
                ],
                [
                  176.533,
                  -38.535
                ],
                [
                  176.503,
                  -38.526
                ],
                [
                  176.502,
                  -38.511
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.505,
                  -38.402
                ],
                [
                  176.521,
                  -38.419
                ],
                [
                  176.578,
                  -38.427
                ],
                [
                  176.584,
                  -38.125
                ],
                [
                  176.604,
                  -38.121
                ],
                [
                  176.615,
                  -38.059
                ],
                [
                  176.603,
                  -38.01
                ],
                [
                  176.603,
                  -37.83
                ],
                [
                  176.717,
                  -37.873
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 8,
          RTO2017_V1: "08",
          RTO2017__1: "Taupo",
          Shape_STAr: 69640195394e-1,
          Shape_STLe: 491924.692481
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.674,
                  -38.304
                ],
                [
                  175.781,
                  -38.362
                ],
                [
                  175.77,
                  -38.396
                ],
                [
                  175.825,
                  -38.438
                ],
                [
                  175.958,
                  -38.421
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  176.119,
                  -38.413
                ],
                [
                  176.148,
                  -38.487
                ],
                [
                  176.179,
                  -38.519
                ],
                [
                  176.229,
                  -38.522
                ],
                [
                  176.303,
                  -38.485
                ],
                [
                  176.323,
                  -38.507
                ],
                [
                  176.3,
                  -38.551
                ],
                [
                  176.359,
                  -38.569
                ],
                [
                  176.387,
                  -38.506
                ],
                [
                  176.476,
                  -38.533
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.502,
                  -38.511
                ],
                [
                  176.503,
                  -38.526
                ],
                [
                  176.533,
                  -38.535
                ],
                [
                  176.552,
                  -38.581
                ],
                [
                  176.606,
                  -38.609
                ],
                [
                  176.618,
                  -38.595
                ],
                [
                  176.646,
                  -38.606
                ],
                [
                  176.617,
                  -38.701
                ],
                [
                  176.624,
                  -38.754
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.598,
                  -38.933
                ],
                [
                  176.61,
                  -38.998
                ],
                [
                  176.449,
                  -39.002
                ],
                [
                  176.42,
                  -39.062
                ],
                [
                  176.443,
                  -39.121
                ],
                [
                  176.37,
                  -39.133
                ],
                [
                  176.395,
                  -39.162
                ],
                [
                  176.34,
                  -39.173
                ],
                [
                  176.233,
                  -39.098
                ],
                [
                  176.176,
                  -39.144
                ],
                [
                  176.147,
                  -39.134
                ],
                [
                  176.081,
                  -39.157
                ],
                [
                  175.976,
                  -39.15
                ],
                [
                  175.96,
                  -39.184
                ],
                [
                  175.886,
                  -39.206
                ],
                [
                  175.893,
                  -39.224
                ],
                [
                  175.855,
                  -39.244
                ],
                [
                  175.868,
                  -39.263
                ],
                [
                  175.813,
                  -39.3
                ],
                [
                  175.752,
                  -39.288
                ],
                [
                  175.669,
                  -39.297
                ],
                [
                  175.558,
                  -39.276
                ],
                [
                  175.635,
                  -39.158
                ],
                [
                  175.648,
                  -39.1
                ],
                [
                  175.619,
                  -39.083
                ],
                [
                  175.614,
                  -39.051
                ],
                [
                  175.636,
                  -39.045
                ],
                [
                  175.682,
                  -38.98
                ],
                [
                  175.563,
                  -38.987
                ],
                [
                  175.554,
                  -38.956
                ],
                [
                  175.58,
                  -38.911
                ],
                [
                  175.545,
                  -38.864
                ],
                [
                  175.577,
                  -38.823
                ],
                [
                  175.518,
                  -38.751
                ],
                [
                  175.58,
                  -38.682
                ],
                [
                  175.576,
                  -38.65
                ],
                [
                  175.629,
                  -38.601
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.611,
                  -38.442
                ],
                [
                  175.699,
                  -38.38
                ],
                [
                  175.689,
                  -38.333
                ],
                [
                  175.66,
                  -38.319
                ],
                [
                  175.674,
                  -38.304
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 18,
          RTO2017_V1: "18",
          RTO2017__1: "Horowhenua",
          Shape_STAr: 10639915826099999e-7,
          Shape_STLe: 160856.340294
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.28,
                  -40.386
                ],
                [
                  175.278,
                  -40.396
                ],
                [
                  175.426,
                  -40.438
                ],
                [
                  175.453,
                  -40.429
                ],
                [
                  175.458,
                  -40.441
                ],
                [
                  175.469,
                  -40.426
                ],
                [
                  175.471,
                  -40.437
                ],
                [
                  175.497,
                  -40.434
                ],
                [
                  175.56,
                  -40.483
                ],
                [
                  175.556,
                  -40.501
                ],
                [
                  175.584,
                  -40.53
                ],
                [
                  175.609,
                  -40.503
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.371,
                  -40.727
                ],
                [
                  175.347,
                  -40.752
                ],
                [
                  175.328,
                  -40.744
                ],
                [
                  175.268,
                  -40.769
                ],
                [
                  175.213,
                  -40.763
                ],
                [
                  175.207,
                  -40.732
                ],
                [
                  175.136,
                  -40.7
                ],
                [
                  175.193,
                  -40.56
                ],
                [
                  175.227,
                  -40.391
                ],
                [
                  175.28,
                  -40.386
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 27,
          RTO2017_V1: "27",
          RTO2017__1: "Waimate",
          Shape_STAr: 358312501691e-2,
          Shape_STLe: 287832.479632
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  170.572,
                  -44.313
                ],
                [
                  170.591,
                  -44.344
                ],
                [
                  170.636,
                  -44.35
                ],
                [
                  170.659,
                  -44.384
                ],
                [
                  170.736,
                  -44.384
                ],
                [
                  170.771,
                  -44.442
                ],
                [
                  170.803,
                  -44.436
                ],
                [
                  170.781,
                  -44.415
                ],
                [
                  170.79,
                  -44.371
                ],
                [
                  170.861,
                  -44.331
                ],
                [
                  170.912,
                  -44.332
                ],
                [
                  170.93,
                  -44.362
                ],
                [
                  170.977,
                  -44.374
                ],
                [
                  171,
                  -44.395
                ],
                [
                  171.038,
                  -44.393
                ],
                [
                  171.143,
                  -44.471
                ],
                [
                  171.214,
                  -44.501
                ],
                [
                  171.162,
                  -44.609
                ],
                [
                  171.174,
                  -44.829
                ],
                [
                  171.144,
                  -44.94
                ],
                [
                  170.856,
                  -44.895
                ],
                [
                  170.582,
                  -44.814
                ],
                [
                  170.453,
                  -44.701
                ],
                [
                  170.378,
                  -44.662
                ],
                [
                  170.36,
                  -44.666
                ],
                [
                  170.274,
                  -44.612
                ],
                [
                  170.238,
                  -44.615
                ],
                [
                  170.191,
                  -44.588
                ],
                [
                  170.209,
                  -44.552
                ],
                [
                  170.192,
                  -44.542
                ],
                [
                  170.209,
                  -44.535
                ],
                [
                  170.197,
                  -44.497
                ],
                [
                  170.219,
                  -44.486
                ],
                [
                  170.22,
                  -44.466
                ],
                [
                  170.572,
                  -44.313
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 11,
          RTO2017_V1: "11",
          RTO2017__1: "Ruapehu",
          Shape_STAr: 673440834777e-2,
          Shape_STLe: 646031.180453
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.332,
                  -38.57
                ],
                [
                  175.336,
                  -38.582
                ],
                [
                  175.421,
                  -38.551
                ],
                [
                  175.446,
                  -38.565
                ],
                [
                  175.501,
                  -38.559
                ],
                [
                  175.542,
                  -38.598
                ],
                [
                  175.605,
                  -38.585
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.629,
                  -38.601
                ],
                [
                  175.576,
                  -38.65
                ],
                [
                  175.58,
                  -38.682
                ],
                [
                  175.518,
                  -38.752
                ],
                [
                  175.577,
                  -38.823
                ],
                [
                  175.545,
                  -38.864
                ],
                [
                  175.58,
                  -38.911
                ],
                [
                  175.554,
                  -38.956
                ],
                [
                  175.563,
                  -38.987
                ],
                [
                  175.682,
                  -38.98
                ],
                [
                  175.636,
                  -39.045
                ],
                [
                  175.614,
                  -39.051
                ],
                [
                  175.619,
                  -39.083
                ],
                [
                  175.648,
                  -39.1
                ],
                [
                  175.635,
                  -39.158
                ],
                [
                  175.558,
                  -39.276
                ],
                [
                  175.669,
                  -39.297
                ],
                [
                  175.752,
                  -39.288
                ],
                [
                  175.813,
                  -39.3
                ],
                [
                  175.829,
                  -39.289
                ],
                [
                  175.886,
                  -39.296
                ],
                [
                  175.958,
                  -39.258
                ],
                [
                  176.005,
                  -39.282
                ],
                [
                  175.976,
                  -39.287
                ],
                [
                  175.976,
                  -39.356
                ],
                [
                  176.029,
                  -39.356
                ],
                [
                  176.008,
                  -39.415
                ],
                [
                  175.893,
                  -39.412
                ],
                [
                  175.901,
                  -39.501
                ],
                [
                  175.866,
                  -39.521
                ],
                [
                  175.845,
                  -39.51
                ],
                [
                  175.835,
                  -39.528
                ],
                [
                  175.789,
                  -39.526
                ],
                [
                  175.713,
                  -39.574
                ],
                [
                  175.684,
                  -39.544
                ],
                [
                  175.658,
                  -39.549
                ],
                [
                  175.643,
                  -39.525
                ],
                [
                  175.596,
                  -39.522
                ],
                [
                  175.592,
                  -39.543
                ],
                [
                  175.422,
                  -39.545
                ],
                [
                  175.434,
                  -39.586
                ],
                [
                  175.403,
                  -39.594
                ],
                [
                  175.365,
                  -39.573
                ],
                [
                  175.346,
                  -39.607
                ],
                [
                  175.308,
                  -39.616
                ],
                [
                  175.313,
                  -39.626
                ],
                [
                  175.25,
                  -39.619
                ],
                [
                  175.219,
                  -39.582
                ],
                [
                  175.204,
                  -39.591
                ],
                [
                  175.203,
                  -39.554
                ],
                [
                  175.228,
                  -39.553
                ],
                [
                  175.223,
                  -39.539
                ],
                [
                  175.138,
                  -39.544
                ],
                [
                  175.165,
                  -39.532
                ],
                [
                  175.138,
                  -39.521
                ],
                [
                  175.118,
                  -39.482
                ],
                [
                  175.087,
                  -39.486
                ],
                [
                  175.055,
                  -39.523
                ],
                [
                  175.015,
                  -39.435
                ],
                [
                  175.045,
                  -39.405
                ],
                [
                  175.02,
                  -39.395
                ],
                [
                  174.992,
                  -39.346
                ],
                [
                  175.008,
                  -39.313
                ],
                [
                  174.964,
                  -39.305
                ],
                [
                  174.968,
                  -39.281
                ],
                [
                  174.953,
                  -39.295
                ],
                [
                  174.929,
                  -39.292
                ],
                [
                  174.925,
                  -39.276
                ],
                [
                  174.908,
                  -39.289
                ],
                [
                  174.884,
                  -39.264
                ],
                [
                  174.893,
                  -39.248
                ],
                [
                  174.86,
                  -39.232
                ],
                [
                  174.896,
                  -39.227
                ],
                [
                  174.915,
                  -39.234
                ],
                [
                  174.959,
                  -39.171
                ],
                [
                  174.95,
                  -39.163
                ],
                [
                  174.984,
                  -39.155
                ],
                [
                  174.983,
                  -39.112
                ],
                [
                  175,
                  -39.129
                ],
                [
                  174.998,
                  -39.111
                ],
                [
                  175.069,
                  -39.106
                ],
                [
                  175.047,
                  -39.07
                ],
                [
                  174.963,
                  -39.066
                ],
                [
                  174.977,
                  -39.042
                ],
                [
                  174.96,
                  -38.995
                ],
                [
                  174.915,
                  -39.011
                ],
                [
                  174.911,
                  -38.989
                ],
                [
                  174.869,
                  -38.989
                ],
                [
                  174.885,
                  -38.969
                ],
                [
                  174.871,
                  -38.928
                ],
                [
                  174.884,
                  -38.913
                ],
                [
                  174.857,
                  -38.889
                ],
                [
                  174.828,
                  -38.91
                ],
                [
                  174.787,
                  -38.821
                ],
                [
                  174.808,
                  -38.82
                ],
                [
                  174.82,
                  -38.787
                ],
                [
                  174.938,
                  -38.75
                ],
                [
                  174.935,
                  -38.731
                ],
                [
                  174.964,
                  -38.697
                ],
                [
                  174.957,
                  -38.665
                ],
                [
                  175,
                  -38.666
                ],
                [
                  175.116,
                  -38.622
                ],
                [
                  175.213,
                  -38.639
                ],
                [
                  175.285,
                  -38.588
                ],
                [
                  175.3,
                  -38.601
                ],
                [
                  175.325,
                  -38.551
                ],
                [
                  175.332,
                  -38.57
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 13,
          RTO2017_V1: "13",
          RTO2017__1: "Whanganui",
          Shape_STAr: 237326160132e-2,
          Shape_STLe: 426925.750034
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  174.86,
                  -39.232
                ],
                [
                  174.893,
                  -39.248
                ],
                [
                  174.884,
                  -39.264
                ],
                [
                  174.908,
                  -39.289
                ],
                [
                  174.925,
                  -39.276
                ],
                [
                  174.929,
                  -39.292
                ],
                [
                  174.953,
                  -39.295
                ],
                [
                  174.968,
                  -39.281
                ],
                [
                  174.964,
                  -39.305
                ],
                [
                  175.008,
                  -39.313
                ],
                [
                  174.992,
                  -39.346
                ],
                [
                  175.02,
                  -39.395
                ],
                [
                  175.044,
                  -39.404
                ],
                [
                  175.015,
                  -39.435
                ],
                [
                  175.055,
                  -39.523
                ],
                [
                  175.087,
                  -39.486
                ],
                [
                  175.118,
                  -39.482
                ],
                [
                  175.138,
                  -39.521
                ],
                [
                  175.165,
                  -39.532
                ],
                [
                  175.138,
                  -39.544
                ],
                [
                  175.223,
                  -39.539
                ],
                [
                  175.228,
                  -39.553
                ],
                [
                  175.203,
                  -39.554
                ],
                [
                  175.204,
                  -39.591
                ],
                [
                  175.219,
                  -39.582
                ],
                [
                  175.25,
                  -39.619
                ],
                [
                  175.313,
                  -39.626
                ],
                [
                  175.308,
                  -39.616
                ],
                [
                  175.346,
                  -39.607
                ],
                [
                  175.365,
                  -39.573
                ],
                [
                  175.403,
                  -39.594
                ],
                [
                  175.434,
                  -39.586
                ],
                [
                  175.422,
                  -39.545
                ],
                [
                  175.488,
                  -39.545
                ],
                [
                  175.488,
                  -39.579
                ],
                [
                  175.506,
                  -39.581
                ],
                [
                  175.462,
                  -39.642
                ],
                [
                  175.515,
                  -39.681
                ],
                [
                  175.453,
                  -39.822
                ],
                [
                  175.386,
                  -39.832
                ],
                [
                  175.349,
                  -39.873
                ],
                [
                  175.29,
                  -39.86
                ],
                [
                  175.274,
                  -39.878
                ],
                [
                  175.295,
                  -39.88
                ],
                [
                  175.279,
                  -39.909
                ],
                [
                  175.293,
                  -39.924
                ],
                [
                  175.278,
                  -39.918
                ],
                [
                  175.269,
                  -39.932
                ],
                [
                  175.286,
                  -39.936
                ],
                [
                  175.266,
                  -39.974
                ],
                [
                  175.237,
                  -39.967
                ],
                [
                  175.222,
                  -39.993
                ],
                [
                  175.144,
                  -40.007
                ],
                [
                  175.12,
                  -40.038
                ],
                [
                  175.112,
                  -40.028
                ],
                [
                  175.1,
                  -40.041
                ],
                [
                  174.928,
                  -39.899
                ],
                [
                  174.766,
                  -39.853
                ],
                [
                  174.803,
                  -39.803
                ],
                [
                  174.835,
                  -39.8
                ],
                [
                  174.894,
                  -39.747
                ],
                [
                  174.918,
                  -39.75
                ],
                [
                  174.93,
                  -39.683
                ],
                [
                  174.988,
                  -39.665
                ],
                [
                  174.968,
                  -39.605
                ],
                [
                  174.992,
                  -39.54
                ],
                [
                  174.97,
                  -39.525
                ],
                [
                  174.967,
                  -39.485
                ],
                [
                  174.928,
                  -39.476
                ],
                [
                  174.885,
                  -39.435
                ],
                [
                  174.866,
                  -39.389
                ],
                [
                  174.879,
                  -39.39
                ],
                [
                  174.892,
                  -39.358
                ],
                [
                  174.823,
                  -39.334
                ],
                [
                  174.813,
                  -39.314
                ],
                [
                  174.86,
                  -39.232
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 19,
          RTO2017_V1: "19",
          RTO2017__1: "Wellington",
          Shape_STAr: 21202612918100002e-7,
          Shape_STLe: 409548.618747
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.136,
                  -40.7
                ],
                [
                  175.207,
                  -40.732
                ],
                [
                  175.213,
                  -40.763
                ],
                [
                  175.268,
                  -40.769
                ],
                [
                  175.328,
                  -40.744
                ],
                [
                  175.346,
                  -40.752
                ],
                [
                  175.371,
                  -40.727
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.396,
                  -40.758
                ],
                [
                  175.377,
                  -40.809
                ],
                [
                  175.357,
                  -40.815
                ],
                [
                  175.351,
                  -40.896
                ],
                [
                  175.27,
                  -40.938
                ],
                [
                  175.282,
                  -40.952
                ],
                [
                  175.264,
                  -40.977
                ],
                [
                  175.306,
                  -40.989
                ],
                [
                  175.243,
                  -41.064
                ],
                [
                  175.233,
                  -41.118
                ],
                [
                  175.152,
                  -41.203
                ],
                [
                  175.084,
                  -41.222
                ],
                [
                  175.083,
                  -41.284
                ],
                [
                  175.022,
                  -41.348
                ],
                [
                  174.993,
                  -41.345
                ],
                [
                  174.959,
                  -41.383
                ],
                [
                  174.983,
                  -41.402
                ],
                [
                  174.916,
                  -41.437
                ],
                [
                  174.869,
                  -41.41
                ],
                [
                  174.875,
                  -41.384
                ],
                [
                  174.848,
                  -41.359
                ],
                [
                  174.906,
                  -41.282
                ],
                [
                  174.901,
                  -41.237
                ],
                [
                  174.858,
                  -41.225
                ],
                [
                  174.786,
                  -41.265
                ],
                [
                  174.779,
                  -41.288
                ],
                [
                  174.804,
                  -41.286
                ],
                [
                  174.803,
                  -41.316
                ],
                [
                  174.826,
                  -41.284
                ],
                [
                  174.834,
                  -41.289
                ],
                [
                  174.839,
                  -41.328
                ],
                [
                  174.821,
                  -41.345
                ],
                [
                  174.799,
                  -41.329
                ],
                [
                  174.792,
                  -41.347
                ],
                [
                  174.743,
                  -41.347
                ],
                [
                  174.717,
                  -41.362
                ],
                [
                  174.66,
                  -41.341
                ],
                [
                  174.615,
                  -41.274
                ],
                [
                  174.645,
                  -41.238
                ],
                [
                  174.664,
                  -41.247
                ],
                [
                  174.714,
                  -41.219
                ],
                [
                  174.805,
                  -41.111
                ],
                [
                  174.866,
                  -41.091
                ],
                [
                  174.839,
                  -41.064
                ],
                [
                  174.846,
                  -41.05
                ],
                [
                  174.939,
                  -41
                ],
                [
                  174.969,
                  -40.956
                ],
                [
                  174.984,
                  -40.883
                ],
                [
                  175.063,
                  -40.824
                ],
                [
                  175.136,
                  -40.7
                ]
              ]
            ],
            [
              [
                [
                  174.943,
                  -40.822
                ],
                [
                  174.954,
                  -40.829
                ],
                [
                  174.935,
                  -40.853
                ],
                [
                  174.876,
                  -40.89
                ],
                [
                  174.869,
                  -40.876
                ],
                [
                  174.92,
                  -40.822
                ],
                [
                  174.943,
                  -40.822
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 35,
          RTO2017_V1: "35",
          RTO2017__1: "Fiordland",
          Shape_STAr: 15163619970599998e-6,
          Shape_STLe: 870297.520698
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  168.257,
                  -44.258
                ],
                [
                  168.345,
                  -44.282
                ],
                [
                  168.349,
                  -44.33
                ],
                [
                  168.381,
                  -44.338
                ],
                [
                  168.368,
                  -44.355
                ],
                [
                  168.412,
                  -44.364
                ],
                [
                  168.352,
                  -44.404
                ],
                [
                  168.366,
                  -44.424
                ],
                [
                  168.335,
                  -44.497
                ],
                [
                  168.29,
                  -44.496
                ],
                [
                  168.235,
                  -44.543
                ],
                [
                  168.237,
                  -44.576
                ],
                [
                  168.185,
                  -44.646
                ],
                [
                  168.192,
                  -44.681
                ],
                [
                  168.169,
                  -44.721
                ],
                [
                  168.182,
                  -44.745
                ],
                [
                  168.205,
                  -44.746
                ],
                [
                  168.168,
                  -44.828
                ],
                [
                  168.127,
                  -44.829
                ],
                [
                  168.116,
                  -44.881
                ],
                [
                  168.132,
                  -44.939
                ],
                [
                  168.129,
                  -45.019
                ],
                [
                  168.081,
                  -45.046
                ],
                [
                  168.077,
                  -45.1
                ],
                [
                  168.11,
                  -45.169
                ],
                [
                  168.102,
                  -45.231
                ],
                [
                  168.143,
                  -45.247
                ],
                [
                  168.135,
                  -45.288
                ],
                [
                  168.112,
                  -45.3
                ],
                [
                  168.092,
                  -45.29
                ],
                [
                  167.98,
                  -45.37
                ],
                [
                  167.949,
                  -45.366
                ],
                [
                  167.909,
                  -45.383
                ],
                [
                  167.88,
                  -45.432
                ],
                [
                  167.792,
                  -45.444
                ],
                [
                  167.786,
                  -45.516
                ],
                [
                  167.755,
                  -45.528
                ],
                [
                  167.72,
                  -45.599
                ],
                [
                  167.686,
                  -45.609
                ],
                [
                  167.685,
                  -45.635
                ],
                [
                  167.611,
                  -45.691
                ],
                [
                  167.621,
                  -45.723
                ],
                [
                  167.586,
                  -45.74
                ],
                [
                  167.657,
                  -45.818
                ],
                [
                  167.629,
                  -45.832
                ],
                [
                  167.644,
                  -45.842
                ],
                [
                  167.505,
                  -45.841
                ],
                [
                  167.425,
                  -45.896
                ],
                [
                  167.382,
                  -45.895
                ],
                [
                  167.354,
                  -45.987
                ],
                [
                  167.392,
                  -45.994
                ],
                [
                  167.394,
                  -46.014
                ],
                [
                  167.371,
                  -46.001
                ],
                [
                  167.367,
                  -46.018
                ],
                [
                  167.35,
                  -46.008
                ],
                [
                  167.339,
                  -46.055
                ],
                [
                  167.435,
                  -46.12
                ],
                [
                  167.446,
                  -46.15
                ],
                [
                  167.403,
                  -46.152
                ],
                [
                  167.392,
                  -46.178
                ],
                [
                  167.353,
                  -46.195
                ],
                [
                  167.364,
                  -46.229
                ],
                [
                  167.342,
                  -46.251
                ],
                [
                  167.27,
                  -46.245
                ],
                [
                  167.217,
                  -46.263
                ],
                [
                  167.106,
                  -46.258
                ],
                [
                  167.019,
                  -46.227
                ],
                [
                  166.957,
                  -46.229
                ],
                [
                  166.873,
                  -46.21
                ],
                [
                  166.809,
                  -46.213
                ],
                [
                  166.78,
                  -46.231
                ],
                [
                  166.765,
                  -46.214
                ],
                [
                  166.661,
                  -46.204
                ],
                [
                  166.64,
                  -46.182
                ],
                [
                  166.639,
                  -46.179
                ],
                [
                  166.649,
                  -46.177
                ],
                [
                  166.65,
                  -46.174
                ],
                [
                  166.609,
                  -46.158
                ],
                [
                  166.623,
                  -46.145
                ],
                [
                  166.603,
                  -46.112
                ],
                [
                  166.45,
                  -45.998
                ],
                [
                  166.451,
                  -45.941
                ],
                [
                  166.426,
                  -45.905
                ],
                [
                  166.433,
                  -45.842
                ],
                [
                  166.454,
                  -45.825
                ],
                [
                  166.452,
                  -45.716
                ],
                [
                  166.538,
                  -45.627
                ],
                [
                  166.553,
                  -45.649
                ],
                [
                  166.568,
                  -45.622
                ],
                [
                  166.6,
                  -45.611
                ],
                [
                  166.616,
                  -45.574
                ],
                [
                  166.669,
                  -45.558
                ],
                [
                  166.693,
                  -45.5
                ],
                [
                  166.728,
                  -45.503
                ],
                [
                  166.711,
                  -45.471
                ],
                [
                  166.736,
                  -45.42
                ],
                [
                  166.873,
                  -45.224
                ],
                [
                  167.105,
                  -45.033
                ],
                [
                  167.092,
                  -45.026
                ],
                [
                  167.125,
                  -45.012
                ],
                [
                  167.146,
                  -44.975
                ],
                [
                  167.176,
                  -44.958
                ],
                [
                  167.197,
                  -44.962
                ],
                [
                  167.212,
                  -44.927
                ],
                [
                  167.242,
                  -44.928
                ],
                [
                  167.221,
                  -44.919
                ],
                [
                  167.271,
                  -44.87
                ],
                [
                  167.339,
                  -44.845
                ],
                [
                  167.38,
                  -44.81
                ],
                [
                  167.397,
                  -44.814
                ],
                [
                  167.398,
                  -44.8
                ],
                [
                  167.498,
                  -44.752
                ],
                [
                  167.587,
                  -44.669
                ],
                [
                  167.738,
                  -44.603
                ],
                [
                  167.75,
                  -44.581
                ],
                [
                  167.783,
                  -44.572
                ],
                [
                  167.817,
                  -44.599
                ],
                [
                  167.831,
                  -44.528
                ],
                [
                  167.816,
                  -44.496
                ],
                [
                  167.844,
                  -44.485
                ],
                [
                  167.873,
                  -44.434
                ],
                [
                  167.942,
                  -44.384
                ],
                [
                  167.987,
                  -44.378
                ],
                [
                  167.994,
                  -44.328
                ],
                [
                  168.085,
                  -44.332
                ],
                [
                  168.103,
                  -44.319
                ],
                [
                  168.12,
                  -44.291
                ],
                [
                  168.052,
                  -44.259
                ],
                [
                  168.158,
                  -44.282
                ],
                [
                  168.257,
                  -44.258
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 29,
          RTO2017_V1: "29",
          RTO2017__1: "Central Otago",
          Shape_STAr: 996847585328e-2,
          Shape_STLe: 633375.303358
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  169.542,
                  -44.449
                ],
                [
                  169.642,
                  -44.466
                ],
                [
                  169.634,
                  -44.502
                ],
                [
                  169.663,
                  -44.537
                ],
                [
                  169.641,
                  -44.596
                ],
                [
                  169.709,
                  -44.601
                ],
                [
                  169.731,
                  -44.565
                ],
                [
                  169.755,
                  -44.639
                ],
                [
                  169.806,
                  -44.661
                ],
                [
                  169.836,
                  -44.669
                ],
                [
                  169.891,
                  -44.644
                ],
                [
                  169.944,
                  -44.654
                ],
                [
                  169.998,
                  -44.825
                ],
                [
                  170.031,
                  -44.87
                ],
                [
                  170.064,
                  -44.884
                ],
                [
                  170.082,
                  -44.912
                ],
                [
                  170.069,
                  -44.923
                ],
                [
                  170.094,
                  -44.94
                ],
                [
                  170.164,
                  -44.946
                ],
                [
                  170.252,
                  -44.919
                ],
                [
                  170.302,
                  -44.92
                ],
                [
                  170.319,
                  -44.903
                ],
                [
                  170.35,
                  -44.908
                ],
                [
                  170.349,
                  -44.943
                ],
                [
                  170.373,
                  -44.952
                ],
                [
                  170.347,
                  -44.99
                ],
                [
                  170.349,
                  -45.022
                ],
                [
                  170.398,
                  -45.081
                ],
                [
                  170.404,
                  -45.123
                ],
                [
                  170.439,
                  -45.134
                ],
                [
                  170.412,
                  -45.176
                ],
                [
                  170.364,
                  -45.187
                ],
                [
                  170.383,
                  -45.212
                ],
                [
                  170.35,
                  -45.241
                ],
                [
                  170.217,
                  -45.235
                ],
                [
                  170.216,
                  -45.257
                ],
                [
                  170.186,
                  -45.265
                ],
                [
                  170.156,
                  -45.328
                ],
                [
                  170.12,
                  -45.353
                ],
                [
                  170.128,
                  -45.38
                ],
                [
                  170.03,
                  -45.476
                ],
                [
                  169.906,
                  -45.497
                ],
                [
                  169.906,
                  -45.542
                ],
                [
                  169.814,
                  -45.561
                ],
                [
                  169.796,
                  -45.642
                ],
                [
                  169.739,
                  -45.72
                ],
                [
                  169.673,
                  -45.693
                ],
                [
                  169.643,
                  -45.769
                ],
                [
                  169.595,
                  -45.775
                ],
                [
                  169.576,
                  -45.799
                ],
                [
                  169.524,
                  -45.813
                ],
                [
                  169.477,
                  -45.787
                ],
                [
                  169.447,
                  -45.79
                ],
                [
                  169.418,
                  -45.737
                ],
                [
                  169.395,
                  -45.743
                ],
                [
                  169.403,
                  -45.687
                ],
                [
                  169.29,
                  -45.688
                ],
                [
                  169.279,
                  -45.703
                ],
                [
                  169.176,
                  -45.653
                ],
                [
                  169.174,
                  -45.591
                ],
                [
                  169.198,
                  -45.569
                ],
                [
                  169.167,
                  -45.55
                ],
                [
                  169.184,
                  -45.512
                ],
                [
                  169.154,
                  -45.469
                ],
                [
                  169.172,
                  -45.44
                ],
                [
                  169.2,
                  -45.434
                ],
                [
                  169.209,
                  -45.402
                ],
                [
                  169.171,
                  -45.38
                ],
                [
                  169.148,
                  -45.339
                ],
                [
                  169.099,
                  -45.32
                ],
                [
                  169.073,
                  -45.271
                ],
                [
                  168.96,
                  -45.359
                ],
                [
                  168.887,
                  -45.463
                ],
                [
                  168.859,
                  -45.452
                ],
                [
                  168.854,
                  -45.432
                ],
                [
                  168.825,
                  -45.446
                ],
                [
                  168.779,
                  -45.437
                ],
                [
                  168.769,
                  -45.403
                ],
                [
                  168.773,
                  -45.363
                ],
                [
                  168.809,
                  -45.327
                ],
                [
                  168.851,
                  -45.238
                ],
                [
                  168.824,
                  -45.181
                ],
                [
                  168.841,
                  -45.141
                ],
                [
                  168.825,
                  -45.06
                ],
                [
                  168.851,
                  -45.05
                ],
                [
                  168.887,
                  -45.072
                ],
                [
                  168.993,
                  -45.05
                ],
                [
                  169.045,
                  -45.061
                ],
                [
                  169.039,
                  -45.035
                ],
                [
                  169.071,
                  -45.002
                ],
                [
                  169.044,
                  -44.966
                ],
                [
                  169.059,
                  -44.898
                ],
                [
                  169.093,
                  -44.897
                ],
                [
                  169.119,
                  -44.868
                ],
                [
                  169.19,
                  -44.873
                ],
                [
                  169.259,
                  -44.829
                ],
                [
                  169.307,
                  -44.763
                ],
                [
                  169.38,
                  -44.758
                ],
                [
                  169.351,
                  -44.677
                ],
                [
                  169.381,
                  -44.633
                ],
                [
                  169.358,
                  -44.561
                ],
                [
                  169.491,
                  -44.549
                ],
                [
                  169.542,
                  -44.449
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 22,
          RTO2017_V1: "22",
          RTO2017__1: "West Coast",
          Shape_STAr: 233541865827e-1,
          Shape_STLe: 160177701313e-5
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  172.218,
                  -40.775
                ],
                [
                  172.249,
                  -40.807
                ],
                [
                  172.234,
                  -40.869
                ],
                [
                  172.262,
                  -40.859
                ],
                [
                  172.288,
                  -40.875
                ],
                [
                  172.282,
                  -40.899
                ],
                [
                  172.298,
                  -40.922
                ],
                [
                  172.376,
                  -40.934
                ],
                [
                  172.386,
                  -40.949
                ],
                [
                  172.311,
                  -41.011
                ],
                [
                  172.334,
                  -41.035
                ],
                [
                  172.325,
                  -41.059
                ],
                [
                  172.35,
                  -41.063
                ],
                [
                  172.383,
                  -41.023
                ],
                [
                  172.419,
                  -41.034
                ],
                [
                  172.44,
                  -41.02
                ],
                [
                  172.492,
                  -41.023
                ],
                [
                  172.492,
                  -41.065
                ],
                [
                  172.513,
                  -41.067
                ],
                [
                  172.52,
                  -41.096
                ],
                [
                  172.553,
                  -41.103
                ],
                [
                  172.618,
                  -41.16
                ],
                [
                  172.629,
                  -41.195
                ],
                [
                  172.673,
                  -41.188
                ],
                [
                  172.692,
                  -41.2
                ],
                [
                  172.658,
                  -41.239
                ],
                [
                  172.575,
                  -41.258
                ],
                [
                  172.6,
                  -41.301
                ],
                [
                  172.584,
                  -41.376
                ],
                [
                  172.512,
                  -41.413
                ],
                [
                  172.461,
                  -41.394
                ],
                [
                  172.416,
                  -41.412
                ],
                [
                  172.431,
                  -41.429
                ],
                [
                  172.419,
                  -41.471
                ],
                [
                  172.343,
                  -41.512
                ],
                [
                  172.328,
                  -41.603
                ],
                [
                  172.291,
                  -41.635
                ],
                [
                  172.264,
                  -41.627
                ],
                [
                  172.237,
                  -41.64
                ],
                [
                  172.251,
                  -41.703
                ],
                [
                  172.213,
                  -41.689
                ],
                [
                  172.127,
                  -41.716
                ],
                [
                  172.097,
                  -41.774
                ],
                [
                  172.116,
                  -41.789
                ],
                [
                  172.116,
                  -41.868
                ],
                [
                  172.065,
                  -41.894
                ],
                [
                  172.077,
                  -41.92
                ],
                [
                  172.052,
                  -41.945
                ],
                [
                  172.071,
                  -41.999
                ],
                [
                  172.12,
                  -42.015
                ],
                [
                  172.105,
                  -42.049
                ],
                [
                  172.135,
                  -42.104
                ],
                [
                  172.207,
                  -42.098
                ],
                [
                  172.206,
                  -42.115
                ],
                [
                  172.221,
                  -42.132
                ],
                [
                  172.248,
                  -42.132
                ],
                [
                  172.252,
                  -42.15
                ],
                [
                  172.333,
                  -42.149
                ],
                [
                  172.348,
                  -42.277
                ],
                [
                  172.431,
                  -42.306
                ],
                [
                  172.454,
                  -42.275
                ],
                [
                  172.479,
                  -42.277
                ],
                [
                  172.444,
                  -42.367
                ],
                [
                  172.417,
                  -42.384
                ],
                [
                  172.347,
                  -42.392
                ],
                [
                  172.279,
                  -42.45
                ],
                [
                  172.236,
                  -42.457
                ],
                [
                  172.187,
                  -42.504
                ],
                [
                  172.178,
                  -42.536
                ],
                [
                  172.108,
                  -42.58
                ],
                [
                  172.093,
                  -42.621
                ],
                [
                  171.975,
                  -42.639
                ],
                [
                  171.972,
                  -42.653
                ],
                [
                  171.926,
                  -42.666
                ],
                [
                  171.885,
                  -42.719
                ],
                [
                  171.884,
                  -42.75
                ],
                [
                  171.813,
                  -42.79
                ],
                [
                  171.764,
                  -42.792
                ],
                [
                  171.763,
                  -42.837
                ],
                [
                  171.733,
                  -42.853
                ],
                [
                  171.746,
                  -42.874
                ],
                [
                  171.71,
                  -42.904
                ],
                [
                  171.687,
                  -42.906
                ],
                [
                  171.665,
                  -42.886
                ],
                [
                  171.634,
                  -42.903
                ],
                [
                  171.587,
                  -42.896
                ],
                [
                  171.517,
                  -42.914
                ],
                [
                  171.491,
                  -42.896
                ],
                [
                  171.469,
                  -42.914
                ],
                [
                  171.442,
                  -42.914
                ],
                [
                  171.438,
                  -42.936
                ],
                [
                  171.396,
                  -42.959
                ],
                [
                  171.393,
                  -42.943
                ],
                [
                  171.362,
                  -42.937
                ],
                [
                  171.314,
                  -42.948
                ],
                [
                  171.308,
                  -42.966
                ],
                [
                  171.238,
                  -43.003
                ],
                [
                  171.22,
                  -43.065
                ],
                [
                  171.129,
                  -43.081
                ],
                [
                  171.107,
                  -43.111
                ],
                [
                  171.085,
                  -43.101
                ],
                [
                  171.037,
                  -43.146
                ],
                [
                  171.047,
                  -43.164
                ],
                [
                  171.02,
                  -43.175
                ],
                [
                  170.992,
                  -43.218
                ],
                [
                  170.948,
                  -43.227
                ],
                [
                  170.948,
                  -43.206
                ],
                [
                  170.929,
                  -43.207
                ],
                [
                  170.873,
                  -43.246
                ],
                [
                  170.86,
                  -43.281
                ],
                [
                  170.76,
                  -43.318
                ],
                [
                  170.705,
                  -43.319
                ],
                [
                  170.716,
                  -43.343
                ],
                [
                  170.677,
                  -43.348
                ],
                [
                  170.647,
                  -43.369
                ],
                [
                  170.657,
                  -43.387
                ],
                [
                  170.615,
                  -43.432
                ],
                [
                  170.53,
                  -43.41
                ],
                [
                  170.511,
                  -43.428
                ],
                [
                  170.475,
                  -43.433
                ],
                [
                  170.459,
                  -43.461
                ],
                [
                  170.395,
                  -43.498
                ],
                [
                  170.356,
                  -43.506
                ],
                [
                  170.329,
                  -43.482
                ],
                [
                  170.229,
                  -43.519
                ],
                [
                  170.14,
                  -43.589
                ],
                [
                  170.093,
                  -43.6
                ],
                [
                  170.095,
                  -43.656
                ],
                [
                  170.028,
                  -43.691
                ],
                [
                  170.031,
                  -43.723
                ],
                [
                  169.979,
                  -43.747
                ],
                [
                  169.964,
                  -43.792
                ],
                [
                  169.9,
                  -43.813
                ],
                [
                  169.894,
                  -43.834
                ],
                [
                  169.858,
                  -43.837
                ],
                [
                  169.838,
                  -43.867
                ],
                [
                  169.771,
                  -43.899
                ],
                [
                  169.758,
                  -43.934
                ],
                [
                  169.699,
                  -43.964
                ],
                [
                  169.593,
                  -43.958
                ],
                [
                  169.579,
                  -44.034
                ],
                [
                  169.541,
                  -44.033
                ],
                [
                  169.507,
                  -44.059
                ],
                [
                  169.463,
                  -44.059
                ],
                [
                  169.387,
                  -44.119
                ],
                [
                  169.338,
                  -44.102
                ],
                [
                  169.309,
                  -44.061
                ],
                [
                  169.291,
                  -44.063
                ],
                [
                  169.257,
                  -44.108
                ],
                [
                  169.16,
                  -44.105
                ],
                [
                  169.146,
                  -44.08
                ],
                [
                  169.074,
                  -44.11
                ],
                [
                  169.013,
                  -44.115
                ],
                [
                  169.016,
                  -44.131
                ],
                [
                  168.975,
                  -44.144
                ],
                [
                  168.987,
                  -44.169
                ],
                [
                  168.965,
                  -44.174
                ],
                [
                  168.959,
                  -44.206
                ],
                [
                  168.911,
                  -44.21
                ],
                [
                  168.849,
                  -44.246
                ],
                [
                  168.832,
                  -44.351
                ],
                [
                  168.753,
                  -44.392
                ],
                [
                  168.743,
                  -44.421
                ],
                [
                  168.687,
                  -44.392
                ],
                [
                  168.586,
                  -44.454
                ],
                [
                  168.524,
                  -44.46
                ],
                [
                  168.461,
                  -44.495
                ],
                [
                  168.335,
                  -44.497
                ],
                [
                  168.366,
                  -44.424
                ],
                [
                  168.352,
                  -44.404
                ],
                [
                  168.412,
                  -44.364
                ],
                [
                  168.368,
                  -44.355
                ],
                [
                  168.381,
                  -44.338
                ],
                [
                  168.348,
                  -44.329
                ],
                [
                  168.345,
                  -44.282
                ],
                [
                  168.257,
                  -44.258
                ],
                [
                  168.158,
                  -44.282
                ],
                [
                  168.052,
                  -44.259
                ],
                [
                  168.104,
                  -44.243
                ],
                [
                  168.251,
                  -44.154
                ],
                [
                  168.286,
                  -44.103
                ],
                [
                  168.326,
                  -44.084
                ],
                [
                  168.326,
                  -44.051
                ],
                [
                  168.361,
                  -44.031
                ],
                [
                  168.367,
                  -44.009
                ],
                [
                  168.513,
                  -44.002
                ],
                [
                  168.617,
                  -43.958
                ],
                [
                  168.615,
                  -43.977
                ],
                [
                  168.65,
                  -43.995
                ],
                [
                  168.805,
                  -43.972
                ],
                [
                  168.887,
                  -43.906
                ],
                [
                  169.017,
                  -43.853
                ],
                [
                  169.209,
                  -43.719
                ],
                [
                  169.346,
                  -43.67
                ],
                [
                  169.382,
                  -43.638
                ],
                [
                  169.501,
                  -43.627
                ],
                [
                  169.555,
                  -43.586
                ],
                [
                  169.571,
                  -43.602
                ],
                [
                  169.609,
                  -43.592
                ],
                [
                  169.649,
                  -43.554
                ],
                [
                  169.69,
                  -43.545
                ],
                [
                  169.794,
                  -43.421
                ],
                [
                  169.842,
                  -43.395
                ],
                [
                  169.917,
                  -43.39
                ],
                [
                  169.983,
                  -43.357
                ],
                [
                  170.055,
                  -43.284
                ],
                [
                  170.166,
                  -43.22
                ],
                [
                  170.26,
                  -43.108
                ],
                [
                  170.342,
                  -43.097
                ],
                [
                  170.42,
                  -43.036
                ],
                [
                  170.571,
                  -43.004
                ],
                [
                  170.721,
                  -42.93
                ],
                [
                  170.86,
                  -42.831
                ],
                [
                  170.948,
                  -42.724
                ],
                [
                  171.051,
                  -42.65
                ],
                [
                  171.155,
                  -42.527
                ],
                [
                  171.219,
                  -42.38
                ],
                [
                  171.24,
                  -42.373
                ],
                [
                  171.304,
                  -42.271
                ],
                [
                  171.326,
                  -42.114
                ],
                [
                  171.361,
                  -42.072
                ],
                [
                  171.366,
                  -42.035
                ],
                [
                  171.392,
                  -42.021
                ],
                [
                  171.418,
                  -41.918
                ],
                [
                  171.456,
                  -41.884
                ],
                [
                  171.459,
                  -41.753
                ],
                [
                  171.55,
                  -41.75
                ],
                [
                  171.589,
                  -41.727
                ],
                [
                  171.676,
                  -41.739
                ],
                [
                  171.719,
                  -41.719
                ],
                [
                  171.858,
                  -41.624
                ],
                [
                  171.986,
                  -41.446
                ],
                [
                  172.063,
                  -41.385
                ],
                [
                  172.106,
                  -41.169
                ],
                [
                  172.112,
                  -41.027
                ],
                [
                  172.093,
                  -40.915
                ],
                [
                  172.173,
                  -40.81
                ],
                [
                  172.218,
                  -40.775
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 16,
          RTO2017_V1: "16",
          RTO2017__1: "Tararua",
          Shape_STAr: 436458493011e-2,
          Shape_STLe: 421712.15662
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.13,
                  -40.024
                ],
                [
                  176.154,
                  -40.012
                ],
                [
                  176.214,
                  -40.018
                ],
                [
                  176.264,
                  -40.063
                ],
                [
                  176.321,
                  -40.086
                ],
                [
                  176.31,
                  -40.121
                ],
                [
                  176.379,
                  -40.158
                ],
                [
                  176.359,
                  -40.198
                ],
                [
                  176.378,
                  -40.272
                ],
                [
                  176.399,
                  -40.285
                ],
                [
                  176.389,
                  -40.323
                ],
                [
                  176.406,
                  -40.333
                ],
                [
                  176.371,
                  -40.359
                ],
                [
                  176.46,
                  -40.412
                ],
                [
                  176.492,
                  -40.412
                ],
                [
                  176.493,
                  -40.4
                ],
                [
                  176.55,
                  -40.421
                ],
                [
                  176.559,
                  -40.407
                ],
                [
                  176.587,
                  -40.431
                ],
                [
                  176.623,
                  -40.428
                ],
                [
                  176.622,
                  -40.491
                ],
                [
                  176.56,
                  -40.496
                ],
                [
                  176.493,
                  -40.531
                ],
                [
                  176.376,
                  -40.668
                ],
                [
                  176.31,
                  -40.716
                ],
                [
                  176.267,
                  -40.782
                ],
                [
                  176.272,
                  -40.745
                ],
                [
                  176.247,
                  -40.741
                ],
                [
                  176.234,
                  -40.708
                ],
                [
                  176.094,
                  -40.675
                ],
                [
                  176.082,
                  -40.716
                ],
                [
                  176.017,
                  -40.706
                ],
                [
                  175.995,
                  -40.725
                ],
                [
                  175.974,
                  -40.723
                ],
                [
                  175.975,
                  -40.738
                ],
                [
                  175.943,
                  -40.741
                ],
                [
                  175.935,
                  -40.767
                ],
                [
                  175.91,
                  -40.751
                ],
                [
                  175.872,
                  -40.778
                ],
                [
                  175.827,
                  -40.761
                ],
                [
                  175.811,
                  -40.78
                ],
                [
                  175.765,
                  -40.768
                ],
                [
                  175.791,
                  -40.726
                ],
                [
                  175.752,
                  -40.697
                ],
                [
                  175.691,
                  -40.697
                ],
                [
                  175.694,
                  -40.716
                ],
                [
                  175.628,
                  -40.753
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.689,
                  -40.466
                ],
                [
                  175.724,
                  -40.402
                ],
                [
                  175.766,
                  -40.373
                ],
                [
                  175.791,
                  -40.314
                ],
                [
                  175.771,
                  -40.306
                ],
                [
                  175.805,
                  -40.265
                ],
                [
                  175.815,
                  -40.272
                ],
                [
                  175.815,
                  -40.247
                ],
                [
                  175.828,
                  -40.262
                ],
                [
                  175.841,
                  -40.246
                ],
                [
                  175.86,
                  -40.254
                ],
                [
                  175.898,
                  -40.185
                ],
                [
                  175.979,
                  -40.142
                ],
                [
                  176.033,
                  -40.08
                ],
                [
                  176.07,
                  -40.061
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.13,
                  -40.024
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 25,
          RTO2017_V1: "25",
          RTO2017__1: "Timaru",
          Shape_STAr: 273303319732e-2,
          Shape_STLe: 443811.964256
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  170.685,
                  -43.451
                ],
                [
                  170.763,
                  -43.512
                ],
                [
                  170.854,
                  -43.532
                ],
                [
                  170.973,
                  -43.672
                ],
                [
                  171.145,
                  -43.738
                ],
                [
                  171.181,
                  -43.733
                ],
                [
                  171.237,
                  -43.766
                ],
                [
                  171.309,
                  -43.986
                ],
                [
                  171.484,
                  -44.112
                ],
                [
                  171.507,
                  -44.189
                ],
                [
                  171.352,
                  -44.281
                ],
                [
                  171.268,
                  -44.355
                ],
                [
                  171.245,
                  -44.382
                ],
                [
                  171.27,
                  -44.388
                ],
                [
                  171.262,
                  -44.443
                ],
                [
                  171.214,
                  -44.501
                ],
                [
                  171.143,
                  -44.471
                ],
                [
                  171.038,
                  -44.393
                ],
                [
                  171,
                  -44.395
                ],
                [
                  170.977,
                  -44.374
                ],
                [
                  170.948,
                  -44.306
                ],
                [
                  170.899,
                  -44.261
                ],
                [
                  170.86,
                  -44.177
                ],
                [
                  170.87,
                  -44.138
                ],
                [
                  170.935,
                  -44.169
                ],
                [
                  170.996,
                  -44.17
                ],
                [
                  171,
                  -44.135
                ],
                [
                  170.967,
                  -44.064
                ],
                [
                  170.989,
                  -44.042
                ],
                [
                  170.944,
                  -44.008
                ],
                [
                  170.972,
                  -43.989
                ],
                [
                  170.969,
                  -43.966
                ],
                [
                  170.992,
                  -43.964
                ],
                [
                  170.985,
                  -43.924
                ],
                [
                  171.032,
                  -43.959
                ],
                [
                  171.077,
                  -43.961
                ],
                [
                  171.098,
                  -43.932
                ],
                [
                  171.176,
                  -43.928
                ],
                [
                  171.171,
                  -43.895
                ],
                [
                  171.217,
                  -43.9
                ],
                [
                  171.221,
                  -43.85
                ],
                [
                  171.153,
                  -43.808
                ],
                [
                  171.139,
                  -43.78
                ],
                [
                  171.116,
                  -43.782
                ],
                [
                  171.068,
                  -43.75
                ],
                [
                  171.05,
                  -43.759
                ],
                [
                  171.008,
                  -43.749
                ],
                [
                  170.883,
                  -43.812
                ],
                [
                  170.817,
                  -43.774
                ],
                [
                  170.807,
                  -43.783
                ],
                [
                  170.784,
                  -43.775
                ],
                [
                  170.763,
                  -43.817
                ],
                [
                  170.723,
                  -43.812
                ],
                [
                  170.738,
                  -43.765
                ],
                [
                  170.701,
                  -43.762
                ],
                [
                  170.684,
                  -43.717
                ],
                [
                  170.741,
                  -43.612
                ],
                [
                  170.718,
                  -43.578
                ],
                [
                  170.728,
                  -43.556
                ],
                [
                  170.663,
                  -43.545
                ],
                [
                  170.639,
                  -43.529
                ],
                [
                  170.628,
                  -43.49
                ],
                [
                  170.597,
                  -43.464
                ],
                [
                  170.685,
                  -43.451
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 34,
          RTO2017_V1: "34",
          RTO2017__1: "Southland",
          Shape_STAr: 176698596124e-1,
          Shape_STLe: 193880667611e-5
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  168.132,
                  -44.939
                ],
                [
                  168.222,
                  -45.017
                ],
                [
                  168.249,
                  -45.027
                ],
                [
                  168.296,
                  -45.014
                ],
                [
                  168.31,
                  -45.026
                ],
                [
                  168.291,
                  -45.04
                ],
                [
                  168.284,
                  -45.106
                ],
                [
                  168.217,
                  -45.144
                ],
                [
                  168.239,
                  -45.154
                ],
                [
                  168.252,
                  -45.2
                ],
                [
                  168.3,
                  -45.221
                ],
                [
                  168.288,
                  -45.245
                ],
                [
                  168.323,
                  -45.328
                ],
                [
                  168.461,
                  -45.325
                ],
                [
                  168.539,
                  -45.309
                ],
                [
                  168.674,
                  -45.243
                ],
                [
                  168.692,
                  -45.338
                ],
                [
                  168.773,
                  -45.363
                ],
                [
                  168.779,
                  -45.437
                ],
                [
                  168.825,
                  -45.446
                ],
                [
                  168.854,
                  -45.432
                ],
                [
                  168.859,
                  -45.452
                ],
                [
                  168.887,
                  -45.463
                ],
                [
                  168.96,
                  -45.359
                ],
                [
                  169.068,
                  -45.269
                ],
                [
                  169.099,
                  -45.32
                ],
                [
                  169.148,
                  -45.339
                ],
                [
                  169.171,
                  -45.38
                ],
                [
                  169.209,
                  -45.402
                ],
                [
                  169.2,
                  -45.434
                ],
                [
                  169.172,
                  -45.44
                ],
                [
                  169.147,
                  -45.45
                ],
                [
                  169.13,
                  -45.525
                ],
                [
                  169.059,
                  -45.641
                ],
                [
                  169.025,
                  -45.66
                ],
                [
                  168.993,
                  -45.729
                ],
                [
                  169.003,
                  -45.796
                ],
                [
                  169.029,
                  -45.809
                ],
                [
                  169.005,
                  -45.863
                ],
                [
                  169.05,
                  -45.864
                ],
                [
                  169.057,
                  -45.85
                ],
                [
                  169.099,
                  -45.884
                ],
                [
                  169.073,
                  -45.925
                ],
                [
                  169.1,
                  -45.948
                ],
                [
                  169.067,
                  -45.985
                ],
                [
                  169.073,
                  -46.002
                ],
                [
                  169.08,
                  -46.008
                ],
                [
                  169.103,
                  -46.036
                ],
                [
                  169.153,
                  -46.049
                ],
                [
                  169.158,
                  -46.068
                ],
                [
                  169.136,
                  -46.085
                ],
                [
                  169.163,
                  -46.096
                ],
                [
                  169.163,
                  -46.117
                ],
                [
                  169.13,
                  -46.148
                ],
                [
                  169.161,
                  -46.152
                ],
                [
                  169.167,
                  -46.192
                ],
                [
                  169.198,
                  -46.2
                ],
                [
                  169.177,
                  -46.286
                ],
                [
                  169.197,
                  -46.304
                ],
                [
                  169.177,
                  -46.322
                ],
                [
                  169.191,
                  -46.326
                ],
                [
                  169.142,
                  -46.353
                ],
                [
                  169.134,
                  -46.375
                ],
                [
                  169.196,
                  -46.404
                ],
                [
                  169.197,
                  -46.439
                ],
                [
                  169.163,
                  -46.458
                ],
                [
                  169.173,
                  -46.487
                ],
                [
                  169.251,
                  -46.514
                ],
                [
                  169.226,
                  -46.55
                ],
                [
                  169.191,
                  -46.557
                ],
                [
                  169.265,
                  -46.586
                ],
                [
                  169.281,
                  -46.622
                ],
                [
                  169.204,
                  -46.662
                ],
                [
                  169.124,
                  -46.642
                ],
                [
                  169.107,
                  -46.663
                ],
                [
                  169.067,
                  -46.671
                ],
                [
                  169.048,
                  -46.661
                ],
                [
                  169.006,
                  -46.674
                ],
                [
                  168.939,
                  -46.657
                ],
                [
                  168.847,
                  -46.661
                ],
                [
                  168.827,
                  -46.604
                ],
                [
                  168.794,
                  -46.581
                ],
                [
                  168.72,
                  -46.569
                ],
                [
                  168.5,
                  -46.61
                ],
                [
                  168.38,
                  -46.595
                ],
                [
                  168.328,
                  -46.624
                ],
                [
                  168.31,
                  -46.594
                ],
                [
                  168.275,
                  -46.585
                ],
                [
                  168.267,
                  -46.556
                ],
                [
                  168.23,
                  -46.552
                ],
                [
                  168.225,
                  -46.517
                ],
                [
                  168.25,
                  -46.475
                ],
                [
                  168.197,
                  -46.391
                ],
                [
                  168.157,
                  -46.361
                ],
                [
                  168.071,
                  -46.339
                ],
                [
                  168.022,
                  -46.357
                ],
                [
                  168.037,
                  -46.384
                ],
                [
                  167.914,
                  -46.357
                ],
                [
                  167.88,
                  -46.368
                ],
                [
                  167.884,
                  -46.392
                ],
                [
                  167.831,
                  -46.368
                ],
                [
                  167.783,
                  -46.389
                ],
                [
                  167.736,
                  -46.365
                ],
                [
                  167.731,
                  -46.335
                ],
                [
                  167.691,
                  -46.33
                ],
                [
                  167.692,
                  -46.311
                ],
                [
                  167.732,
                  -46.294
                ],
                [
                  167.708,
                  -46.254
                ],
                [
                  167.599,
                  -46.186
                ],
                [
                  167.519,
                  -46.157
                ],
                [
                  167.446,
                  -46.15
                ],
                [
                  167.435,
                  -46.12
                ],
                [
                  167.339,
                  -46.055
                ],
                [
                  167.35,
                  -46.008
                ],
                [
                  167.367,
                  -46.018
                ],
                [
                  167.371,
                  -46.001
                ],
                [
                  167.394,
                  -46.014
                ],
                [
                  167.392,
                  -45.994
                ],
                [
                  167.354,
                  -45.987
                ],
                [
                  167.382,
                  -45.895
                ],
                [
                  167.425,
                  -45.896
                ],
                [
                  167.505,
                  -45.841
                ],
                [
                  167.644,
                  -45.842
                ],
                [
                  167.629,
                  -45.832
                ],
                [
                  167.657,
                  -45.818
                ],
                [
                  167.586,
                  -45.74
                ],
                [
                  167.621,
                  -45.723
                ],
                [
                  167.611,
                  -45.691
                ],
                [
                  167.685,
                  -45.635
                ],
                [
                  167.686,
                  -45.609
                ],
                [
                  167.72,
                  -45.599
                ],
                [
                  167.755,
                  -45.528
                ],
                [
                  167.786,
                  -45.516
                ],
                [
                  167.792,
                  -45.444
                ],
                [
                  167.88,
                  -45.432
                ],
                [
                  167.909,
                  -45.383
                ],
                [
                  167.949,
                  -45.366
                ],
                [
                  167.98,
                  -45.37
                ],
                [
                  168.092,
                  -45.29
                ],
                [
                  168.112,
                  -45.3
                ],
                [
                  168.135,
                  -45.288
                ],
                [
                  168.143,
                  -45.247
                ],
                [
                  168.102,
                  -45.231
                ],
                [
                  168.11,
                  -45.169
                ],
                [
                  168.077,
                  -45.1
                ],
                [
                  168.081,
                  -45.046
                ],
                [
                  168.129,
                  -45.019
                ],
                [
                  168.132,
                  -44.939
                ]
              ]
            ],
            [
              [
                [
                  167.87,
                  -46.684
                ],
                [
                  167.978,
                  -46.721
                ],
                [
                  168.004,
                  -46.79
                ],
                [
                  168.091,
                  -46.832
                ],
                [
                  168.076,
                  -46.854
                ],
                [
                  168.145,
                  -46.861
                ],
                [
                  168.126,
                  -46.875
                ],
                [
                  168.15,
                  -46.88
                ],
                [
                  168.131,
                  -46.9
                ],
                [
                  168.164,
                  -46.896
                ],
                [
                  168.14,
                  -46.912
                ],
                [
                  168.071,
                  -46.908
                ],
                [
                  168.068,
                  -46.895
                ],
                [
                  168.067,
                  -46.907
                ],
                [
                  168.042,
                  -46.902
                ],
                [
                  168.063,
                  -46.917
                ],
                [
                  168.047,
                  -46.92
                ],
                [
                  168.012,
                  -46.903
                ],
                [
                  168.032,
                  -46.898
                ],
                [
                  168.008,
                  -46.869
                ],
                [
                  167.991,
                  -46.871
                ],
                [
                  168.002,
                  -46.895
                ],
                [
                  167.976,
                  -46.891
                ],
                [
                  167.963,
                  -46.894
                ],
                [
                  167.94,
                  -46.883
                ],
                [
                  167.963,
                  -46.895
                ],
                [
                  167.961,
                  -46.897
                ],
                [
                  167.954,
                  -46.896
                ],
                [
                  167.954,
                  -46.897
                ],
                [
                  167.952,
                  -46.896
                ],
                [
                  167.95,
                  -46.896
                ],
                [
                  167.95,
                  -46.896
                ],
                [
                  167.971,
                  -46.901
                ],
                [
                  167.979,
                  -46.929
                ],
                [
                  167.95,
                  -46.938
                ],
                [
                  167.915,
                  -46.972
                ],
                [
                  167.894,
                  -46.98
                ],
                [
                  167.892,
                  -46.98
                ],
                [
                  167.887,
                  -46.984
                ],
                [
                  167.964,
                  -46.954
                ],
                [
                  167.987,
                  -46.929
                ],
                [
                  168.014,
                  -46.924
                ],
                [
                  168.023,
                  -46.951
                ],
                [
                  168.131,
                  -46.959
                ],
                [
                  168.075,
                  -46.991
                ],
                [
                  168.139,
                  -46.991
                ],
                [
                  168.143,
                  -46.969
                ],
                [
                  168.174,
                  -46.971
                ],
                [
                  168.168,
                  -46.938
                ],
                [
                  168.194,
                  -46.921
                ],
                [
                  168.178,
                  -46.974
                ],
                [
                  168.216,
                  -46.994
                ],
                [
                  168.209,
                  -47.015
                ],
                [
                  168.223,
                  -47.013
                ],
                [
                  168.229,
                  -47.016
                ],
                [
                  168.202,
                  -47.028
                ],
                [
                  168.219,
                  -47.035
                ],
                [
                  168.198,
                  -47.052
                ],
                [
                  168.211,
                  -47.066
                ],
                [
                  168.195,
                  -47.064
                ],
                [
                  168.175,
                  -47.045
                ],
                [
                  168.161,
                  -47.042
                ],
                [
                  168.176,
                  -47.058
                ],
                [
                  168.151,
                  -47.067
                ],
                [
                  168.207,
                  -47.079
                ],
                [
                  168.22,
                  -47.097
                ],
                [
                  168.141,
                  -47.078
                ],
                [
                  168.157,
                  -47.107
                ],
                [
                  168.146,
                  -47.118
                ],
                [
                  168.132,
                  -47.103
                ],
                [
                  168.075,
                  -47.094
                ],
                [
                  168.075,
                  -47.087
                ],
                [
                  168.067,
                  -47.084
                ],
                [
                  168.069,
                  -47.076
                ],
                [
                  168.055,
                  -47.076
                ],
                [
                  168.072,
                  -47.094
                ],
                [
                  168.119,
                  -47.106
                ],
                [
                  168.132,
                  -47.122
                ],
                [
                  168.071,
                  -47.103
                ],
                [
                  168.058,
                  -47.122
                ],
                [
                  168.039,
                  -47.112
                ],
                [
                  168.043,
                  -47.129
                ],
                [
                  168.003,
                  -47.122
                ],
                [
                  167.993,
                  -47.112
                ],
                [
                  167.991,
                  -47.112
                ],
                [
                  167.988,
                  -47.112
                ],
                [
                  167.982,
                  -47.134
                ],
                [
                  167.95,
                  -47.128
                ],
                [
                  167.897,
                  -47.17
                ],
                [
                  167.866,
                  -47.168
                ],
                [
                  167.866,
                  -47.181
                ],
                [
                  167.82,
                  -47.192
                ],
                [
                  167.758,
                  -47.171
                ],
                [
                  167.722,
                  -47.182
                ],
                [
                  167.72,
                  -47.166
                ],
                [
                  167.697,
                  -47.151
                ],
                [
                  167.686,
                  -47.171
                ],
                [
                  167.661,
                  -47.166
                ],
                [
                  167.675,
                  -47.194
                ],
                [
                  167.652,
                  -47.205
                ],
                [
                  167.636,
                  -47.198
                ],
                [
                  167.632,
                  -47.2
                ],
                [
                  167.636,
                  -47.21
                ],
                [
                  167.606,
                  -47.21
                ],
                [
                  167.609,
                  -47.225
                ],
                [
                  167.578,
                  -47.237
                ],
                [
                  167.621,
                  -47.245
                ],
                [
                  167.651,
                  -47.221
                ],
                [
                  167.646,
                  -47.264
                ],
                [
                  167.61,
                  -47.271
                ],
                [
                  167.617,
                  -47.248
                ],
                [
                  167.594,
                  -47.245
                ],
                [
                  167.573,
                  -47.279
                ],
                [
                  167.54,
                  -47.29
                ],
                [
                  167.49,
                  -47.285
                ],
                [
                  167.492,
                  -47.27
                ],
                [
                  167.466,
                  -47.283
                ],
                [
                  167.447,
                  -47.267
                ],
                [
                  167.466,
                  -47.216
                ],
                [
                  167.498,
                  -47.198
                ],
                [
                  167.519,
                  -47.204
                ],
                [
                  167.522,
                  -47.189
                ],
                [
                  167.576,
                  -47.166
                ],
                [
                  167.573,
                  -47.148
                ],
                [
                  167.555,
                  -47.156
                ],
                [
                  167.59,
                  -47.114
                ],
                [
                  167.568,
                  -47.113
                ],
                [
                  167.56,
                  -47.091
                ],
                [
                  167.62,
                  -47.042
                ],
                [
                  167.728,
                  -47.053
                ],
                [
                  167.692,
                  -47.034
                ],
                [
                  167.7,
                  -47.003
                ],
                [
                  167.669,
                  -46.977
                ],
                [
                  167.733,
                  -46.957
                ],
                [
                  167.771,
                  -46.923
                ],
                [
                  167.751,
                  -46.848
                ],
                [
                  167.7,
                  -46.796
                ],
                [
                  167.719,
                  -46.785
                ],
                [
                  167.704,
                  -46.755
                ],
                [
                  167.72,
                  -46.714
                ],
                [
                  167.786,
                  -46.687
                ],
                [
                  167.834,
                  -46.703
                ],
                [
                  167.87,
                  -46.684
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 1,
          RTO2017_V1: "01",
          RTO2017__1: "Northland",
          Shape_STAr: 132870285945e-1,
          Shape_STLe: 164798471222e-5
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  173.014,
                  -34.393
                ],
                [
                  173.048,
                  -34.412
                ],
                [
                  173.012,
                  -34.428
                ],
                [
                  173.007,
                  -34.509
                ],
                [
                  172.988,
                  -34.521
                ],
                [
                  173.011,
                  -34.623
                ],
                [
                  173.059,
                  -34.703
                ],
                [
                  173.116,
                  -34.737
                ],
                [
                  173.132,
                  -34.763
                ],
                [
                  173.155,
                  -34.766
                ],
                [
                  173.146,
                  -34.779
                ],
                [
                  173.175,
                  -34.804
                ],
                [
                  173.154,
                  -34.834
                ],
                [
                  173.184,
                  -34.863
                ],
                [
                  173.275,
                  -34.888
                ],
                [
                  173.29,
                  -34.858
                ],
                [
                  173.324,
                  -34.861
                ],
                [
                  173.386,
                  -34.838
                ],
                [
                  173.399,
                  -34.784
                ],
                [
                  173.412,
                  -34.833
                ],
                [
                  173.45,
                  -34.825
                ],
                [
                  173.441,
                  -34.836
                ],
                [
                  173.47,
                  -34.849
                ],
                [
                  173.414,
                  -34.881
                ],
                [
                  173.373,
                  -34.882
                ],
                [
                  173.381,
                  -34.939
                ],
                [
                  173.432,
                  -34.986
                ],
                [
                  173.518,
                  -34.989
                ],
                [
                  173.539,
                  -34.971
                ],
                [
                  173.527,
                  -34.944
                ],
                [
                  173.559,
                  -34.914
                ],
                [
                  173.573,
                  -34.944
                ],
                [
                  173.621,
                  -34.939
                ],
                [
                  173.644,
                  -34.966
                ],
                [
                  173.682,
                  -34.948
                ],
                [
                  173.705,
                  -34.954
                ],
                [
                  173.717,
                  -34.998
                ],
                [
                  173.777,
                  -35.008
                ],
                [
                  173.862,
                  -34.99
                ],
                [
                  173.844,
                  -34.999
                ],
                [
                  173.86,
                  -35.019
                ],
                [
                  173.885,
                  -35.022
                ],
                [
                  173.893,
                  -35.01
                ],
                [
                  173.92,
                  -35.027
                ],
                [
                  173.914,
                  -35.039
                ],
                [
                  173.939,
                  -35.053
                ],
                [
                  173.936,
                  -35.089
                ],
                [
                  173.965,
                  -35.12
                ],
                [
                  174.075,
                  -35.115
                ],
                [
                  174.098,
                  -35.151
                ],
                [
                  174.119,
                  -35.157
                ],
                [
                  174.341,
                  -35.163
                ],
                [
                  174.341,
                  -35.191
                ],
                [
                  174.318,
                  -35.195
                ],
                [
                  174.315,
                  -35.221
                ],
                [
                  174.291,
                  -35.232
                ],
                [
                  174.313,
                  -35.237
                ],
                [
                  174.293,
                  -35.25
                ],
                [
                  174.295,
                  -35.254
                ],
                [
                  174.307,
                  -35.247
                ],
                [
                  174.326,
                  -35.25
                ],
                [
                  174.297,
                  -35.256
                ],
                [
                  174.29,
                  -35.275
                ],
                [
                  174.337,
                  -35.325
                ],
                [
                  174.377,
                  -35.319
                ],
                [
                  174.363,
                  -35.436
                ],
                [
                  174.393,
                  -35.43
                ],
                [
                  174.409,
                  -35.444
                ],
                [
                  174.432,
                  -35.427
                ],
                [
                  174.428,
                  -35.456
                ],
                [
                  174.48,
                  -35.512
                ],
                [
                  174.459,
                  -35.529
                ],
                [
                  174.473,
                  -35.556
                ],
                [
                  174.511,
                  -35.556
                ],
                [
                  174.506,
                  -35.567
                ],
                [
                  174.536,
                  -35.581
                ],
                [
                  174.542,
                  -35.635
                ],
                [
                  174.517,
                  -35.63
                ],
                [
                  174.502,
                  -35.649
                ],
                [
                  174.525,
                  -35.714
                ],
                [
                  174.567,
                  -35.717
                ],
                [
                  174.552,
                  -35.728
                ],
                [
                  174.563,
                  -35.745
                ],
                [
                  174.549,
                  -35.787
                ],
                [
                  174.591,
                  -35.854
                ],
                [
                  174.531,
                  -35.862
                ],
                [
                  174.501,
                  -35.839
                ],
                [
                  174.467,
                  -35.883
                ],
                [
                  174.464,
                  -35.948
                ],
                [
                  174.492,
                  -36.008
                ],
                [
                  174.538,
                  -36.048
                ],
                [
                  174.589,
                  -36.047
                ],
                [
                  174.619,
                  -36.119
                ],
                [
                  174.585,
                  -36.143
                ],
                [
                  174.581,
                  -36.166
                ],
                [
                  174.533,
                  -36.185
                ],
                [
                  174.523,
                  -36.21
                ],
                [
                  174.484,
                  -36.23
                ],
                [
                  174.474,
                  -36.229
                ],
                [
                  174.476,
                  -36.225
                ],
                [
                  174.474,
                  -36.222
                ],
                [
                  174.476,
                  -36.22
                ],
                [
                  174.473,
                  -36.218
                ],
                [
                  174.475,
                  -36.212
                ],
                [
                  174.47,
                  -36.212
                ],
                [
                  174.465,
                  -36.26
                ],
                [
                  174.455,
                  -36.249
                ],
                [
                  174.435,
                  -36.262
                ],
                [
                  174.432,
                  -36.26
                ],
                [
                  174.43,
                  -36.259
                ],
                [
                  174.428,
                  -36.255
                ],
                [
                  174.425,
                  -36.253
                ],
                [
                  174.424,
                  -36.253
                ],
                [
                  174.425,
                  -36.267
                ],
                [
                  174.395,
                  -36.287
                ],
                [
                  174.374,
                  -36.276
                ],
                [
                  174.34,
                  -36.317
                ],
                [
                  174.275,
                  -36.286
                ],
                [
                  174.273,
                  -36.259
                ],
                [
                  174.307,
                  -36.244
                ],
                [
                  174.318,
                  -36.273
                ],
                [
                  174.332,
                  -36.263
                ],
                [
                  174.349,
                  -36.267
                ],
                [
                  174.342,
                  -36.282
                ],
                [
                  174.361,
                  -36.281
                ],
                [
                  174.322,
                  -36.234
                ],
                [
                  174.337,
                  -36.225
                ],
                [
                  174.334,
                  -36.232
                ],
                [
                  174.345,
                  -36.235
                ],
                [
                  174.339,
                  -36.226
                ],
                [
                  174.351,
                  -36.228
                ],
                [
                  174.356,
                  -36.227
                ],
                [
                  174.34,
                  -36.219
                ],
                [
                  174.368,
                  -36.204
                ],
                [
                  174.381,
                  -36.21
                ],
                [
                  174.373,
                  -36.181
                ],
                [
                  174.393,
                  -36.186
                ],
                [
                  174.391,
                  -36.175
                ],
                [
                  174.399,
                  -36.175
                ],
                [
                  174.397,
                  -36.172
                ],
                [
                  174.372,
                  -36.169
                ],
                [
                  174.401,
                  -36.157
                ],
                [
                  174.388,
                  -36.148
                ],
                [
                  174.416,
                  -36.149
                ],
                [
                  174.417,
                  -36.145
                ],
                [
                  174.418,
                  -36.152
                ],
                [
                  174.432,
                  -36.157
                ],
                [
                  174.424,
                  -36.138
                ],
                [
                  174.39,
                  -36.144
                ],
                [
                  174.364,
                  -36.117
                ],
                [
                  174.385,
                  -36.156
                ],
                [
                  174.367,
                  -36.16
                ],
                [
                  174.359,
                  -36.205
                ],
                [
                  174.315,
                  -36.226
                ],
                [
                  174.33,
                  -36.193
                ],
                [
                  174.297,
                  -36.212
                ],
                [
                  174.266,
                  -36.185
                ],
                [
                  174.301,
                  -36.183
                ],
                [
                  174.298,
                  -36.178
                ],
                [
                  174.311,
                  -36.18
                ],
                [
                  174.313,
                  -36.172
                ],
                [
                  174.286,
                  -36.179
                ],
                [
                  174.285,
                  -36.172
                ],
                [
                  174.291,
                  -36.171
                ],
                [
                  174.292,
                  -36.166
                ],
                [
                  174.295,
                  -36.165
                ],
                [
                  174.297,
                  -36.164
                ],
                [
                  174.297,
                  -36.163
                ],
                [
                  174.257,
                  -36.177
                ],
                [
                  174.244,
                  -36.166
                ],
                [
                  174.254,
                  -36.184
                ],
                [
                  174.236,
                  -36.171
                ],
                [
                  174.239,
                  -36.138
                ],
                [
                  174.255,
                  -36.118
                ],
                [
                  174.258,
                  -36.123
                ],
                [
                  174.269,
                  -36.121
                ],
                [
                  174.27,
                  -36.117
                ],
                [
                  174.256,
                  -36.112
                ],
                [
                  174.239,
                  -36.122
                ],
                [
                  174.226,
                  -36.16
                ],
                [
                  174.218,
                  -36.121
                ],
                [
                  174.235,
                  -36.116
                ],
                [
                  174.233,
                  -36.106
                ],
                [
                  174.218,
                  -36.115
                ],
                [
                  174.206,
                  -36.137
                ],
                [
                  174.201,
                  -36.125
                ],
                [
                  174.188,
                  -36.122
                ],
                [
                  174.19,
                  -36.142
                ],
                [
                  174.162,
                  -36.141
                ],
                [
                  174.199,
                  -36.151
                ],
                [
                  174.168,
                  -36.158
                ],
                [
                  174.192,
                  -36.16
                ],
                [
                  174.187,
                  -36.175
                ],
                [
                  174.21,
                  -36.159
                ],
                [
                  174.236,
                  -36.182
                ],
                [
                  174.205,
                  -36.176
                ],
                [
                  174.196,
                  -36.188
                ],
                [
                  174.195,
                  -36.196
                ],
                [
                  174.24,
                  -36.185
                ],
                [
                  174.22,
                  -36.197
                ],
                [
                  174.218,
                  -36.208
                ],
                [
                  174.232,
                  -36.215
                ],
                [
                  174.245,
                  -36.196
                ],
                [
                  174.249,
                  -36.212
                ],
                [
                  174.263,
                  -36.194
                ],
                [
                  174.266,
                  -36.219
                ],
                [
                  174.288,
                  -36.215
                ],
                [
                  174.293,
                  -36.238
                ],
                [
                  174.273,
                  -36.234
                ],
                [
                  174.237,
                  -36.263
                ],
                [
                  174.154,
                  -36.214
                ],
                [
                  174.121,
                  -36.168
                ],
                [
                  174.046,
                  -36.17
                ],
                [
                  173.99,
                  -36.124
                ],
                [
                  174.039,
                  -36.19
                ],
                [
                  174.071,
                  -36.202
                ],
                [
                  174.079,
                  -36.236
                ],
                [
                  174.108,
                  -36.25
                ],
                [
                  174.097,
                  -36.269
                ],
                [
                  174.122,
                  -36.258
                ],
                [
                  174.155,
                  -36.276
                ],
                [
                  174.157,
                  -36.291
                ],
                [
                  174.122,
                  -36.301
                ],
                [
                  174.158,
                  -36.301
                ],
                [
                  174.181,
                  -36.336
                ],
                [
                  174.181,
                  -36.365
                ],
                [
                  174.142,
                  -36.39
                ],
                [
                  174.038,
                  -36.392
                ],
                [
                  174.014,
                  -36.295
                ],
                [
                  173.967,
                  -36.209
                ],
                [
                  173.635,
                  -35.831
                ],
                [
                  173.44,
                  -35.639
                ],
                [
                  173.366,
                  -35.532
                ],
                [
                  173.162,
                  -35.315
                ],
                [
                  173.163,
                  -35.293
                ],
                [
                  173.056,
                  -35.194
                ],
                [
                  173.07,
                  -35.164
                ],
                [
                  173.135,
                  -35.177
                ],
                [
                  173.169,
                  -35.136
                ],
                [
                  173.173,
                  -35.059
                ],
                [
                  173.136,
                  -34.969
                ],
                [
                  172.85,
                  -34.628
                ],
                [
                  172.738,
                  -34.533
                ],
                [
                  172.704,
                  -34.524
                ],
                [
                  172.69,
                  -34.491
                ],
                [
                  172.643,
                  -34.477
                ],
                [
                  172.673,
                  -34.46
                ],
                [
                  172.68,
                  -34.42
                ],
                [
                  172.8,
                  -34.454
                ],
                [
                  172.852,
                  -34.434
                ],
                [
                  172.854,
                  -34.415
                ],
                [
                  172.964,
                  -34.426
                ],
                [
                  173.014,
                  -34.393
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 26,
          RTO2017_V1: "26",
          RTO2017__1: "Mackenzie",
          Shape_STAr: 744235440724e-2,
          Shape_STLe: 539389.275575
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  170.53,
                  -43.41
                ],
                [
                  170.615,
                  -43.432
                ],
                [
                  170.597,
                  -43.464
                ],
                [
                  170.628,
                  -43.49
                ],
                [
                  170.639,
                  -43.529
                ],
                [
                  170.663,
                  -43.545
                ],
                [
                  170.728,
                  -43.556
                ],
                [
                  170.718,
                  -43.578
                ],
                [
                  170.741,
                  -43.612
                ],
                [
                  170.684,
                  -43.717
                ],
                [
                  170.701,
                  -43.762
                ],
                [
                  170.738,
                  -43.765
                ],
                [
                  170.724,
                  -43.813
                ],
                [
                  170.763,
                  -43.817
                ],
                [
                  170.784,
                  -43.775
                ],
                [
                  170.807,
                  -43.783
                ],
                [
                  170.817,
                  -43.774
                ],
                [
                  170.883,
                  -43.812
                ],
                [
                  171.008,
                  -43.749
                ],
                [
                  171.05,
                  -43.759
                ],
                [
                  171.068,
                  -43.75
                ],
                [
                  171.116,
                  -43.782
                ],
                [
                  171.139,
                  -43.78
                ],
                [
                  171.153,
                  -43.808
                ],
                [
                  171.221,
                  -43.85
                ],
                [
                  171.223,
                  -43.888
                ],
                [
                  171.213,
                  -43.901
                ],
                [
                  171.171,
                  -43.895
                ],
                [
                  171.176,
                  -43.928
                ],
                [
                  171.098,
                  -43.932
                ],
                [
                  171.077,
                  -43.961
                ],
                [
                  171.032,
                  -43.959
                ],
                [
                  170.985,
                  -43.924
                ],
                [
                  170.992,
                  -43.964
                ],
                [
                  170.969,
                  -43.966
                ],
                [
                  170.972,
                  -43.989
                ],
                [
                  170.944,
                  -44.008
                ],
                [
                  170.989,
                  -44.042
                ],
                [
                  170.967,
                  -44.064
                ],
                [
                  171,
                  -44.135
                ],
                [
                  170.996,
                  -44.171
                ],
                [
                  170.935,
                  -44.169
                ],
                [
                  170.87,
                  -44.138
                ],
                [
                  170.86,
                  -44.177
                ],
                [
                  170.899,
                  -44.261
                ],
                [
                  170.948,
                  -44.306
                ],
                [
                  170.977,
                  -44.374
                ],
                [
                  170.929,
                  -44.362
                ],
                [
                  170.912,
                  -44.332
                ],
                [
                  170.861,
                  -44.331
                ],
                [
                  170.79,
                  -44.371
                ],
                [
                  170.781,
                  -44.415
                ],
                [
                  170.803,
                  -44.436
                ],
                [
                  170.771,
                  -44.442
                ],
                [
                  170.736,
                  -44.384
                ],
                [
                  170.659,
                  -44.384
                ],
                [
                  170.636,
                  -44.35
                ],
                [
                  170.591,
                  -44.344
                ],
                [
                  170.572,
                  -44.313
                ],
                [
                  170.22,
                  -44.466
                ],
                [
                  170.205,
                  -44.351
                ],
                [
                  170.165,
                  -44.32
                ],
                [
                  170.001,
                  -44.261
                ],
                [
                  169.951,
                  -44.285
                ],
                [
                  169.879,
                  -44.259
                ],
                [
                  169.878,
                  -44.193
                ],
                [
                  169.842,
                  -44.15
                ],
                [
                  169.875,
                  -44.103
                ],
                [
                  169.816,
                  -44.029
                ],
                [
                  169.827,
                  -43.96
                ],
                [
                  169.964,
                  -43.792
                ],
                [
                  169.979,
                  -43.747
                ],
                [
                  170.031,
                  -43.723
                ],
                [
                  170.028,
                  -43.691
                ],
                [
                  170.095,
                  -43.656
                ],
                [
                  170.093,
                  -43.6
                ],
                [
                  170.14,
                  -43.589
                ],
                [
                  170.229,
                  -43.519
                ],
                [
                  170.329,
                  -43.482
                ],
                [
                  170.356,
                  -43.506
                ],
                [
                  170.395,
                  -43.498
                ],
                [
                  170.459,
                  -43.461
                ],
                [
                  170.476,
                  -43.433
                ],
                [
                  170.511,
                  -43.428
                ],
                [
                  170.53,
                  -43.41
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 20,
          RTO2017_V1: "20",
          RTO2017__1: "Marlborough",
          Shape_STAr: 12484601779,
          Shape_STLe: 694840.17621
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  174.458,
                  -41.103
                ],
                [
                  174.383,
                  -41.201
                ],
                [
                  174.247,
                  -41.326
                ],
                [
                  174.158,
                  -41.358
                ],
                [
                  174.071,
                  -41.355
                ],
                [
                  174.067,
                  -41.387
                ],
                [
                  174.04,
                  -41.41
                ],
                [
                  174.038,
                  -41.483
                ],
                [
                  174.15,
                  -41.559
                ],
                [
                  174.166,
                  -41.605
                ],
                [
                  174.157,
                  -41.657
                ],
                [
                  174.179,
                  -41.708
                ],
                [
                  174.211,
                  -41.728
                ],
                [
                  174.276,
                  -41.727
                ],
                [
                  174.196,
                  -41.836
                ],
                [
                  174.083,
                  -41.945
                ],
                [
                  174.048,
                  -41.967
                ],
                [
                  174.063,
                  -41.934
                ],
                [
                  173.977,
                  -41.933
                ],
                [
                  173.959,
                  -41.909
                ],
                [
                  173.817,
                  -41.933
                ],
                [
                  173.789,
                  -41.958
                ],
                [
                  173.744,
                  -41.907
                ],
                [
                  173.714,
                  -41.94
                ],
                [
                  173.72,
                  -41.961
                ],
                [
                  173.663,
                  -41.982
                ],
                [
                  173.638,
                  -42.009
                ],
                [
                  173.61,
                  -42.005
                ],
                [
                  173.547,
                  -42.07
                ],
                [
                  173.499,
                  -42.079
                ],
                [
                  173.486,
                  -42.11
                ],
                [
                  173.463,
                  -42.118
                ],
                [
                  173.484,
                  -42.182
                ],
                [
                  173.464,
                  -42.18
                ],
                [
                  173.438,
                  -42.214
                ],
                [
                  173.369,
                  -42.224
                ],
                [
                  173.373,
                  -42.237
                ],
                [
                  173.351,
                  -42.243
                ],
                [
                  173.342,
                  -42.228
                ],
                [
                  173.333,
                  -42.247
                ],
                [
                  173.296,
                  -42.248
                ],
                [
                  173.296,
                  -42.266
                ],
                [
                  173.183,
                  -42.338
                ],
                [
                  173.243,
                  -42.356
                ],
                [
                  173.221,
                  -42.38
                ],
                [
                  173.164,
                  -42.419
                ],
                [
                  173.152,
                  -42.45
                ],
                [
                  173.106,
                  -42.448
                ],
                [
                  173.053,
                  -42.488
                ],
                [
                  173.014,
                  -42.446
                ],
                [
                  172.97,
                  -42.449
                ],
                [
                  173.003,
                  -42.393
                ],
                [
                  172.941,
                  -42.378
                ],
                [
                  172.944,
                  -42.351
                ],
                [
                  172.92,
                  -42.346
                ],
                [
                  172.914,
                  -42.309
                ],
                [
                  172.87,
                  -42.318
                ],
                [
                  172.847,
                  -42.308
                ],
                [
                  172.863,
                  -42.256
                ],
                [
                  172.827,
                  -42.248
                ],
                [
                  172.832,
                  -42.184
                ],
                [
                  172.807,
                  -42.189
                ],
                [
                  172.794,
                  -42.162
                ],
                [
                  172.722,
                  -42.159
                ],
                [
                  172.721,
                  -42.103
                ],
                [
                  172.733,
                  -42.035
                ],
                [
                  172.757,
                  -42.036
                ],
                [
                  172.808,
                  -41.958
                ],
                [
                  172.847,
                  -41.942
                ],
                [
                  172.865,
                  -41.909
                ],
                [
                  172.848,
                  -41.874
                ],
                [
                  172.868,
                  -41.866
                ],
                [
                  172.891,
                  -41.818
                ],
                [
                  172.946,
                  -41.781
                ],
                [
                  172.926,
                  -41.748
                ],
                [
                  172.958,
                  -41.75
                ],
                [
                  173.004,
                  -41.725
                ],
                [
                  173.057,
                  -41.668
                ],
                [
                  173.059,
                  -41.626
                ],
                [
                  173.089,
                  -41.624
                ],
                [
                  173.151,
                  -41.586
                ],
                [
                  173.172,
                  -41.524
                ],
                [
                  173.299,
                  -41.516
                ],
                [
                  173.251,
                  -41.467
                ],
                [
                  173.295,
                  -41.426
                ],
                [
                  173.285,
                  -41.403
                ],
                [
                  173.338,
                  -41.386
                ],
                [
                  173.361,
                  -41.353
                ],
                [
                  173.407,
                  -41.331
                ],
                [
                  173.416,
                  -41.289
                ],
                [
                  173.476,
                  -41.229
                ],
                [
                  173.574,
                  -41.184
                ],
                [
                  173.593,
                  -41.036
                ],
                [
                  173.822,
                  -40.746
                ],
                [
                  174,
                  -40.651
                ],
                [
                  174.458,
                  -41.103
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 5,
          RTO2017_V1: "05",
          RTO2017__1: "Western Bays",
          Shape_STAr: 229241039319e-2,
          Shape_STLe: 294951.491503
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.94,
                  -37.373
                ],
                [
                  175.986,
                  -37.472
                ],
                [
                  176.15,
                  -37.624
                ],
                [
                  176.402,
                  -37.743
                ],
                [
                  176.454,
                  -37.755
                ],
                [
                  176.468,
                  -37.741
                ],
                [
                  176.603,
                  -37.83
                ],
                [
                  176.603,
                  -38.011
                ],
                [
                  176.509,
                  -37.994
                ],
                [
                  176.5,
                  -37.959
                ],
                [
                  176.469,
                  -37.967
                ],
                [
                  176.351,
                  -37.937
                ],
                [
                  176.286,
                  -37.937
                ],
                [
                  176.239,
                  -37.96
                ],
                [
                  176.098,
                  -37.962
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  176.013,
                  -37.993
                ],
                [
                  175.971,
                  -37.986
                ],
                [
                  175.941,
                  -37.93
                ],
                [
                  175.977,
                  -37.914
                ],
                [
                  175.954,
                  -37.902
                ],
                [
                  175.972,
                  -37.883
                ],
                [
                  175.936,
                  -37.881
                ],
                [
                  175.935,
                  -37.843
                ],
                [
                  175.906,
                  -37.829
                ],
                [
                  175.928,
                  -37.776
                ],
                [
                  175.841,
                  -37.642
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.831,
                  -37.537
                ],
                [
                  175.806,
                  -37.511
                ],
                [
                  175.833,
                  -37.472
                ],
                [
                  175.866,
                  -37.5
                ],
                [
                  175.899,
                  -37.496
                ],
                [
                  175.861,
                  -37.461
                ],
                [
                  175.912,
                  -37.428
                ],
                [
                  175.917,
                  -37.379
                ],
                [
                  175.94,
                  -37.373
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 23,
          RTO2017_V1: "23",
          RTO2017__1: "Kaikoura",
          Shape_STAr: 204679155942e-2,
          Shape_STLe: 314055.976648
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  173.744,
                  -41.907
                ],
                [
                  173.789,
                  -41.958
                ],
                [
                  173.817,
                  -41.933
                ],
                [
                  173.959,
                  -41.909
                ],
                [
                  173.977,
                  -41.933
                ],
                [
                  174.063,
                  -41.934
                ],
                [
                  174.048,
                  -41.967
                ],
                [
                  173.938,
                  -42.083
                ],
                [
                  173.924,
                  -42.13
                ],
                [
                  173.94,
                  -42.162
                ],
                [
                  173.808,
                  -42.265
                ],
                [
                  173.762,
                  -42.285
                ],
                [
                  173.749,
                  -42.321
                ],
                [
                  173.695,
                  -42.354
                ],
                [
                  173.682,
                  -42.398
                ],
                [
                  173.717,
                  -42.424
                ],
                [
                  173.692,
                  -42.435
                ],
                [
                  173.665,
                  -42.412
                ],
                [
                  173.594,
                  -42.428
                ],
                [
                  173.509,
                  -42.506
                ],
                [
                  173.501,
                  -42.546
                ],
                [
                  173.518,
                  -42.554
                ],
                [
                  173.501,
                  -42.565
                ],
                [
                  173.465,
                  -42.536
                ],
                [
                  173.449,
                  -42.543
                ],
                [
                  173.38,
                  -42.514
                ],
                [
                  173.395,
                  -42.503
                ],
                [
                  173.428,
                  -42.515
                ],
                [
                  173.441,
                  -42.47
                ],
                [
                  173.4,
                  -42.425
                ],
                [
                  173.379,
                  -42.405
                ],
                [
                  173.37,
                  -42.34
                ],
                [
                  173.32,
                  -42.35
                ],
                [
                  173.298,
                  -42.37
                ],
                [
                  173.243,
                  -42.356
                ],
                [
                  173.183,
                  -42.338
                ],
                [
                  173.296,
                  -42.266
                ],
                [
                  173.296,
                  -42.248
                ],
                [
                  173.333,
                  -42.247
                ],
                [
                  173.342,
                  -42.228
                ],
                [
                  173.351,
                  -42.243
                ],
                [
                  173.373,
                  -42.237
                ],
                [
                  173.369,
                  -42.224
                ],
                [
                  173.438,
                  -42.214
                ],
                [
                  173.464,
                  -42.18
                ],
                [
                  173.484,
                  -42.182
                ],
                [
                  173.463,
                  -42.118
                ],
                [
                  173.486,
                  -42.11
                ],
                [
                  173.499,
                  -42.079
                ],
                [
                  173.547,
                  -42.07
                ],
                [
                  173.61,
                  -42.005
                ],
                [
                  173.638,
                  -42.009
                ],
                [
                  173.663,
                  -41.982
                ],
                [
                  173.72,
                  -41.961
                ],
                [
                  173.714,
                  -41.94
                ],
                [
                  173.744,
                  -41.907
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 33,
          RTO2017_V1: "33",
          RTO2017__1: "Clutha",
          Shape_STAr: 6369410173469999e-6,
          Shape_STLe: 586016.302112
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  169.172,
                  -45.44
                ],
                [
                  169.154,
                  -45.469
                ],
                [
                  169.184,
                  -45.512
                ],
                [
                  169.167,
                  -45.55
                ],
                [
                  169.198,
                  -45.569
                ],
                [
                  169.174,
                  -45.591
                ],
                [
                  169.176,
                  -45.653
                ],
                [
                  169.279,
                  -45.703
                ],
                [
                  169.29,
                  -45.688
                ],
                [
                  169.403,
                  -45.687
                ],
                [
                  169.395,
                  -45.743
                ],
                [
                  169.418,
                  -45.737
                ],
                [
                  169.447,
                  -45.79
                ],
                [
                  169.477,
                  -45.787
                ],
                [
                  169.524,
                  -45.813
                ],
                [
                  169.576,
                  -45.799
                ],
                [
                  169.595,
                  -45.775
                ],
                [
                  169.643,
                  -45.769
                ],
                [
                  169.673,
                  -45.693
                ],
                [
                  169.739,
                  -45.72
                ],
                [
                  169.759,
                  -45.761
                ],
                [
                  169.797,
                  -45.778
                ],
                [
                  169.857,
                  -45.753
                ],
                [
                  169.891,
                  -45.758
                ],
                [
                  169.919,
                  -45.714
                ],
                [
                  169.946,
                  -45.721
                ],
                [
                  169.976,
                  -45.756
                ],
                [
                  169.994,
                  -45.751
                ],
                [
                  170.011,
                  -45.771
                ],
                [
                  170.051,
                  -45.779
                ],
                [
                  170.05,
                  -45.855
                ],
                [
                  170.022,
                  -45.855
                ],
                [
                  170.021,
                  -45.924
                ],
                [
                  170.095,
                  -45.932
                ],
                [
                  170.1,
                  -45.951
                ],
                [
                  170.127,
                  -45.96
                ],
                [
                  170.107,
                  -45.986
                ],
                [
                  170.16,
                  -45.996
                ],
                [
                  170.203,
                  -46.052
                ],
                [
                  170.171,
                  -46.153
                ],
                [
                  170.01,
                  -46.238
                ],
                [
                  169.973,
                  -46.272
                ],
                [
                  169.798,
                  -46.355
                ],
                [
                  169.78,
                  -46.398
                ],
                [
                  169.819,
                  -46.45
                ],
                [
                  169.781,
                  -46.453
                ],
                [
                  169.753,
                  -46.483
                ],
                [
                  169.715,
                  -46.483
                ],
                [
                  169.698,
                  -46.52
                ],
                [
                  169.617,
                  -46.54
                ],
                [
                  169.585,
                  -46.578
                ],
                [
                  169.562,
                  -46.561
                ],
                [
                  169.477,
                  -46.561
                ],
                [
                  169.468,
                  -46.581
                ],
                [
                  169.433,
                  -46.592
                ],
                [
                  169.438,
                  -46.613
                ],
                [
                  169.379,
                  -46.607
                ],
                [
                  169.36,
                  -46.637
                ],
                [
                  169.281,
                  -46.622
                ],
                [
                  169.265,
                  -46.586
                ],
                [
                  169.191,
                  -46.557
                ],
                [
                  169.226,
                  -46.55
                ],
                [
                  169.251,
                  -46.514
                ],
                [
                  169.173,
                  -46.487
                ],
                [
                  169.163,
                  -46.458
                ],
                [
                  169.197,
                  -46.439
                ],
                [
                  169.196,
                  -46.404
                ],
                [
                  169.134,
                  -46.375
                ],
                [
                  169.142,
                  -46.353
                ],
                [
                  169.191,
                  -46.326
                ],
                [
                  169.177,
                  -46.322
                ],
                [
                  169.197,
                  -46.304
                ],
                [
                  169.177,
                  -46.286
                ],
                [
                  169.198,
                  -46.2
                ],
                [
                  169.167,
                  -46.192
                ],
                [
                  169.161,
                  -46.152
                ],
                [
                  169.13,
                  -46.148
                ],
                [
                  169.163,
                  -46.117
                ],
                [
                  169.163,
                  -46.096
                ],
                [
                  169.136,
                  -46.085
                ],
                [
                  169.158,
                  -46.068
                ],
                [
                  169.153,
                  -46.049
                ],
                [
                  169.103,
                  -46.036
                ],
                [
                  169.08,
                  -46.008
                ],
                [
                  169.073,
                  -46.002
                ],
                [
                  169.067,
                  -45.985
                ],
                [
                  169.1,
                  -45.948
                ],
                [
                  169.073,
                  -45.925
                ],
                [
                  169.099,
                  -45.884
                ],
                [
                  169.057,
                  -45.85
                ],
                [
                  169.05,
                  -45.864
                ],
                [
                  169.005,
                  -45.863
                ],
                [
                  169.029,
                  -45.809
                ],
                [
                  169.003,
                  -45.796
                ],
                [
                  168.993,
                  -45.729
                ],
                [
                  169.025,
                  -45.66
                ],
                [
                  169.059,
                  -45.641
                ],
                [
                  169.13,
                  -45.525
                ],
                [
                  169.147,
                  -45.45
                ],
                [
                  169.172,
                  -45.44
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 32,
          RTO2017_V1: "32",
          RTO2017__1: "Dunedin",
          Shape_STAr: 335040742977e-2,
          Shape_STLe: 437318.94318
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  170.217,
                  -45.235
                ],
                [
                  170.314,
                  -45.24
                ],
                [
                  170.314,
                  -45.268
                ],
                [
                  170.394,
                  -45.269
                ],
                [
                  170.423,
                  -45.295
                ],
                [
                  170.395,
                  -45.328
                ],
                [
                  170.325,
                  -45.324
                ],
                [
                  170.325,
                  -45.362
                ],
                [
                  170.284,
                  -45.35
                ],
                [
                  170.285,
                  -45.444
                ],
                [
                  170.209,
                  -45.482
                ],
                [
                  170.209,
                  -45.507
                ],
                [
                  170.31,
                  -45.498
                ],
                [
                  170.359,
                  -45.521
                ],
                [
                  170.342,
                  -45.546
                ],
                [
                  170.377,
                  -45.555
                ],
                [
                  170.419,
                  -45.519
                ],
                [
                  170.476,
                  -45.533
                ],
                [
                  170.482,
                  -45.509
                ],
                [
                  170.553,
                  -45.509
                ],
                [
                  170.562,
                  -45.554
                ],
                [
                  170.584,
                  -45.571
                ],
                [
                  170.716,
                  -45.559
                ],
                [
                  170.727,
                  -45.569
                ],
                [
                  170.725,
                  -45.596
                ],
                [
                  170.667,
                  -45.621
                ],
                [
                  170.674,
                  -45.64
                ],
                [
                  170.615,
                  -45.691
                ],
                [
                  170.594,
                  -45.735
                ],
                [
                  170.742,
                  -45.779
                ],
                [
                  170.751,
                  -45.805
                ],
                [
                  170.731,
                  -45.846
                ],
                [
                  170.749,
                  -45.846
                ],
                [
                  170.751,
                  -45.868
                ],
                [
                  170.73,
                  -45.882
                ],
                [
                  170.683,
                  -45.881
                ],
                [
                  170.663,
                  -45.904
                ],
                [
                  170.506,
                  -45.91
                ],
                [
                  170.342,
                  -45.943
                ],
                [
                  170.29,
                  -45.968
                ],
                [
                  170.204,
                  -46.052
                ],
                [
                  170.16,
                  -45.996
                ],
                [
                  170.107,
                  -45.986
                ],
                [
                  170.127,
                  -45.96
                ],
                [
                  170.1,
                  -45.951
                ],
                [
                  170.095,
                  -45.932
                ],
                [
                  170.021,
                  -45.924
                ],
                [
                  170.022,
                  -45.855
                ],
                [
                  170.05,
                  -45.855
                ],
                [
                  170.051,
                  -45.779
                ],
                [
                  170.011,
                  -45.771
                ],
                [
                  169.994,
                  -45.751
                ],
                [
                  169.976,
                  -45.756
                ],
                [
                  169.946,
                  -45.721
                ],
                [
                  169.919,
                  -45.714
                ],
                [
                  169.891,
                  -45.758
                ],
                [
                  169.857,
                  -45.753
                ],
                [
                  169.797,
                  -45.778
                ],
                [
                  169.759,
                  -45.761
                ],
                [
                  169.739,
                  -45.72
                ],
                [
                  169.796,
                  -45.642
                ],
                [
                  169.814,
                  -45.561
                ],
                [
                  169.906,
                  -45.542
                ],
                [
                  169.906,
                  -45.497
                ],
                [
                  170.03,
                  -45.476
                ],
                [
                  170.128,
                  -45.38
                ],
                [
                  170.12,
                  -45.353
                ],
                [
                  170.156,
                  -45.328
                ],
                [
                  170.186,
                  -45.265
                ],
                [
                  170.216,
                  -45.257
                ],
                [
                  170.217,
                  -45.235
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 21,
          RTO2017_V1: "21",
          RTO2017__1: "Nelson Tasman",
          Shape_STAr: 15247464917299997e-6,
          Shape_STLe: 852638.110237
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  172.739,
                  -40.301
                ],
                [
                  172.926,
                  -40.311
                ],
                [
                  173.097,
                  -40.346
                ],
                [
                  173.248,
                  -40.43
                ],
                [
                  173.328,
                  -40.525
                ],
                [
                  173.34,
                  -40.62
                ],
                [
                  173.289,
                  -40.749
                ],
                [
                  173.361,
                  -40.805
                ],
                [
                  173.206,
                  -41.299
                ],
                [
                  173.323,
                  -41.203
                ],
                [
                  173.416,
                  -41.159
                ],
                [
                  173.417,
                  -41.136
                ],
                [
                  173.436,
                  -41.14
                ],
                [
                  173.439,
                  -41.161
                ],
                [
                  173.483,
                  -41.157
                ],
                [
                  173.514,
                  -41.104
                ],
                [
                  173.547,
                  -41.097
                ],
                [
                  173.593,
                  -41.036
                ],
                [
                  173.574,
                  -41.184
                ],
                [
                  173.476,
                  -41.229
                ],
                [
                  173.416,
                  -41.289
                ],
                [
                  173.407,
                  -41.331
                ],
                [
                  173.361,
                  -41.353
                ],
                [
                  173.338,
                  -41.386
                ],
                [
                  173.285,
                  -41.403
                ],
                [
                  173.295,
                  -41.426
                ],
                [
                  173.251,
                  -41.467
                ],
                [
                  173.299,
                  -41.516
                ],
                [
                  173.172,
                  -41.524
                ],
                [
                  173.151,
                  -41.586
                ],
                [
                  173.089,
                  -41.624
                ],
                [
                  173.059,
                  -41.626
                ],
                [
                  173.057,
                  -41.668
                ],
                [
                  173.004,
                  -41.725
                ],
                [
                  172.958,
                  -41.75
                ],
                [
                  172.926,
                  -41.748
                ],
                [
                  172.946,
                  -41.781
                ],
                [
                  172.891,
                  -41.818
                ],
                [
                  172.868,
                  -41.866
                ],
                [
                  172.848,
                  -41.874
                ],
                [
                  172.865,
                  -41.909
                ],
                [
                  172.847,
                  -41.942
                ],
                [
                  172.808,
                  -41.958
                ],
                [
                  172.757,
                  -42.036
                ],
                [
                  172.733,
                  -42.035
                ],
                [
                  172.721,
                  -42.103
                ],
                [
                  172.691,
                  -42.107
                ],
                [
                  172.678,
                  -42.088
                ],
                [
                  172.636,
                  -42.102
                ],
                [
                  172.641,
                  -42.133
                ],
                [
                  172.61,
                  -42.166
                ],
                [
                  172.616,
                  -42.194
                ],
                [
                  172.559,
                  -42.22
                ],
                [
                  172.515,
                  -42.264
                ],
                [
                  172.479,
                  -42.277
                ],
                [
                  172.454,
                  -42.275
                ],
                [
                  172.431,
                  -42.306
                ],
                [
                  172.348,
                  -42.277
                ],
                [
                  172.333,
                  -42.149
                ],
                [
                  172.252,
                  -42.15
                ],
                [
                  172.248,
                  -42.132
                ],
                [
                  172.221,
                  -42.132
                ],
                [
                  172.206,
                  -42.115
                ],
                [
                  172.207,
                  -42.098
                ],
                [
                  172.135,
                  -42.104
                ],
                [
                  172.105,
                  -42.049
                ],
                [
                  172.12,
                  -42.015
                ],
                [
                  172.071,
                  -41.999
                ],
                [
                  172.052,
                  -41.945
                ],
                [
                  172.077,
                  -41.92
                ],
                [
                  172.065,
                  -41.894
                ],
                [
                  172.116,
                  -41.868
                ],
                [
                  172.116,
                  -41.789
                ],
                [
                  172.097,
                  -41.774
                ],
                [
                  172.127,
                  -41.716
                ],
                [
                  172.213,
                  -41.689
                ],
                [
                  172.251,
                  -41.703
                ],
                [
                  172.237,
                  -41.64
                ],
                [
                  172.264,
                  -41.627
                ],
                [
                  172.291,
                  -41.635
                ],
                [
                  172.328,
                  -41.603
                ],
                [
                  172.343,
                  -41.512
                ],
                [
                  172.419,
                  -41.471
                ],
                [
                  172.431,
                  -41.429
                ],
                [
                  172.416,
                  -41.412
                ],
                [
                  172.461,
                  -41.394
                ],
                [
                  172.512,
                  -41.413
                ],
                [
                  172.584,
                  -41.376
                ],
                [
                  172.6,
                  -41.301
                ],
                [
                  172.575,
                  -41.258
                ],
                [
                  172.658,
                  -41.239
                ],
                [
                  172.692,
                  -41.2
                ],
                [
                  172.673,
                  -41.188
                ],
                [
                  172.629,
                  -41.195
                ],
                [
                  172.618,
                  -41.16
                ],
                [
                  172.553,
                  -41.103
                ],
                [
                  172.52,
                  -41.096
                ],
                [
                  172.513,
                  -41.067
                ],
                [
                  172.492,
                  -41.065
                ],
                [
                  172.492,
                  -41.023
                ],
                [
                  172.44,
                  -41.02
                ],
                [
                  172.419,
                  -41.034
                ],
                [
                  172.383,
                  -41.023
                ],
                [
                  172.35,
                  -41.063
                ],
                [
                  172.325,
                  -41.06
                ],
                [
                  172.334,
                  -41.035
                ],
                [
                  172.311,
                  -41.012
                ],
                [
                  172.386,
                  -40.95
                ],
                [
                  172.377,
                  -40.935
                ],
                [
                  172.298,
                  -40.922
                ],
                [
                  172.282,
                  -40.899
                ],
                [
                  172.288,
                  -40.875
                ],
                [
                  172.262,
                  -40.859
                ],
                [
                  172.234,
                  -40.869
                ],
                [
                  172.249,
                  -40.807
                ],
                [
                  172.218,
                  -40.775
                ],
                [
                  172.031,
                  -40.628
                ],
                [
                  172.134,
                  -40.582
                ],
                [
                  172.274,
                  -40.476
                ],
                [
                  172.498,
                  -40.34
                ],
                [
                  172.616,
                  -40.304
                ],
                [
                  172.739,
                  -40.301
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 12,
          RTO2017_V1: "12",
          RTO2017__1: "Taranaki",
          Shape_STAr: 794407718983e-2,
          Shape_STLe: 565800.35437
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  174.614,
                  -38.707
                ],
                [
                  174.617,
                  -38.723
                ],
                [
                  174.647,
                  -38.721
                ],
                [
                  174.654,
                  -38.733
                ],
                [
                  174.687,
                  -38.728
                ],
                [
                  174.756,
                  -38.745
                ],
                [
                  174.794,
                  -38.731
                ],
                [
                  174.863,
                  -38.775
                ],
                [
                  174.82,
                  -38.787
                ],
                [
                  174.808,
                  -38.82
                ],
                [
                  174.787,
                  -38.821
                ],
                [
                  174.828,
                  -38.91
                ],
                [
                  174.857,
                  -38.889
                ],
                [
                  174.884,
                  -38.913
                ],
                [
                  174.871,
                  -38.928
                ],
                [
                  174.885,
                  -38.969
                ],
                [
                  174.869,
                  -38.989
                ],
                [
                  174.911,
                  -38.989
                ],
                [
                  174.915,
                  -39.011
                ],
                [
                  174.96,
                  -38.995
                ],
                [
                  174.977,
                  -39.042
                ],
                [
                  174.963,
                  -39.066
                ],
                [
                  175.047,
                  -39.07
                ],
                [
                  175.07,
                  -39.106
                ],
                [
                  174.998,
                  -39.111
                ],
                [
                  175,
                  -39.129
                ],
                [
                  174.983,
                  -39.112
                ],
                [
                  174.984,
                  -39.155
                ],
                [
                  174.95,
                  -39.163
                ],
                [
                  174.959,
                  -39.171
                ],
                [
                  174.914,
                  -39.234
                ],
                [
                  174.896,
                  -39.227
                ],
                [
                  174.86,
                  -39.232
                ],
                [
                  174.813,
                  -39.314
                ],
                [
                  174.823,
                  -39.334
                ],
                [
                  174.892,
                  -39.358
                ],
                [
                  174.879,
                  -39.39
                ],
                [
                  174.866,
                  -39.389
                ],
                [
                  174.885,
                  -39.435
                ],
                [
                  174.928,
                  -39.476
                ],
                [
                  174.967,
                  -39.485
                ],
                [
                  174.97,
                  -39.525
                ],
                [
                  174.992,
                  -39.54
                ],
                [
                  174.968,
                  -39.605
                ],
                [
                  174.988,
                  -39.665
                ],
                [
                  174.93,
                  -39.683
                ],
                [
                  174.923,
                  -39.743
                ],
                [
                  174.888,
                  -39.751
                ],
                [
                  174.835,
                  -39.8
                ],
                [
                  174.803,
                  -39.803
                ],
                [
                  174.766,
                  -39.853
                ],
                [
                  174.784,
                  -39.858
                ],
                [
                  174.78,
                  -39.862
                ],
                [
                  174.734,
                  -39.869
                ],
                [
                  174.535,
                  -39.805
                ],
                [
                  174.418,
                  -39.732
                ],
                [
                  174.353,
                  -39.659
                ],
                [
                  174.297,
                  -39.626
                ],
                [
                  174.202,
                  -39.588
                ],
                [
                  173.987,
                  -39.554
                ],
                [
                  173.911,
                  -39.519
                ],
                [
                  173.793,
                  -39.413
                ],
                [
                  173.752,
                  -39.281
                ],
                [
                  173.792,
                  -39.193
                ],
                [
                  173.911,
                  -39.12
                ],
                [
                  174.004,
                  -39.085
                ],
                [
                  174.029,
                  -39.054
                ],
                [
                  174.089,
                  -39.051
                ],
                [
                  174.201,
                  -38.988
                ],
                [
                  174.365,
                  -38.993
                ],
                [
                  174.438,
                  -38.963
                ],
                [
                  174.593,
                  -38.817
                ],
                [
                  174.614,
                  -38.707
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 28,
          RTO2017_V1: "28",
          RTO2017__1: "Waitaki",
          Shape_STAr: 721664739404e-2,
          Shape_STLe: 736526.419767
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  169.964,
                  -43.792
                ],
                [
                  169.827,
                  -43.96
                ],
                [
                  169.816,
                  -44.029
                ],
                [
                  169.875,
                  -44.103
                ],
                [
                  169.842,
                  -44.15
                ],
                [
                  169.877,
                  -44.19
                ],
                [
                  169.879,
                  -44.259
                ],
                [
                  169.951,
                  -44.285
                ],
                [
                  170.001,
                  -44.261
                ],
                [
                  170.165,
                  -44.32
                ],
                [
                  170.205,
                  -44.351
                ],
                [
                  170.22,
                  -44.466
                ],
                [
                  170.219,
                  -44.486
                ],
                [
                  170.197,
                  -44.497
                ],
                [
                  170.209,
                  -44.535
                ],
                [
                  170.192,
                  -44.542
                ],
                [
                  170.209,
                  -44.552
                ],
                [
                  170.191,
                  -44.588
                ],
                [
                  170.238,
                  -44.615
                ],
                [
                  170.274,
                  -44.612
                ],
                [
                  170.36,
                  -44.666
                ],
                [
                  170.378,
                  -44.662
                ],
                [
                  170.453,
                  -44.701
                ],
                [
                  170.582,
                  -44.814
                ],
                [
                  170.856,
                  -44.895
                ],
                [
                  171.144,
                  -44.94
                ],
                [
                  171.082,
                  -45.021
                ],
                [
                  170.978,
                  -45.094
                ],
                [
                  170.983,
                  -45.121
                ],
                [
                  170.906,
                  -45.172
                ],
                [
                  170.824,
                  -45.327
                ],
                [
                  170.836,
                  -45.359
                ],
                [
                  170.863,
                  -45.357
                ],
                [
                  170.869,
                  -45.396
                ],
                [
                  170.826,
                  -45.413
                ],
                [
                  170.809,
                  -45.452
                ],
                [
                  170.831,
                  -45.473
                ],
                [
                  170.727,
                  -45.569
                ],
                [
                  170.716,
                  -45.559
                ],
                [
                  170.584,
                  -45.571
                ],
                [
                  170.562,
                  -45.554
                ],
                [
                  170.553,
                  -45.509
                ],
                [
                  170.482,
                  -45.509
                ],
                [
                  170.476,
                  -45.533
                ],
                [
                  170.419,
                  -45.519
                ],
                [
                  170.377,
                  -45.555
                ],
                [
                  170.342,
                  -45.546
                ],
                [
                  170.359,
                  -45.521
                ],
                [
                  170.31,
                  -45.498
                ],
                [
                  170.209,
                  -45.507
                ],
                [
                  170.209,
                  -45.482
                ],
                [
                  170.285,
                  -45.444
                ],
                [
                  170.284,
                  -45.35
                ],
                [
                  170.325,
                  -45.362
                ],
                [
                  170.325,
                  -45.324
                ],
                [
                  170.395,
                  -45.328
                ],
                [
                  170.423,
                  -45.295
                ],
                [
                  170.394,
                  -45.269
                ],
                [
                  170.314,
                  -45.268
                ],
                [
                  170.314,
                  -45.24
                ],
                [
                  170.35,
                  -45.241
                ],
                [
                  170.383,
                  -45.212
                ],
                [
                  170.364,
                  -45.187
                ],
                [
                  170.412,
                  -45.176
                ],
                [
                  170.439,
                  -45.134
                ],
                [
                  170.404,
                  -45.123
                ],
                [
                  170.398,
                  -45.081
                ],
                [
                  170.349,
                  -45.022
                ],
                [
                  170.347,
                  -44.99
                ],
                [
                  170.373,
                  -44.952
                ],
                [
                  170.349,
                  -44.943
                ],
                [
                  170.351,
                  -44.909
                ],
                [
                  170.319,
                  -44.903
                ],
                [
                  170.302,
                  -44.92
                ],
                [
                  170.252,
                  -44.919
                ],
                [
                  170.164,
                  -44.946
                ],
                [
                  170.094,
                  -44.94
                ],
                [
                  170.069,
                  -44.923
                ],
                [
                  170.082,
                  -44.912
                ],
                [
                  170.064,
                  -44.884
                ],
                [
                  170.031,
                  -44.87
                ],
                [
                  169.998,
                  -44.825
                ],
                [
                  169.944,
                  -44.654
                ],
                [
                  169.891,
                  -44.644
                ],
                [
                  169.836,
                  -44.669
                ],
                [
                  169.806,
                  -44.661
                ],
                [
                  169.755,
                  -44.639
                ],
                [
                  169.731,
                  -44.565
                ],
                [
                  169.709,
                  -44.601
                ],
                [
                  169.641,
                  -44.596
                ],
                [
                  169.663,
                  -44.537
                ],
                [
                  169.634,
                  -44.502
                ],
                [
                  169.642,
                  -44.466
                ],
                [
                  169.542,
                  -44.449
                ],
                [
                  169.579,
                  -44.34
                ],
                [
                  169.581,
                  -44.252
                ],
                [
                  169.543,
                  -44.207
                ],
                [
                  169.606,
                  -44.159
                ],
                [
                  169.665,
                  -44.068
                ],
                [
                  169.682,
                  -44.068
                ],
                [
                  169.686,
                  -44.042
                ],
                [
                  169.719,
                  -44.037
                ],
                [
                  169.699,
                  -43.964
                ],
                [
                  169.758,
                  -43.934
                ],
                [
                  169.771,
                  -43.899
                ],
                [
                  169.838,
                  -43.867
                ],
                [
                  169.858,
                  -43.837
                ],
                [
                  169.894,
                  -43.834
                ],
                [
                  169.9,
                  -43.813
                ],
                [
                  169.964,
                  -43.792
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 31,
          RTO2017_V1: "31",
          RTO2017__1: "Queenstown",
          Shape_STAr: 479096284283e-2,
          Shape_STLe: 410196.030838
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  168.706,
                  -44.402
                ],
                [
                  168.548,
                  -44.538
                ],
                [
                  168.804,
                  -44.523
                ],
                [
                  168.836,
                  -44.601
                ],
                [
                  168.874,
                  -44.632
                ],
                [
                  168.864,
                  -44.675
                ],
                [
                  168.817,
                  -44.699
                ],
                [
                  168.845,
                  -44.805
                ],
                [
                  168.871,
                  -44.795
                ],
                [
                  168.912,
                  -44.81
                ],
                [
                  168.895,
                  -44.832
                ],
                [
                  168.946,
                  -44.857
                ],
                [
                  168.944,
                  -44.902
                ],
                [
                  169.056,
                  -44.919
                ],
                [
                  169.044,
                  -44.967
                ],
                [
                  169.071,
                  -45.002
                ],
                [
                  169.039,
                  -45.035
                ],
                [
                  169.043,
                  -45.061
                ],
                [
                  168.993,
                  -45.05
                ],
                [
                  168.887,
                  -45.072
                ],
                [
                  168.851,
                  -45.05
                ],
                [
                  168.825,
                  -45.06
                ],
                [
                  168.841,
                  -45.141
                ],
                [
                  168.824,
                  -45.181
                ],
                [
                  168.851,
                  -45.238
                ],
                [
                  168.809,
                  -45.327
                ],
                [
                  168.773,
                  -45.363
                ],
                [
                  168.691,
                  -45.338
                ],
                [
                  168.672,
                  -45.243
                ],
                [
                  168.539,
                  -45.309
                ],
                [
                  168.461,
                  -45.325
                ],
                [
                  168.323,
                  -45.328
                ],
                [
                  168.288,
                  -45.245
                ],
                [
                  168.3,
                  -45.221
                ],
                [
                  168.252,
                  -45.2
                ],
                [
                  168.239,
                  -45.154
                ],
                [
                  168.217,
                  -45.144
                ],
                [
                  168.284,
                  -45.106
                ],
                [
                  168.291,
                  -45.04
                ],
                [
                  168.31,
                  -45.026
                ],
                [
                  168.296,
                  -45.014
                ],
                [
                  168.249,
                  -45.027
                ],
                [
                  168.222,
                  -45.017
                ],
                [
                  168.132,
                  -44.939
                ],
                [
                  168.116,
                  -44.881
                ],
                [
                  168.127,
                  -44.829
                ],
                [
                  168.168,
                  -44.828
                ],
                [
                  168.205,
                  -44.746
                ],
                [
                  168.182,
                  -44.745
                ],
                [
                  168.169,
                  -44.722
                ],
                [
                  168.192,
                  -44.681
                ],
                [
                  168.185,
                  -44.646
                ],
                [
                  168.237,
                  -44.577
                ],
                [
                  168.235,
                  -44.543
                ],
                [
                  168.29,
                  -44.496
                ],
                [
                  168.335,
                  -44.497
                ],
                [
                  168.461,
                  -44.495
                ],
                [
                  168.524,
                  -44.46
                ],
                [
                  168.586,
                  -44.454
                ],
                [
                  168.687,
                  -44.392
                ],
                [
                  168.706,
                  -44.402
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 24,
          RTO2017_V1: "24",
          RTO2017__1: "Canterbury",
          Shape_STAr: 252226013482e-1,
          Shape_STLe: 104013740516e-5
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  172.691,
                  -42.107
                ],
                [
                  172.721,
                  -42.103
                ],
                [
                  172.722,
                  -42.159
                ],
                [
                  172.794,
                  -42.162
                ],
                [
                  172.807,
                  -42.189
                ],
                [
                  172.832,
                  -42.184
                ],
                [
                  172.827,
                  -42.248
                ],
                [
                  172.863,
                  -42.256
                ],
                [
                  172.847,
                  -42.308
                ],
                [
                  172.87,
                  -42.318
                ],
                [
                  172.914,
                  -42.309
                ],
                [
                  172.92,
                  -42.346
                ],
                [
                  172.944,
                  -42.351
                ],
                [
                  172.941,
                  -42.378
                ],
                [
                  173.003,
                  -42.393
                ],
                [
                  172.97,
                  -42.449
                ],
                [
                  173.014,
                  -42.446
                ],
                [
                  173.053,
                  -42.488
                ],
                [
                  173.106,
                  -42.448
                ],
                [
                  173.152,
                  -42.45
                ],
                [
                  173.164,
                  -42.419
                ],
                [
                  173.221,
                  -42.38
                ],
                [
                  173.243,
                  -42.356
                ],
                [
                  173.298,
                  -42.37
                ],
                [
                  173.32,
                  -42.35
                ],
                [
                  173.37,
                  -42.34
                ],
                [
                  173.379,
                  -42.405
                ],
                [
                  173.4,
                  -42.425
                ],
                [
                  173.441,
                  -42.47
                ],
                [
                  173.428,
                  -42.515
                ],
                [
                  173.395,
                  -42.503
                ],
                [
                  173.38,
                  -42.514
                ],
                [
                  173.449,
                  -42.543
                ],
                [
                  173.465,
                  -42.536
                ],
                [
                  173.501,
                  -42.566
                ],
                [
                  173.368,
                  -42.799
                ],
                [
                  173.313,
                  -42.852
                ],
                [
                  173.318,
                  -42.885
                ],
                [
                  173.24,
                  -42.954
                ],
                [
                  173.14,
                  -42.99
                ],
                [
                  173.081,
                  -43.051
                ],
                [
                  173.044,
                  -43.047
                ],
                [
                  172.817,
                  -43.133
                ],
                [
                  172.721,
                  -43.291
                ],
                [
                  172.715,
                  -43.447
                ],
                [
                  172.756,
                  -43.561
                ],
                [
                  172.827,
                  -43.604
                ],
                [
                  172.879,
                  -43.609
                ],
                [
                  172.881,
                  -43.625
                ],
                [
                  172.902,
                  -43.617
                ],
                [
                  172.904,
                  -43.633
                ],
                [
                  172.932,
                  -43.623
                ],
                [
                  172.961,
                  -43.648
                ],
                [
                  172.978,
                  -43.633
                ],
                [
                  173.048,
                  -43.652
                ],
                [
                  173.035,
                  -43.662
                ],
                [
                  173.102,
                  -43.696
                ],
                [
                  173.099,
                  -43.72
                ],
                [
                  173.13,
                  -43.747
                ],
                [
                  173.127,
                  -43.776
                ],
                [
                  173.108,
                  -43.775
                ],
                [
                  173.113,
                  -43.799
                ],
                [
                  173.096,
                  -43.808
                ],
                [
                  173.103,
                  -43.833
                ],
                [
                  173.085,
                  -43.832
                ],
                [
                  173.078,
                  -43.853
                ],
                [
                  173.056,
                  -43.838
                ],
                [
                  173.063,
                  -43.85
                ],
                [
                  173.04,
                  -43.855
                ],
                [
                  173.037,
                  -43.873
                ],
                [
                  173.003,
                  -43.869
                ],
                [
                  173.012,
                  -43.883
                ],
                [
                  172.996,
                  -43.887
                ],
                [
                  172.997,
                  -43.882
                ],
                [
                  172.993,
                  -43.872
                ],
                [
                  172.983,
                  -43.889
                ],
                [
                  172.93,
                  -43.902
                ],
                [
                  172.868,
                  -43.894
                ],
                [
                  172.857,
                  -43.876
                ],
                [
                  172.827,
                  -43.888
                ],
                [
                  172.84,
                  -43.875
                ],
                [
                  172.812,
                  -43.88
                ],
                [
                  172.824,
                  -43.869
                ],
                [
                  172.822,
                  -43.859
                ],
                [
                  172.807,
                  -43.874
                ],
                [
                  172.803,
                  -43.862
                ],
                [
                  172.782,
                  -43.868
                ],
                [
                  172.785,
                  -43.85
                ],
                [
                  172.745,
                  -43.854
                ],
                [
                  172.729,
                  -43.827
                ],
                [
                  172.317,
                  -43.867
                ],
                [
                  172.028,
                  -43.958
                ],
                [
                  171.64,
                  -44.12
                ],
                [
                  171.507,
                  -44.189
                ],
                [
                  171.484,
                  -44.112
                ],
                [
                  171.309,
                  -43.986
                ],
                [
                  171.237,
                  -43.766
                ],
                [
                  171.181,
                  -43.733
                ],
                [
                  171.145,
                  -43.738
                ],
                [
                  170.973,
                  -43.672
                ],
                [
                  170.854,
                  -43.532
                ],
                [
                  170.763,
                  -43.512
                ],
                [
                  170.685,
                  -43.451
                ],
                [
                  170.597,
                  -43.464
                ],
                [
                  170.615,
                  -43.432
                ],
                [
                  170.656,
                  -43.387
                ],
                [
                  170.647,
                  -43.369
                ],
                [
                  170.677,
                  -43.348
                ],
                [
                  170.716,
                  -43.343
                ],
                [
                  170.706,
                  -43.319
                ],
                [
                  170.76,
                  -43.318
                ],
                [
                  170.86,
                  -43.281
                ],
                [
                  170.873,
                  -43.246
                ],
                [
                  170.929,
                  -43.207
                ],
                [
                  170.948,
                  -43.206
                ],
                [
                  170.948,
                  -43.227
                ],
                [
                  170.992,
                  -43.218
                ],
                [
                  171.02,
                  -43.175
                ],
                [
                  171.047,
                  -43.164
                ],
                [
                  171.037,
                  -43.146
                ],
                [
                  171.085,
                  -43.101
                ],
                [
                  171.107,
                  -43.111
                ],
                [
                  171.129,
                  -43.081
                ],
                [
                  171.22,
                  -43.065
                ],
                [
                  171.238,
                  -43.003
                ],
                [
                  171.308,
                  -42.966
                ],
                [
                  171.314,
                  -42.948
                ],
                [
                  171.362,
                  -42.937
                ],
                [
                  171.393,
                  -42.943
                ],
                [
                  171.396,
                  -42.959
                ],
                [
                  171.438,
                  -42.936
                ],
                [
                  171.442,
                  -42.914
                ],
                [
                  171.469,
                  -42.914
                ],
                [
                  171.491,
                  -42.896
                ],
                [
                  171.517,
                  -42.914
                ],
                [
                  171.587,
                  -42.896
                ],
                [
                  171.634,
                  -42.903
                ],
                [
                  171.665,
                  -42.886
                ],
                [
                  171.687,
                  -42.906
                ],
                [
                  171.71,
                  -42.904
                ],
                [
                  171.746,
                  -42.874
                ],
                [
                  171.733,
                  -42.853
                ],
                [
                  171.763,
                  -42.837
                ],
                [
                  171.764,
                  -42.792
                ],
                [
                  171.813,
                  -42.79
                ],
                [
                  171.884,
                  -42.75
                ],
                [
                  171.885,
                  -42.719
                ],
                [
                  171.926,
                  -42.666
                ],
                [
                  171.972,
                  -42.653
                ],
                [
                  171.974,
                  -42.639
                ],
                [
                  172.094,
                  -42.621
                ],
                [
                  172.108,
                  -42.58
                ],
                [
                  172.178,
                  -42.536
                ],
                [
                  172.187,
                  -42.504
                ],
                [
                  172.236,
                  -42.456
                ],
                [
                  172.279,
                  -42.45
                ],
                [
                  172.347,
                  -42.392
                ],
                [
                  172.417,
                  -42.384
                ],
                [
                  172.443,
                  -42.367
                ],
                [
                  172.479,
                  -42.277
                ],
                [
                  172.515,
                  -42.264
                ],
                [
                  172.559,
                  -42.22
                ],
                [
                  172.616,
                  -42.194
                ],
                [
                  172.61,
                  -42.166
                ],
                [
                  172.641,
                  -42.133
                ],
                [
                  172.636,
                  -42.102
                ],
                [
                  172.678,
                  -42.088
                ],
                [
                  172.691,
                  -42.107
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 3,
          RTO2017_V1: "03",
          RTO2017__1: "Waikato",
          Shape_STAr: 152839372949e-1,
          Shape_STLe: 825529.815225
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.161,
                  -37.016
                ],
                [
                  175.185,
                  -37.041
                ],
                [
                  175.267,
                  -37.033
                ],
                [
                  175.262,
                  -37.066
                ],
                [
                  175.24,
                  -37.067
                ],
                [
                  175.251,
                  -37.11
                ],
                [
                  175.217,
                  -37.117
                ],
                [
                  175.243,
                  -37.14
                ],
                [
                  175.258,
                  -37.136
                ],
                [
                  175.264,
                  -37.192
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.306,
                  -37.251
                ],
                [
                  175.384,
                  -37.374
                ],
                [
                  175.396,
                  -37.439
                ],
                [
                  175.412,
                  -37.425
                ],
                [
                  175.409,
                  -37.438
                ],
                [
                  175.437,
                  -37.45
                ],
                [
                  175.521,
                  -37.42
                ],
                [
                  175.631,
                  -37.419
                ],
                [
                  175.64,
                  -37.454
                ],
                [
                  175.672,
                  -37.451
                ],
                [
                  175.706,
                  -37.469
                ],
                [
                  175.706,
                  -37.459
                ],
                [
                  175.755,
                  -37.463
                ],
                [
                  175.743,
                  -37.533
                ],
                [
                  175.765,
                  -37.523
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.841,
                  -37.642
                ],
                [
                  175.928,
                  -37.776
                ],
                [
                  175.906,
                  -37.829
                ],
                [
                  175.935,
                  -37.843
                ],
                [
                  175.936,
                  -37.881
                ],
                [
                  175.972,
                  -37.883
                ],
                [
                  175.954,
                  -37.902
                ],
                [
                  175.977,
                  -37.914
                ],
                [
                  175.941,
                  -37.93
                ],
                [
                  175.971,
                  -37.986
                ],
                [
                  176.013,
                  -37.993
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  175.982,
                  -38.139
                ],
                [
                  176.031,
                  -38.139
                ],
                [
                  176.031,
                  -38.167
                ],
                [
                  176.11,
                  -38.167
                ],
                [
                  176.15,
                  -38.218
                ],
                [
                  176.116,
                  -38.269
                ],
                [
                  176.129,
                  -38.273
                ],
                [
                  176.109,
                  -38.276
                ],
                [
                  176.138,
                  -38.288
                ],
                [
                  176.126,
                  -38.309
                ],
                [
                  176.059,
                  -38.334
                ],
                [
                  176.024,
                  -38.365
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  175.957,
                  -38.422
                ],
                [
                  175.824,
                  -38.438
                ],
                [
                  175.77,
                  -38.396
                ],
                [
                  175.781,
                  -38.362
                ],
                [
                  175.674,
                  -38.304
                ],
                [
                  175.66,
                  -38.319
                ],
                [
                  175.689,
                  -38.333
                ],
                [
                  175.699,
                  -38.379
                ],
                [
                  175.611,
                  -38.442
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.605,
                  -38.585
                ],
                [
                  175.542,
                  -38.598
                ],
                [
                  175.501,
                  -38.559
                ],
                [
                  175.446,
                  -38.565
                ],
                [
                  175.421,
                  -38.551
                ],
                [
                  175.336,
                  -38.582
                ],
                [
                  175.325,
                  -38.551
                ],
                [
                  175.3,
                  -38.601
                ],
                [
                  175.285,
                  -38.588
                ],
                [
                  175.213,
                  -38.639
                ],
                [
                  175.116,
                  -38.622
                ],
                [
                  175,
                  -38.666
                ],
                [
                  174.957,
                  -38.665
                ],
                [
                  174.964,
                  -38.697
                ],
                [
                  174.935,
                  -38.731
                ],
                [
                  174.938,
                  -38.75
                ],
                [
                  174.863,
                  -38.775
                ],
                [
                  174.794,
                  -38.731
                ],
                [
                  174.754,
                  -38.745
                ],
                [
                  174.687,
                  -38.728
                ],
                [
                  174.654,
                  -38.733
                ],
                [
                  174.613,
                  -38.714
                ],
                [
                  174.646,
                  -38.456
                ],
                [
                  174.635,
                  -38.387
                ],
                [
                  174.657,
                  -38.383
                ],
                [
                  174.716,
                  -38.306
                ],
                [
                  174.714,
                  -38.202
                ],
                [
                  174.681,
                  -38.11
                ],
                [
                  174.734,
                  -38.124
                ],
                [
                  174.782,
                  -38.084
                ],
                [
                  174.786,
                  -38.032
                ],
                [
                  174.81,
                  -38.008
                ],
                [
                  174.796,
                  -38.015
                ],
                [
                  174.78,
                  -37.977
                ],
                [
                  174.757,
                  -37.864
                ],
                [
                  174.777,
                  -37.831
                ],
                [
                  174.825,
                  -37.822
                ],
                [
                  174.839,
                  -37.8
                ],
                [
                  174.81,
                  -37.676
                ],
                [
                  174.748,
                  -37.505
                ],
                [
                  174.705,
                  -37.438
                ],
                [
                  174.71,
                  -37.392
                ],
                [
                  174.659,
                  -37.293
                ],
                [
                  174.7,
                  -37.262
                ],
                [
                  174.739,
                  -37.268
                ],
                [
                  174.806,
                  -37.227
                ],
                [
                  174.848,
                  -37.234
                ],
                [
                  174.85,
                  -37.251
                ],
                [
                  174.887,
                  -37.231
                ],
                [
                  174.931,
                  -37.233
                ],
                [
                  174.93,
                  -37.206
                ],
                [
                  174.948,
                  -37.196
                ],
                [
                  174.973,
                  -37.195
                ],
                [
                  174.99,
                  -37.217
                ],
                [
                  175.054,
                  -37.181
                ],
                [
                  175.074,
                  -37.195
                ],
                [
                  175.09,
                  -37.18
                ],
                [
                  175.133,
                  -37.185
                ],
                [
                  175.154,
                  -37.136
                ],
                [
                  175.141,
                  -37.099
                ],
                [
                  175.161,
                  -37.016
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 4,
          RTO2017_V1: "04",
          RTO2017__1: "Coromandel",
          Shape_STAr: 35688670484e-1,
          Shape_STLe: 778800.419478
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.369,
                  -36.469
                ],
                [
                  175.415,
                  -36.473
                ],
                [
                  175.421,
                  -36.511
                ],
                [
                  175.443,
                  -36.503
                ],
                [
                  175.476,
                  -36.535
                ],
                [
                  175.47,
                  -36.51
                ],
                [
                  175.489,
                  -36.51
                ],
                [
                  175.533,
                  -36.54
                ],
                [
                  175.523,
                  -36.595
                ],
                [
                  175.559,
                  -36.597
                ],
                [
                  175.58,
                  -36.62
                ],
                [
                  175.573,
                  -36.656
                ],
                [
                  175.627,
                  -36.723
                ],
                [
                  175.709,
                  -36.727
                ],
                [
                  175.783,
                  -36.692
                ],
                [
                  175.798,
                  -36.717
                ],
                [
                  175.822,
                  -36.721
                ],
                [
                  175.827,
                  -36.74
                ],
                [
                  175.755,
                  -36.757
                ],
                [
                  175.748,
                  -36.791
                ],
                [
                  175.734,
                  -36.795
                ],
                [
                  175.732,
                  -36.792
                ],
                [
                  175.729,
                  -36.79
                ],
                [
                  175.727,
                  -36.791
                ],
                [
                  175.726,
                  -36.788
                ],
                [
                  175.726,
                  -36.788
                ],
                [
                  175.724,
                  -36.788
                ],
                [
                  175.725,
                  -36.806
                ],
                [
                  175.703,
                  -36.806
                ],
                [
                  175.701,
                  -36.819
                ],
                [
                  175.708,
                  -36.832
                ],
                [
                  175.725,
                  -36.833
                ],
                [
                  175.771,
                  -36.82
                ],
                [
                  175.82,
                  -36.841
                ],
                [
                  175.819,
                  -36.883
                ],
                [
                  175.856,
                  -36.923
                ],
                [
                  175.843,
                  -36.964
                ],
                [
                  175.888,
                  -37.039
                ],
                [
                  175.879,
                  -37.15
                ],
                [
                  175.893,
                  -37.196
                ],
                [
                  175.877,
                  -37.204
                ],
                [
                  175.88,
                  -37.231
                ],
                [
                  175.943,
                  -37.346
                ],
                [
                  175.94,
                  -37.373
                ],
                [
                  175.917,
                  -37.379
                ],
                [
                  175.912,
                  -37.428
                ],
                [
                  175.861,
                  -37.461
                ],
                [
                  175.899,
                  -37.496
                ],
                [
                  175.866,
                  -37.5
                ],
                [
                  175.833,
                  -37.472
                ],
                [
                  175.806,
                  -37.511
                ],
                [
                  175.831,
                  -37.537
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.765,
                  -37.523
                ],
                [
                  175.743,
                  -37.533
                ],
                [
                  175.755,
                  -37.463
                ],
                [
                  175.706,
                  -37.459
                ],
                [
                  175.706,
                  -37.469
                ],
                [
                  175.672,
                  -37.451
                ],
                [
                  175.64,
                  -37.454
                ],
                [
                  175.631,
                  -37.419
                ],
                [
                  175.521,
                  -37.42
                ],
                [
                  175.437,
                  -37.45
                ],
                [
                  175.409,
                  -37.438
                ],
                [
                  175.412,
                  -37.425
                ],
                [
                  175.396,
                  -37.439
                ],
                [
                  175.384,
                  -37.374
                ],
                [
                  175.306,
                  -37.251
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.395,
                  -37.229
                ],
                [
                  175.501,
                  -37.194
                ],
                [
                  175.545,
                  -37.159
                ],
                [
                  175.505,
                  -37.102
                ],
                [
                  175.524,
                  -37.061
                ],
                [
                  175.499,
                  -36.974
                ],
                [
                  175.406,
                  -36.854
                ],
                [
                  175.434,
                  -36.844
                ],
                [
                  175.428,
                  -36.794
                ],
                [
                  175.481,
                  -36.734
                ],
                [
                  175.43,
                  -36.717
                ],
                [
                  175.447,
                  -36.66
                ],
                [
                  175.425,
                  -36.588
                ],
                [
                  175.345,
                  -36.554
                ],
                [
                  175.328,
                  -36.526
                ],
                [
                  175.328,
                  -36.481
                ],
                [
                  175.369,
                  -36.469
                ]
              ]
            ],
            [
              [
                [
                  175.293,
                  -37.034
                ],
                [
                  175.306,
                  -37.092
                ],
                [
                  175.295,
                  -37.123
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.264,
                  -37.192
                ],
                [
                  175.258,
                  -37.136
                ],
                [
                  175.243,
                  -37.14
                ],
                [
                  175.217,
                  -37.117
                ],
                [
                  175.251,
                  -37.11
                ],
                [
                  175.24,
                  -37.067
                ],
                [
                  175.262,
                  -37.066
                ],
                [
                  175.267,
                  -37.033
                ],
                [
                  175.292,
                  -37.031
                ],
                [
                  175.293,
                  -37.034
                ]
              ]
            ],
            [
              [
                [
                  175.789,
                  -36.58
                ],
                [
                  175.79,
                  -36.606
                ],
                [
                  175.834,
                  -36.626
                ],
                [
                  175.823,
                  -36.642
                ],
                [
                  175.776,
                  -36.638
                ],
                [
                  175.787,
                  -36.609
                ],
                [
                  175.773,
                  -36.592
                ],
                [
                  175.769,
                  -36.605
                ],
                [
                  175.752,
                  -36.595
                ],
                [
                  175.789,
                  -36.58
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 10,
          RTO2017_V1: "10",
          RTO2017__1: "Hawke's Bay",
          Shape_STAr: 12795739773400002e-6,
          Shape_STLe: 945189.683298
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  177.122,
                  -38.584
                ],
                [
                  177.308,
                  -38.66
                ],
                [
                  177.309,
                  -38.597
                ],
                [
                  177.353,
                  -38.625
                ],
                [
                  177.448,
                  -38.636
                ],
                [
                  177.409,
                  -38.699
                ],
                [
                  177.429,
                  -38.692
                ],
                [
                  177.466,
                  -38.706
                ],
                [
                  177.47,
                  -38.755
                ],
                [
                  177.531,
                  -38.792
                ],
                [
                  177.531,
                  -38.82
                ],
                [
                  177.561,
                  -38.802
                ],
                [
                  177.593,
                  -38.803
                ],
                [
                  177.6,
                  -38.852
                ],
                [
                  177.626,
                  -38.843
                ],
                [
                  177.637,
                  -38.871
                ],
                [
                  177.662,
                  -38.846
                ],
                [
                  177.66,
                  -38.905
                ],
                [
                  177.722,
                  -38.898
                ],
                [
                  177.729,
                  -38.919
                ],
                [
                  177.749,
                  -38.897
                ],
                [
                  177.776,
                  -38.913
                ],
                [
                  177.799,
                  -38.894
                ],
                [
                  177.805,
                  -38.912
                ],
                [
                  177.845,
                  -38.922
                ],
                [
                  177.837,
                  -38.956
                ],
                [
                  177.899,
                  -38.972
                ],
                [
                  177.886,
                  -39.024
                ],
                [
                  177.902,
                  -39.073
                ],
                [
                  178.001,
                  -39.112
                ],
                [
                  177.925,
                  -39.169
                ],
                [
                  177.906,
                  -39.226
                ],
                [
                  177.865,
                  -39.265
                ],
                [
                  177.822,
                  -39.16
                ],
                [
                  177.872,
                  -39.086
                ],
                [
                  177.843,
                  -39.059
                ],
                [
                  177.823,
                  -39.077
                ],
                [
                  177.661,
                  -39.051
                ],
                [
                  177.419,
                  -39.063
                ],
                [
                  177.259,
                  -39.101
                ],
                [
                  177.046,
                  -39.194
                ],
                [
                  177.019,
                  -39.261
                ],
                [
                  176.9,
                  -39.367
                ],
                [
                  176.873,
                  -39.456
                ],
                [
                  176.889,
                  -39.48
                ],
                [
                  176.924,
                  -39.473
                ],
                [
                  176.923,
                  -39.554
                ],
                [
                  176.966,
                  -39.623
                ],
                [
                  177.032,
                  -39.65
                ],
                [
                  177.076,
                  -39.635
                ],
                [
                  177.096,
                  -39.643
                ],
                [
                  177.015,
                  -39.732
                ],
                [
                  176.994,
                  -39.798
                ],
                [
                  177.005,
                  -39.841
                ],
                [
                  176.908,
                  -39.982
                ],
                [
                  176.87,
                  -40.13
                ],
                [
                  176.787,
                  -40.218
                ],
                [
                  176.74,
                  -40.227
                ],
                [
                  176.678,
                  -40.266
                ],
                [
                  176.673,
                  -40.322
                ],
                [
                  176.623,
                  -40.428
                ],
                [
                  176.587,
                  -40.431
                ],
                [
                  176.559,
                  -40.407
                ],
                [
                  176.55,
                  -40.421
                ],
                [
                  176.493,
                  -40.4
                ],
                [
                  176.492,
                  -40.412
                ],
                [
                  176.46,
                  -40.412
                ],
                [
                  176.371,
                  -40.359
                ],
                [
                  176.406,
                  -40.333
                ],
                [
                  176.389,
                  -40.323
                ],
                [
                  176.399,
                  -40.285
                ],
                [
                  176.378,
                  -40.272
                ],
                [
                  176.359,
                  -40.198
                ],
                [
                  176.379,
                  -40.158
                ],
                [
                  176.31,
                  -40.121
                ],
                [
                  176.321,
                  -40.086
                ],
                [
                  176.264,
                  -40.063
                ],
                [
                  176.214,
                  -40.018
                ],
                [
                  176.154,
                  -40.012
                ],
                [
                  176.13,
                  -40.024
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.124,
                  -39.948
                ],
                [
                  176.107,
                  -39.917
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176.177,
                  -39.744
                ],
                [
                  176.169,
                  -39.718
                ],
                [
                  176.201,
                  -39.673
                ],
                [
                  176.165,
                  -39.649
                ],
                [
                  176.179,
                  -39.605
                ],
                [
                  176.143,
                  -39.585
                ],
                [
                  176.17,
                  -39.582
                ],
                [
                  176.21,
                  -39.533
                ],
                [
                  176.278,
                  -39.503
                ],
                [
                  176.341,
                  -39.502
                ],
                [
                  176.337,
                  -39.488
                ],
                [
                  176.316,
                  -39.497
                ],
                [
                  176.302,
                  -39.437
                ],
                [
                  176.332,
                  -39.375
                ],
                [
                  176.265,
                  -39.349
                ],
                [
                  176.305,
                  -39.292
                ],
                [
                  176.292,
                  -39.251
                ],
                [
                  176.2,
                  -39.226
                ],
                [
                  176.176,
                  -39.144
                ],
                [
                  176.233,
                  -39.098
                ],
                [
                  176.34,
                  -39.173
                ],
                [
                  176.395,
                  -39.162
                ],
                [
                  176.37,
                  -39.133
                ],
                [
                  176.443,
                  -39.121
                ],
                [
                  176.42,
                  -39.062
                ],
                [
                  176.449,
                  -39.002
                ],
                [
                  176.61,
                  -38.998
                ],
                [
                  176.598,
                  -38.933
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.692,
                  -38.806
                ],
                [
                  176.714,
                  -38.728
                ],
                [
                  176.743,
                  -38.728
                ],
                [
                  176.774,
                  -38.684
                ],
                [
                  176.823,
                  -38.691
                ],
                [
                  176.887,
                  -38.667
                ],
                [
                  176.929,
                  -38.698
                ],
                [
                  176.972,
                  -38.705
                ],
                [
                  177.046,
                  -38.621
                ],
                [
                  177.077,
                  -38.611
                ],
                [
                  177.1,
                  -38.627
                ],
                [
                  177.122,
                  -38.584
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 7,
          RTO2017_V1: "07",
          RTO2017__1: "Rotorua",
          Shape_STAr: 261894532458e-2,
          Shape_STLe: 278743.543791
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.286,
                  -37.937
                ],
                [
                  176.351,
                  -37.937
                ],
                [
                  176.469,
                  -37.967
                ],
                [
                  176.5,
                  -37.959
                ],
                [
                  176.509,
                  -37.994
                ],
                [
                  176.603,
                  -38.011
                ],
                [
                  176.615,
                  -38.059
                ],
                [
                  176.604,
                  -38.121
                ],
                [
                  176.584,
                  -38.125
                ],
                [
                  176.578,
                  -38.427
                ],
                [
                  176.521,
                  -38.419
                ],
                [
                  176.505,
                  -38.402
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.476,
                  -38.533
                ],
                [
                  176.387,
                  -38.506
                ],
                [
                  176.359,
                  -38.569
                ],
                [
                  176.3,
                  -38.551
                ],
                [
                  176.323,
                  -38.507
                ],
                [
                  176.303,
                  -38.486
                ],
                [
                  176.229,
                  -38.522
                ],
                [
                  176.179,
                  -38.519
                ],
                [
                  176.148,
                  -38.487
                ],
                [
                  176.119,
                  -38.413
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  176.024,
                  -38.365
                ],
                [
                  176.059,
                  -38.334
                ],
                [
                  176.131,
                  -38.304
                ],
                [
                  176.138,
                  -38.288
                ],
                [
                  176.109,
                  -38.276
                ],
                [
                  176.129,
                  -38.273
                ],
                [
                  176.116,
                  -38.269
                ],
                [
                  176.15,
                  -38.218
                ],
                [
                  176.11,
                  -38.167
                ],
                [
                  176.031,
                  -38.167
                ],
                [
                  176.031,
                  -38.139
                ],
                [
                  175.982,
                  -38.139
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  176.098,
                  -37.962
                ],
                [
                  176.239,
                  -37.96
                ],
                [
                  176.286,
                  -37.937
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 15,
          RTO2017_V1: "15",
          RTO2017__1: "Manawatu",
          Shape_STAr: 29614413415700006e-7,
          Shape_STLe: 326975.003384
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.847,
                  -39.798
                ],
                [
                  175.929,
                  -39.816
                ],
                [
                  175.965,
                  -39.848
                ],
                [
                  175.985,
                  -39.85
                ],
                [
                  176,
                  -39.832
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176.107,
                  -39.917
                ],
                [
                  176.124,
                  -39.948
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.07,
                  -40.061
                ],
                [
                  176.033,
                  -40.08
                ],
                [
                  175.979,
                  -40.142
                ],
                [
                  175.898,
                  -40.185
                ],
                [
                  175.86,
                  -40.254
                ],
                [
                  175.841,
                  -40.246
                ],
                [
                  175.828,
                  -40.262
                ],
                [
                  175.815,
                  -40.247
                ],
                [
                  175.815,
                  -40.272
                ],
                [
                  175.805,
                  -40.265
                ],
                [
                  175.771,
                  -40.306
                ],
                [
                  175.791,
                  -40.314
                ],
                [
                  175.767,
                  -40.372
                ],
                [
                  175.724,
                  -40.402
                ],
                [
                  175.689,
                  -40.466
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.609,
                  -40.503
                ],
                [
                  175.584,
                  -40.53
                ],
                [
                  175.556,
                  -40.501
                ],
                [
                  175.56,
                  -40.483
                ],
                [
                  175.497,
                  -40.434
                ],
                [
                  175.471,
                  -40.437
                ],
                [
                  175.469,
                  -40.426
                ],
                [
                  175.458,
                  -40.441
                ],
                [
                  175.453,
                  -40.429
                ],
                [
                  175.426,
                  -40.438
                ],
                [
                  175.278,
                  -40.396
                ],
                [
                  175.28,
                  -40.386
                ],
                [
                  175.227,
                  -40.391
                ],
                [
                  175.222,
                  -40.286
                ],
                [
                  175.27,
                  -40.296
                ],
                [
                  175.318,
                  -40.257
                ],
                [
                  175.35,
                  -40.195
                ],
                [
                  175.399,
                  -40.186
                ],
                [
                  175.433,
                  -40.159
                ],
                [
                  175.442,
                  -40.095
                ],
                [
                  175.492,
                  -40.067
                ],
                [
                  175.507,
                  -40.029
                ],
                [
                  175.551,
                  -40.004
                ],
                [
                  175.58,
                  -40.022
                ],
                [
                  175.58,
                  -40.002
                ],
                [
                  175.63,
                  -39.977
                ],
                [
                  175.638,
                  -39.934
                ],
                [
                  175.675,
                  -39.902
                ],
                [
                  175.677,
                  -39.879
                ],
                [
                  175.718,
                  -39.88
                ],
                [
                  175.743,
                  -39.85
                ],
                [
                  175.792,
                  -39.839
                ],
                [
                  175.787,
                  -39.812
                ],
                [
                  175.847,
                  -39.798
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 9,
          RTO2017_V1: "09",
          RTO2017__1: "Gisborne",
          Shape_STAr: 114858953837e-1,
          Shape_STLe: 693315.029563
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  178.008,
                  -37.553
                ],
                [
                  178.037,
                  -37.542
                ],
                [
                  178.164,
                  -37.553
                ],
                [
                  178.175,
                  -37.534
                ],
                [
                  178.314,
                  -37.556
                ],
                [
                  178.294,
                  -37.584
                ],
                [
                  178.301,
                  -37.596
                ],
                [
                  178.325,
                  -37.591
                ],
                [
                  178.316,
                  -37.602
                ],
                [
                  178.341,
                  -37.622
                ],
                [
                  178.481,
                  -37.64
                ],
                [
                  178.55,
                  -37.692
                ],
                [
                  178.45,
                  -37.813
                ],
                [
                  178.452,
                  -37.833
                ],
                [
                  178.413,
                  -37.859
                ],
                [
                  178.387,
                  -37.919
                ],
                [
                  178.391,
                  -37.961
                ],
                [
                  178.337,
                  -38.009
                ],
                [
                  178.337,
                  -38.037
                ],
                [
                  178.372,
                  -38.05
                ],
                [
                  178.374,
                  -38.094
                ],
                [
                  178.322,
                  -38.122
                ],
                [
                  178.318,
                  -38.139
                ],
                [
                  178.368,
                  -38.176
                ],
                [
                  178.31,
                  -38.233
                ],
                [
                  178.335,
                  -38.283
                ],
                [
                  178.359,
                  -38.289
                ],
                [
                  178.326,
                  -38.305
                ],
                [
                  178.33,
                  -38.352
                ],
                [
                  178.306,
                  -38.363
                ],
                [
                  178.318,
                  -38.383
                ],
                [
                  178.34,
                  -38.379
                ],
                [
                  178.347,
                  -38.416
                ],
                [
                  178.28,
                  -38.475
                ],
                [
                  178.292,
                  -38.529
                ],
                [
                  178.203,
                  -38.587
                ],
                [
                  178.147,
                  -38.652
                ],
                [
                  178.125,
                  -38.651
                ],
                [
                  178.08,
                  -38.678
                ],
                [
                  178.07,
                  -38.708
                ],
                [
                  178.015,
                  -38.671
                ],
                [
                  177.952,
                  -38.698
                ],
                [
                  177.935,
                  -38.75
                ],
                [
                  177.972,
                  -38.758
                ],
                [
                  177.929,
                  -38.787
                ],
                [
                  177.912,
                  -38.828
                ],
                [
                  177.92,
                  -38.867
                ],
                [
                  177.903,
                  -38.888
                ],
                [
                  177.897,
                  -38.973
                ],
                [
                  177.837,
                  -38.956
                ],
                [
                  177.845,
                  -38.922
                ],
                [
                  177.805,
                  -38.912
                ],
                [
                  177.799,
                  -38.894
                ],
                [
                  177.776,
                  -38.913
                ],
                [
                  177.749,
                  -38.897
                ],
                [
                  177.729,
                  -38.919
                ],
                [
                  177.722,
                  -38.898
                ],
                [
                  177.66,
                  -38.905
                ],
                [
                  177.662,
                  -38.846
                ],
                [
                  177.638,
                  -38.871
                ],
                [
                  177.626,
                  -38.843
                ],
                [
                  177.6,
                  -38.852
                ],
                [
                  177.593,
                  -38.803
                ],
                [
                  177.561,
                  -38.802
                ],
                [
                  177.531,
                  -38.82
                ],
                [
                  177.531,
                  -38.792
                ],
                [
                  177.47,
                  -38.755
                ],
                [
                  177.466,
                  -38.706
                ],
                [
                  177.429,
                  -38.692
                ],
                [
                  177.409,
                  -38.699
                ],
                [
                  177.448,
                  -38.636
                ],
                [
                  177.353,
                  -38.625
                ],
                [
                  177.309,
                  -38.597
                ],
                [
                  177.308,
                  -38.66
                ],
                [
                  177.122,
                  -38.584
                ],
                [
                  177.167,
                  -38.578
                ],
                [
                  177.207,
                  -38.514
                ],
                [
                  177.182,
                  -38.488
                ],
                [
                  177.204,
                  -38.386
                ],
                [
                  177.24,
                  -38.364
                ],
                [
                  177.238,
                  -38.347
                ],
                [
                  177.215,
                  -38.342
                ],
                [
                  177.229,
                  -38.287
                ],
                [
                  177.207,
                  -38.264
                ],
                [
                  177.168,
                  -38.263
                ],
                [
                  177.145,
                  -38.227
                ],
                [
                  177.159,
                  -38.12
                ],
                [
                  177.173,
                  -38.115
                ],
                [
                  177.163,
                  -38.083
                ],
                [
                  177.133,
                  -38.076
                ],
                [
                  177.102,
                  -38.025
                ],
                [
                  177.157,
                  -37.987
                ],
                [
                  177.387,
                  -37.985
                ],
                [
                  177.486,
                  -37.95
                ],
                [
                  177.486,
                  -37.935
                ],
                [
                  177.53,
                  -37.92
                ],
                [
                  177.584,
                  -37.867
                ],
                [
                  177.613,
                  -37.812
                ],
                [
                  177.651,
                  -37.805
                ],
                [
                  177.684,
                  -37.76
                ],
                [
                  177.671,
                  -37.739
                ],
                [
                  177.708,
                  -37.723
                ],
                [
                  177.728,
                  -37.68
                ],
                [
                  177.788,
                  -37.681
                ],
                [
                  177.816,
                  -37.658
                ],
                [
                  177.864,
                  -37.657
                ],
                [
                  177.904,
                  -37.605
                ],
                [
                  177.92,
                  -37.62
                ],
                [
                  177.957,
                  -37.613
                ],
                [
                  177.993,
                  -37.572
                ],
                [
                  177.981,
                  -37.537
                ],
                [
                  178.008,
                  -37.553
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 17,
          RTO2017_V1: "17",
          RTO2017__1: "Wairarapa",
          Shape_STAr: 5938005663259999e-6,
          Shape_STLe: 455199.155947
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.094,
                  -40.675
                ],
                [
                  176.234,
                  -40.708
                ],
                [
                  176.247,
                  -40.741
                ],
                [
                  176.272,
                  -40.745
                ],
                [
                  176.267,
                  -40.782
                ],
                [
                  176.22,
                  -40.886
                ],
                [
                  176.23,
                  -40.904
                ],
                [
                  176.146,
                  -40.957
                ],
                [
                  176.063,
                  -41.13
                ],
                [
                  176.004,
                  -41.171
                ],
                [
                  175.963,
                  -41.245
                ],
                [
                  175.883,
                  -41.274
                ],
                [
                  175.863,
                  -41.317
                ],
                [
                  175.811,
                  -41.361
                ],
                [
                  175.674,
                  -41.414
                ],
                [
                  175.585,
                  -41.487
                ],
                [
                  175.534,
                  -41.496
                ],
                [
                  175.432,
                  -41.572
                ],
                [
                  175.366,
                  -41.572
                ],
                [
                  175.325,
                  -41.606
                ],
                [
                  175.291,
                  -41.614
                ],
                [
                  175.237,
                  -41.608
                ],
                [
                  175.218,
                  -41.54
                ],
                [
                  175.195,
                  -41.527
                ],
                [
                  175.214,
                  -41.429
                ],
                [
                  175.049,
                  -41.374
                ],
                [
                  174.983,
                  -41.402
                ],
                [
                  174.959,
                  -41.383
                ],
                [
                  174.993,
                  -41.345
                ],
                [
                  175.022,
                  -41.348
                ],
                [
                  175.083,
                  -41.284
                ],
                [
                  175.084,
                  -41.222
                ],
                [
                  175.152,
                  -41.203
                ],
                [
                  175.233,
                  -41.117
                ],
                [
                  175.243,
                  -41.064
                ],
                [
                  175.306,
                  -40.989
                ],
                [
                  175.264,
                  -40.977
                ],
                [
                  175.282,
                  -40.952
                ],
                [
                  175.27,
                  -40.938
                ],
                [
                  175.351,
                  -40.896
                ],
                [
                  175.357,
                  -40.815
                ],
                [
                  175.377,
                  -40.809
                ],
                [
                  175.396,
                  -40.759
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.628,
                  -40.753
                ],
                [
                  175.694,
                  -40.716
                ],
                [
                  175.691,
                  -40.697
                ],
                [
                  175.752,
                  -40.697
                ],
                [
                  175.791,
                  -40.726
                ],
                [
                  175.765,
                  -40.768
                ],
                [
                  175.811,
                  -40.78
                ],
                [
                  175.827,
                  -40.761
                ],
                [
                  175.849,
                  -40.762
                ],
                [
                  175.872,
                  -40.778
                ],
                [
                  175.91,
                  -40.751
                ],
                [
                  175.935,
                  -40.767
                ],
                [
                  175.943,
                  -40.741
                ],
                [
                  175.975,
                  -40.738
                ],
                [
                  175.974,
                  -40.723
                ],
                [
                  175.995,
                  -40.725
                ],
                [
                  176.017,
                  -40.706
                ],
                [
                  176.082,
                  -40.716
                ],
                [
                  176.094,
                  -40.675
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 14,
          RTO2017_V1: "14",
          RTO2017__1: "Rangitikei",
          Shape_STAr: 448374058789e-2,
          Shape_STLe: 620789.129236
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.149,
                  -39.136
                ],
                [
                  176.177,
                  -39.145
                ],
                [
                  176.2,
                  -39.226
                ],
                [
                  176.29,
                  -39.247
                ],
                [
                  176.305,
                  -39.292
                ],
                [
                  176.265,
                  -39.349
                ],
                [
                  176.332,
                  -39.375
                ],
                [
                  176.302,
                  -39.437
                ],
                [
                  176.316,
                  -39.497
                ],
                [
                  176.337,
                  -39.488
                ],
                [
                  176.341,
                  -39.502
                ],
                [
                  176.278,
                  -39.503
                ],
                [
                  176.21,
                  -39.533
                ],
                [
                  176.17,
                  -39.582
                ],
                [
                  176.143,
                  -39.585
                ],
                [
                  176.179,
                  -39.605
                ],
                [
                  176.165,
                  -39.649
                ],
                [
                  176.201,
                  -39.673
                ],
                [
                  176.169,
                  -39.718
                ],
                [
                  176.177,
                  -39.744
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176,
                  -39.832
                ],
                [
                  175.985,
                  -39.85
                ],
                [
                  175.964,
                  -39.848
                ],
                [
                  175.929,
                  -39.816
                ],
                [
                  175.847,
                  -39.798
                ],
                [
                  175.787,
                  -39.812
                ],
                [
                  175.792,
                  -39.839
                ],
                [
                  175.743,
                  -39.85
                ],
                [
                  175.718,
                  -39.88
                ],
                [
                  175.677,
                  -39.879
                ],
                [
                  175.675,
                  -39.902
                ],
                [
                  175.638,
                  -39.934
                ],
                [
                  175.633,
                  -39.974
                ],
                [
                  175.58,
                  -40.002
                ],
                [
                  175.58,
                  -40.021
                ],
                [
                  175.551,
                  -40.004
                ],
                [
                  175.506,
                  -40.03
                ],
                [
                  175.492,
                  -40.067
                ],
                [
                  175.442,
                  -40.095
                ],
                [
                  175.433,
                  -40.159
                ],
                [
                  175.399,
                  -40.186
                ],
                [
                  175.35,
                  -40.195
                ],
                [
                  175.318,
                  -40.257
                ],
                [
                  175.27,
                  -40.296
                ],
                [
                  175.222,
                  -40.286
                ],
                [
                  175.18,
                  -40.143
                ],
                [
                  175.099,
                  -40.041
                ],
                [
                  175.112,
                  -40.028
                ],
                [
                  175.122,
                  -40.037
                ],
                [
                  175.145,
                  -40.007
                ],
                [
                  175.223,
                  -39.993
                ],
                [
                  175.236,
                  -39.967
                ],
                [
                  175.266,
                  -39.974
                ],
                [
                  175.286,
                  -39.936
                ],
                [
                  175.269,
                  -39.932
                ],
                [
                  175.278,
                  -39.918
                ],
                [
                  175.293,
                  -39.924
                ],
                [
                  175.279,
                  -39.909
                ],
                [
                  175.295,
                  -39.88
                ],
                [
                  175.274,
                  -39.878
                ],
                [
                  175.29,
                  -39.86
                ],
                [
                  175.349,
                  -39.873
                ],
                [
                  175.386,
                  -39.832
                ],
                [
                  175.453,
                  -39.822
                ],
                [
                  175.515,
                  -39.681
                ],
                [
                  175.462,
                  -39.642
                ],
                [
                  175.506,
                  -39.581
                ],
                [
                  175.488,
                  -39.579
                ],
                [
                  175.488,
                  -39.545
                ],
                [
                  175.592,
                  -39.543
                ],
                [
                  175.596,
                  -39.522
                ],
                [
                  175.643,
                  -39.525
                ],
                [
                  175.658,
                  -39.549
                ],
                [
                  175.684,
                  -39.544
                ],
                [
                  175.713,
                  -39.574
                ],
                [
                  175.789,
                  -39.526
                ],
                [
                  175.835,
                  -39.528
                ],
                [
                  175.845,
                  -39.51
                ],
                [
                  175.866,
                  -39.521
                ],
                [
                  175.901,
                  -39.501
                ],
                [
                  175.893,
                  -39.412
                ],
                [
                  176.008,
                  -39.415
                ],
                [
                  176.029,
                  -39.356
                ],
                [
                  175.976,
                  -39.356
                ],
                [
                  175.976,
                  -39.287
                ],
                [
                  176.005,
                  -39.283
                ],
                [
                  175.958,
                  -39.258
                ],
                [
                  175.886,
                  -39.296
                ],
                [
                  175.829,
                  -39.289
                ],
                [
                  175.868,
                  -39.263
                ],
                [
                  175.855,
                  -39.244
                ],
                [
                  175.893,
                  -39.224
                ],
                [
                  175.886,
                  -39.206
                ],
                [
                  175.96,
                  -39.184
                ],
                [
                  175.976,
                  -39.15
                ],
                [
                  176.081,
                  -39.157
                ],
                [
                  176.149,
                  -39.136
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 30,
          RTO2017_V1: "30",
          RTO2017__1: "Wanaka",
          Shape_STAr: 458423442189e-2,
          Shape_STLe: 409916.13863
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  169.593,
                  -43.958
                ],
                [
                  169.699,
                  -43.964
                ],
                [
                  169.72,
                  -44.036
                ],
                [
                  169.686,
                  -44.042
                ],
                [
                  169.682,
                  -44.068
                ],
                [
                  169.665,
                  -44.068
                ],
                [
                  169.606,
                  -44.159
                ],
                [
                  169.543,
                  -44.207
                ],
                [
                  169.581,
                  -44.252
                ],
                [
                  169.579,
                  -44.338
                ],
                [
                  169.542,
                  -44.449
                ],
                [
                  169.491,
                  -44.549
                ],
                [
                  169.356,
                  -44.566
                ],
                [
                  169.381,
                  -44.633
                ],
                [
                  169.351,
                  -44.677
                ],
                [
                  169.38,
                  -44.758
                ],
                [
                  169.307,
                  -44.763
                ],
                [
                  169.259,
                  -44.829
                ],
                [
                  169.19,
                  -44.873
                ],
                [
                  169.119,
                  -44.868
                ],
                [
                  169.093,
                  -44.897
                ],
                [
                  169.059,
                  -44.898
                ],
                [
                  169.056,
                  -44.919
                ],
                [
                  168.944,
                  -44.902
                ],
                [
                  168.946,
                  -44.857
                ],
                [
                  168.895,
                  -44.832
                ],
                [
                  168.912,
                  -44.81
                ],
                [
                  168.871,
                  -44.795
                ],
                [
                  168.845,
                  -44.805
                ],
                [
                  168.817,
                  -44.699
                ],
                [
                  168.864,
                  -44.675
                ],
                [
                  168.874,
                  -44.632
                ],
                [
                  168.836,
                  -44.601
                ],
                [
                  168.804,
                  -44.523
                ],
                [
                  168.548,
                  -44.538
                ],
                [
                  168.706,
                  -44.402
                ],
                [
                  168.743,
                  -44.421
                ],
                [
                  168.753,
                  -44.392
                ],
                [
                  168.832,
                  -44.352
                ],
                [
                  168.849,
                  -44.246
                ],
                [
                  168.911,
                  -44.21
                ],
                [
                  168.959,
                  -44.206
                ],
                [
                  168.965,
                  -44.174
                ],
                [
                  168.987,
                  -44.169
                ],
                [
                  168.975,
                  -44.144
                ],
                [
                  169.016,
                  -44.131
                ],
                [
                  169.013,
                  -44.115
                ],
                [
                  169.074,
                  -44.11
                ],
                [
                  169.146,
                  -44.08
                ],
                [
                  169.16,
                  -44.105
                ],
                [
                  169.257,
                  -44.108
                ],
                [
                  169.291,
                  -44.063
                ],
                [
                  169.309,
                  -44.061
                ],
                [
                  169.338,
                  -44.102
                ],
                [
                  169.387,
                  -44.119
                ],
                [
                  169.463,
                  -44.059
                ],
                [
                  169.507,
                  -44.059
                ],
                [
                  169.541,
                  -44.033
                ],
                [
                  169.579,
                  -44.034
                ],
                [
                  169.593,
                  -43.958
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 2,
          RTO2017_V1: "02",
          RTO2017__1: "Auckland",
          Shape_STAr: 161566119855e-1,
          Shape_STLe: 659677.328142
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.084,
                  -35.7
                ],
                [
                  175.217,
                  -35.716
                ],
                [
                  175.323,
                  -35.771
                ],
                [
                  175.379,
                  -35.825
                ],
                [
                  175.485,
                  -35.834
                ],
                [
                  175.571,
                  -35.873
                ],
                [
                  175.742,
                  -36.04
                ],
                [
                  175.763,
                  -36.11
                ],
                [
                  175.755,
                  -36.186
                ],
                [
                  175.779,
                  -36.228
                ],
                [
                  175.903,
                  -36.258
                ],
                [
                  175.628,
                  -36.385
                ],
                [
                  175.417,
                  -36.38
                ],
                [
                  175.251,
                  -36.4
                ],
                [
                  175.163,
                  -36.524
                ],
                [
                  175.267,
                  -36.704
                ],
                [
                  175.311,
                  -36.838
                ],
                [
                  175.379,
                  -36.963
                ],
                [
                  175.389,
                  -37.022
                ],
                [
                  175.185,
                  -37.041
                ],
                [
                  175.161,
                  -37.016
                ],
                [
                  175.141,
                  -37.099
                ],
                [
                  175.154,
                  -37.136
                ],
                [
                  175.133,
                  -37.185
                ],
                [
                  175.09,
                  -37.18
                ],
                [
                  175.074,
                  -37.195
                ],
                [
                  175.054,
                  -37.181
                ],
                [
                  174.99,
                  -37.217
                ],
                [
                  174.973,
                  -37.195
                ],
                [
                  174.948,
                  -37.196
                ],
                [
                  174.93,
                  -37.206
                ],
                [
                  174.931,
                  -37.233
                ],
                [
                  174.887,
                  -37.231
                ],
                [
                  174.85,
                  -37.251
                ],
                [
                  174.848,
                  -37.234
                ],
                [
                  174.806,
                  -37.227
                ],
                [
                  174.739,
                  -37.268
                ],
                [
                  174.7,
                  -37.262
                ],
                [
                  174.659,
                  -37.293
                ],
                [
                  174.426,
                  -37.363
                ],
                [
                  174.339,
                  -37.214
                ],
                [
                  174.253,
                  -37.132
                ],
                [
                  174.17,
                  -36.867
                ],
                [
                  174.141,
                  -36.822
                ],
                [
                  173.994,
                  -36.639
                ],
                [
                  173.897,
                  -36.559
                ],
                [
                  174.193,
                  -36.402
                ],
                [
                  174.239,
                  -36.296
                ],
                [
                  174.342,
                  -36.32
                ],
                [
                  174.455,
                  -36.249
                ],
                [
                  174.465,
                  -36.26
                ],
                [
                  174.484,
                  -36.23
                ],
                [
                  174.523,
                  -36.21
                ],
                [
                  174.535,
                  -36.184
                ],
                [
                  174.581,
                  -36.166
                ],
                [
                  174.585,
                  -36.143
                ],
                [
                  174.806,
                  -35.988
                ],
                [
                  174.893,
                  -35.866
                ],
                [
                  174.911,
                  -35.713
                ],
                [
                  174.932,
                  -35.725
                ],
                [
                  175.007,
                  -35.702
                ],
                [
                  175.084,
                  -35.7
                ]
              ]
            ]
          ]
        }
      }
    ];
    rto = {
      type: type$1,
      name: name$1,
      crs: crs$1,
      features: features$1
    };
    implicit = Symbol("implicit");
    unit = [0, 1];
    re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
    formatSpecifier.prototype = FormatSpecifier.prototype;
    FormatSpecifier.prototype.toString = function() {
      return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
    };
    formatTypes = {
      "%": (x, p) => (x * 100).toFixed(p),
      "b": (x) => Math.round(x).toString(2),
      "c": (x) => x + "",
      "d": formatDecimal,
      "e": (x, p) => x.toExponential(p),
      "f": (x, p) => x.toFixed(p),
      "g": (x, p) => x.toPrecision(p),
      "o": (x) => Math.round(x).toString(8),
      "p": (x, p) => formatRounded(x * 100, p),
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": (x) => Math.round(x).toString(16).toUpperCase(),
      "x": (x) => Math.round(x).toString(16)
    };
    map = Array.prototype.map;
    prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
    defaultLocale({
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });
    type = "FeatureCollection";
    name = "rto2017_ni_simplified_3dp";
    crs = {
      type: "name",
      properties: {
        name: "urn:ogc:def:crs:OGC:1.3:CRS84"
      }
    };
    features = [
      {
        type: "Feature",
        properties: {
          OBJECTID: 6,
          RTO2017_V1: "06",
          RTO2017__1: "Whakatane-Kawerau",
          Shape_STAr: 448835782008e-2,
          Shape_STLe: 370915.833753
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.717,
                  -37.873
                ],
                [
                  177.017,
                  -37.938
                ],
                [
                  177.039,
                  -37.964
                ],
                [
                  177.157,
                  -37.987
                ],
                [
                  177.102,
                  -38.025
                ],
                [
                  177.133,
                  -38.076
                ],
                [
                  177.163,
                  -38.083
                ],
                [
                  177.173,
                  -38.115
                ],
                [
                  177.159,
                  -38.12
                ],
                [
                  177.145,
                  -38.227
                ],
                [
                  177.168,
                  -38.263
                ],
                [
                  177.207,
                  -38.264
                ],
                [
                  177.229,
                  -38.287
                ],
                [
                  177.215,
                  -38.342
                ],
                [
                  177.238,
                  -38.347
                ],
                [
                  177.24,
                  -38.364
                ],
                [
                  177.204,
                  -38.386
                ],
                [
                  177.182,
                  -38.488
                ],
                [
                  177.207,
                  -38.514
                ],
                [
                  177.167,
                  -38.578
                ],
                [
                  177.122,
                  -38.584
                ],
                [
                  177.1,
                  -38.627
                ],
                [
                  177.078,
                  -38.611
                ],
                [
                  177.046,
                  -38.621
                ],
                [
                  176.972,
                  -38.705
                ],
                [
                  176.929,
                  -38.698
                ],
                [
                  176.887,
                  -38.667
                ],
                [
                  176.823,
                  -38.691
                ],
                [
                  176.773,
                  -38.684
                ],
                [
                  176.743,
                  -38.728
                ],
                [
                  176.714,
                  -38.728
                ],
                [
                  176.692,
                  -38.806
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.624,
                  -38.754
                ],
                [
                  176.617,
                  -38.701
                ],
                [
                  176.646,
                  -38.606
                ],
                [
                  176.618,
                  -38.595
                ],
                [
                  176.606,
                  -38.609
                ],
                [
                  176.552,
                  -38.581
                ],
                [
                  176.533,
                  -38.535
                ],
                [
                  176.503,
                  -38.526
                ],
                [
                  176.502,
                  -38.511
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.505,
                  -38.402
                ],
                [
                  176.521,
                  -38.419
                ],
                [
                  176.578,
                  -38.427
                ],
                [
                  176.584,
                  -38.125
                ],
                [
                  176.604,
                  -38.121
                ],
                [
                  176.615,
                  -38.059
                ],
                [
                  176.603,
                  -38.01
                ],
                [
                  176.603,
                  -37.83
                ],
                [
                  176.717,
                  -37.873
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 8,
          RTO2017_V1: "08",
          RTO2017__1: "Taupo",
          Shape_STAr: 69640195394e-1,
          Shape_STLe: 491924.692481
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.674,
                  -38.304
                ],
                [
                  175.781,
                  -38.362
                ],
                [
                  175.77,
                  -38.396
                ],
                [
                  175.825,
                  -38.438
                ],
                [
                  175.958,
                  -38.421
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  176.119,
                  -38.413
                ],
                [
                  176.148,
                  -38.487
                ],
                [
                  176.179,
                  -38.519
                ],
                [
                  176.229,
                  -38.522
                ],
                [
                  176.303,
                  -38.485
                ],
                [
                  176.323,
                  -38.507
                ],
                [
                  176.3,
                  -38.551
                ],
                [
                  176.359,
                  -38.569
                ],
                [
                  176.387,
                  -38.506
                ],
                [
                  176.476,
                  -38.533
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.502,
                  -38.511
                ],
                [
                  176.503,
                  -38.526
                ],
                [
                  176.533,
                  -38.535
                ],
                [
                  176.552,
                  -38.581
                ],
                [
                  176.606,
                  -38.609
                ],
                [
                  176.618,
                  -38.595
                ],
                [
                  176.646,
                  -38.606
                ],
                [
                  176.617,
                  -38.701
                ],
                [
                  176.624,
                  -38.754
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.598,
                  -38.933
                ],
                [
                  176.61,
                  -38.998
                ],
                [
                  176.449,
                  -39.002
                ],
                [
                  176.42,
                  -39.062
                ],
                [
                  176.443,
                  -39.121
                ],
                [
                  176.37,
                  -39.133
                ],
                [
                  176.395,
                  -39.162
                ],
                [
                  176.34,
                  -39.173
                ],
                [
                  176.233,
                  -39.098
                ],
                [
                  176.176,
                  -39.144
                ],
                [
                  176.147,
                  -39.134
                ],
                [
                  176.081,
                  -39.157
                ],
                [
                  175.976,
                  -39.15
                ],
                [
                  175.96,
                  -39.184
                ],
                [
                  175.886,
                  -39.206
                ],
                [
                  175.893,
                  -39.224
                ],
                [
                  175.855,
                  -39.244
                ],
                [
                  175.868,
                  -39.263
                ],
                [
                  175.813,
                  -39.3
                ],
                [
                  175.752,
                  -39.288
                ],
                [
                  175.669,
                  -39.297
                ],
                [
                  175.558,
                  -39.276
                ],
                [
                  175.635,
                  -39.158
                ],
                [
                  175.648,
                  -39.1
                ],
                [
                  175.619,
                  -39.083
                ],
                [
                  175.614,
                  -39.051
                ],
                [
                  175.636,
                  -39.045
                ],
                [
                  175.682,
                  -38.98
                ],
                [
                  175.563,
                  -38.987
                ],
                [
                  175.554,
                  -38.956
                ],
                [
                  175.58,
                  -38.911
                ],
                [
                  175.545,
                  -38.864
                ],
                [
                  175.577,
                  -38.823
                ],
                [
                  175.518,
                  -38.751
                ],
                [
                  175.58,
                  -38.682
                ],
                [
                  175.576,
                  -38.65
                ],
                [
                  175.629,
                  -38.601
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.611,
                  -38.442
                ],
                [
                  175.699,
                  -38.38
                ],
                [
                  175.689,
                  -38.333
                ],
                [
                  175.66,
                  -38.319
                ],
                [
                  175.674,
                  -38.304
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 18,
          RTO2017_V1: "18",
          RTO2017__1: "Horowhenua",
          Shape_STAr: 10639915826099999e-7,
          Shape_STLe: 160856.340294
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.28,
                  -40.386
                ],
                [
                  175.278,
                  -40.396
                ],
                [
                  175.426,
                  -40.438
                ],
                [
                  175.453,
                  -40.429
                ],
                [
                  175.458,
                  -40.441
                ],
                [
                  175.469,
                  -40.426
                ],
                [
                  175.471,
                  -40.437
                ],
                [
                  175.497,
                  -40.434
                ],
                [
                  175.56,
                  -40.483
                ],
                [
                  175.556,
                  -40.501
                ],
                [
                  175.584,
                  -40.53
                ],
                [
                  175.609,
                  -40.503
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.371,
                  -40.727
                ],
                [
                  175.347,
                  -40.752
                ],
                [
                  175.328,
                  -40.744
                ],
                [
                  175.268,
                  -40.769
                ],
                [
                  175.213,
                  -40.763
                ],
                [
                  175.207,
                  -40.732
                ],
                [
                  175.136,
                  -40.7
                ],
                [
                  175.193,
                  -40.56
                ],
                [
                  175.227,
                  -40.391
                ],
                [
                  175.28,
                  -40.386
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 11,
          RTO2017_V1: "11",
          RTO2017__1: "Ruapehu",
          Shape_STAr: 673440834777e-2,
          Shape_STLe: 646031.180453
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.332,
                  -38.57
                ],
                [
                  175.336,
                  -38.582
                ],
                [
                  175.421,
                  -38.551
                ],
                [
                  175.446,
                  -38.565
                ],
                [
                  175.501,
                  -38.559
                ],
                [
                  175.542,
                  -38.598
                ],
                [
                  175.605,
                  -38.585
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.629,
                  -38.601
                ],
                [
                  175.576,
                  -38.65
                ],
                [
                  175.58,
                  -38.682
                ],
                [
                  175.518,
                  -38.752
                ],
                [
                  175.577,
                  -38.823
                ],
                [
                  175.545,
                  -38.864
                ],
                [
                  175.58,
                  -38.911
                ],
                [
                  175.554,
                  -38.956
                ],
                [
                  175.563,
                  -38.987
                ],
                [
                  175.682,
                  -38.98
                ],
                [
                  175.636,
                  -39.045
                ],
                [
                  175.614,
                  -39.051
                ],
                [
                  175.619,
                  -39.083
                ],
                [
                  175.648,
                  -39.1
                ],
                [
                  175.635,
                  -39.158
                ],
                [
                  175.558,
                  -39.276
                ],
                [
                  175.669,
                  -39.297
                ],
                [
                  175.752,
                  -39.288
                ],
                [
                  175.813,
                  -39.3
                ],
                [
                  175.829,
                  -39.289
                ],
                [
                  175.886,
                  -39.296
                ],
                [
                  175.958,
                  -39.258
                ],
                [
                  176.005,
                  -39.282
                ],
                [
                  175.976,
                  -39.287
                ],
                [
                  175.976,
                  -39.356
                ],
                [
                  176.029,
                  -39.356
                ],
                [
                  176.008,
                  -39.415
                ],
                [
                  175.893,
                  -39.412
                ],
                [
                  175.901,
                  -39.501
                ],
                [
                  175.866,
                  -39.521
                ],
                [
                  175.845,
                  -39.51
                ],
                [
                  175.835,
                  -39.528
                ],
                [
                  175.789,
                  -39.526
                ],
                [
                  175.713,
                  -39.574
                ],
                [
                  175.684,
                  -39.544
                ],
                [
                  175.658,
                  -39.549
                ],
                [
                  175.643,
                  -39.525
                ],
                [
                  175.596,
                  -39.522
                ],
                [
                  175.592,
                  -39.543
                ],
                [
                  175.422,
                  -39.545
                ],
                [
                  175.434,
                  -39.586
                ],
                [
                  175.403,
                  -39.594
                ],
                [
                  175.365,
                  -39.573
                ],
                [
                  175.346,
                  -39.607
                ],
                [
                  175.308,
                  -39.616
                ],
                [
                  175.313,
                  -39.626
                ],
                [
                  175.25,
                  -39.619
                ],
                [
                  175.219,
                  -39.582
                ],
                [
                  175.204,
                  -39.591
                ],
                [
                  175.203,
                  -39.554
                ],
                [
                  175.228,
                  -39.553
                ],
                [
                  175.223,
                  -39.539
                ],
                [
                  175.138,
                  -39.544
                ],
                [
                  175.165,
                  -39.532
                ],
                [
                  175.138,
                  -39.521
                ],
                [
                  175.118,
                  -39.482
                ],
                [
                  175.087,
                  -39.486
                ],
                [
                  175.055,
                  -39.523
                ],
                [
                  175.015,
                  -39.435
                ],
                [
                  175.045,
                  -39.405
                ],
                [
                  175.02,
                  -39.395
                ],
                [
                  174.992,
                  -39.346
                ],
                [
                  175.008,
                  -39.313
                ],
                [
                  174.964,
                  -39.305
                ],
                [
                  174.968,
                  -39.281
                ],
                [
                  174.953,
                  -39.295
                ],
                [
                  174.929,
                  -39.292
                ],
                [
                  174.925,
                  -39.276
                ],
                [
                  174.908,
                  -39.289
                ],
                [
                  174.884,
                  -39.264
                ],
                [
                  174.893,
                  -39.248
                ],
                [
                  174.86,
                  -39.232
                ],
                [
                  174.896,
                  -39.227
                ],
                [
                  174.915,
                  -39.234
                ],
                [
                  174.959,
                  -39.171
                ],
                [
                  174.95,
                  -39.163
                ],
                [
                  174.984,
                  -39.155
                ],
                [
                  174.983,
                  -39.112
                ],
                [
                  175,
                  -39.129
                ],
                [
                  174.998,
                  -39.111
                ],
                [
                  175.069,
                  -39.106
                ],
                [
                  175.047,
                  -39.07
                ],
                [
                  174.963,
                  -39.066
                ],
                [
                  174.977,
                  -39.042
                ],
                [
                  174.96,
                  -38.995
                ],
                [
                  174.915,
                  -39.011
                ],
                [
                  174.911,
                  -38.989
                ],
                [
                  174.869,
                  -38.989
                ],
                [
                  174.885,
                  -38.969
                ],
                [
                  174.871,
                  -38.928
                ],
                [
                  174.884,
                  -38.913
                ],
                [
                  174.857,
                  -38.889
                ],
                [
                  174.828,
                  -38.91
                ],
                [
                  174.787,
                  -38.821
                ],
                [
                  174.808,
                  -38.82
                ],
                [
                  174.82,
                  -38.787
                ],
                [
                  174.938,
                  -38.75
                ],
                [
                  174.935,
                  -38.731
                ],
                [
                  174.964,
                  -38.697
                ],
                [
                  174.957,
                  -38.665
                ],
                [
                  175,
                  -38.666
                ],
                [
                  175.116,
                  -38.622
                ],
                [
                  175.213,
                  -38.639
                ],
                [
                  175.285,
                  -38.588
                ],
                [
                  175.3,
                  -38.601
                ],
                [
                  175.325,
                  -38.551
                ],
                [
                  175.332,
                  -38.57
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 13,
          RTO2017_V1: "13",
          RTO2017__1: "Whanganui",
          Shape_STAr: 237326160132e-2,
          Shape_STLe: 426925.750034
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  174.86,
                  -39.232
                ],
                [
                  174.893,
                  -39.248
                ],
                [
                  174.884,
                  -39.264
                ],
                [
                  174.908,
                  -39.289
                ],
                [
                  174.925,
                  -39.276
                ],
                [
                  174.929,
                  -39.292
                ],
                [
                  174.953,
                  -39.295
                ],
                [
                  174.968,
                  -39.281
                ],
                [
                  174.964,
                  -39.305
                ],
                [
                  175.008,
                  -39.313
                ],
                [
                  174.992,
                  -39.346
                ],
                [
                  175.02,
                  -39.395
                ],
                [
                  175.044,
                  -39.404
                ],
                [
                  175.015,
                  -39.435
                ],
                [
                  175.055,
                  -39.523
                ],
                [
                  175.087,
                  -39.486
                ],
                [
                  175.118,
                  -39.482
                ],
                [
                  175.138,
                  -39.521
                ],
                [
                  175.165,
                  -39.532
                ],
                [
                  175.138,
                  -39.544
                ],
                [
                  175.223,
                  -39.539
                ],
                [
                  175.228,
                  -39.553
                ],
                [
                  175.203,
                  -39.554
                ],
                [
                  175.204,
                  -39.591
                ],
                [
                  175.219,
                  -39.582
                ],
                [
                  175.25,
                  -39.619
                ],
                [
                  175.313,
                  -39.626
                ],
                [
                  175.308,
                  -39.616
                ],
                [
                  175.346,
                  -39.607
                ],
                [
                  175.365,
                  -39.573
                ],
                [
                  175.403,
                  -39.594
                ],
                [
                  175.434,
                  -39.586
                ],
                [
                  175.422,
                  -39.545
                ],
                [
                  175.488,
                  -39.545
                ],
                [
                  175.488,
                  -39.579
                ],
                [
                  175.506,
                  -39.581
                ],
                [
                  175.462,
                  -39.642
                ],
                [
                  175.515,
                  -39.681
                ],
                [
                  175.453,
                  -39.822
                ],
                [
                  175.386,
                  -39.832
                ],
                [
                  175.349,
                  -39.873
                ],
                [
                  175.29,
                  -39.86
                ],
                [
                  175.274,
                  -39.878
                ],
                [
                  175.295,
                  -39.88
                ],
                [
                  175.279,
                  -39.909
                ],
                [
                  175.293,
                  -39.924
                ],
                [
                  175.278,
                  -39.918
                ],
                [
                  175.269,
                  -39.932
                ],
                [
                  175.286,
                  -39.936
                ],
                [
                  175.266,
                  -39.974
                ],
                [
                  175.237,
                  -39.967
                ],
                [
                  175.222,
                  -39.993
                ],
                [
                  175.144,
                  -40.007
                ],
                [
                  175.12,
                  -40.038
                ],
                [
                  175.112,
                  -40.028
                ],
                [
                  175.1,
                  -40.041
                ],
                [
                  174.928,
                  -39.899
                ],
                [
                  174.766,
                  -39.853
                ],
                [
                  174.803,
                  -39.803
                ],
                [
                  174.835,
                  -39.8
                ],
                [
                  174.894,
                  -39.747
                ],
                [
                  174.918,
                  -39.75
                ],
                [
                  174.93,
                  -39.683
                ],
                [
                  174.988,
                  -39.665
                ],
                [
                  174.968,
                  -39.605
                ],
                [
                  174.992,
                  -39.54
                ],
                [
                  174.97,
                  -39.525
                ],
                [
                  174.967,
                  -39.485
                ],
                [
                  174.928,
                  -39.476
                ],
                [
                  174.885,
                  -39.435
                ],
                [
                  174.866,
                  -39.389
                ],
                [
                  174.879,
                  -39.39
                ],
                [
                  174.892,
                  -39.358
                ],
                [
                  174.823,
                  -39.334
                ],
                [
                  174.813,
                  -39.314
                ],
                [
                  174.86,
                  -39.232
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 19,
          RTO2017_V1: "19",
          RTO2017__1: "Wellington",
          Shape_STAr: 21202612918100002e-7,
          Shape_STLe: 409548.618747
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.136,
                  -40.7
                ],
                [
                  175.207,
                  -40.732
                ],
                [
                  175.213,
                  -40.763
                ],
                [
                  175.268,
                  -40.769
                ],
                [
                  175.328,
                  -40.744
                ],
                [
                  175.346,
                  -40.752
                ],
                [
                  175.371,
                  -40.727
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.396,
                  -40.758
                ],
                [
                  175.377,
                  -40.809
                ],
                [
                  175.357,
                  -40.815
                ],
                [
                  175.351,
                  -40.896
                ],
                [
                  175.27,
                  -40.938
                ],
                [
                  175.282,
                  -40.952
                ],
                [
                  175.264,
                  -40.977
                ],
                [
                  175.306,
                  -40.989
                ],
                [
                  175.243,
                  -41.064
                ],
                [
                  175.233,
                  -41.118
                ],
                [
                  175.152,
                  -41.203
                ],
                [
                  175.084,
                  -41.222
                ],
                [
                  175.083,
                  -41.284
                ],
                [
                  175.022,
                  -41.348
                ],
                [
                  174.993,
                  -41.345
                ],
                [
                  174.959,
                  -41.383
                ],
                [
                  174.983,
                  -41.402
                ],
                [
                  174.916,
                  -41.437
                ],
                [
                  174.869,
                  -41.41
                ],
                [
                  174.875,
                  -41.384
                ],
                [
                  174.848,
                  -41.359
                ],
                [
                  174.906,
                  -41.282
                ],
                [
                  174.901,
                  -41.237
                ],
                [
                  174.858,
                  -41.225
                ],
                [
                  174.786,
                  -41.265
                ],
                [
                  174.779,
                  -41.288
                ],
                [
                  174.804,
                  -41.286
                ],
                [
                  174.803,
                  -41.316
                ],
                [
                  174.826,
                  -41.284
                ],
                [
                  174.834,
                  -41.289
                ],
                [
                  174.839,
                  -41.328
                ],
                [
                  174.821,
                  -41.345
                ],
                [
                  174.799,
                  -41.329
                ],
                [
                  174.792,
                  -41.347
                ],
                [
                  174.743,
                  -41.347
                ],
                [
                  174.717,
                  -41.362
                ],
                [
                  174.66,
                  -41.341
                ],
                [
                  174.615,
                  -41.274
                ],
                [
                  174.645,
                  -41.238
                ],
                [
                  174.664,
                  -41.247
                ],
                [
                  174.714,
                  -41.219
                ],
                [
                  174.805,
                  -41.111
                ],
                [
                  174.866,
                  -41.091
                ],
                [
                  174.839,
                  -41.064
                ],
                [
                  174.846,
                  -41.05
                ],
                [
                  174.939,
                  -41
                ],
                [
                  174.969,
                  -40.956
                ],
                [
                  174.984,
                  -40.883
                ],
                [
                  175.063,
                  -40.824
                ],
                [
                  175.136,
                  -40.7
                ]
              ]
            ],
            [
              [
                [
                  174.943,
                  -40.822
                ],
                [
                  174.954,
                  -40.829
                ],
                [
                  174.935,
                  -40.853
                ],
                [
                  174.876,
                  -40.89
                ],
                [
                  174.869,
                  -40.876
                ],
                [
                  174.92,
                  -40.822
                ],
                [
                  174.943,
                  -40.822
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 16,
          RTO2017_V1: "16",
          RTO2017__1: "Tararua",
          Shape_STAr: 436458493011e-2,
          Shape_STLe: 421712.15662
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.13,
                  -40.024
                ],
                [
                  176.154,
                  -40.012
                ],
                [
                  176.214,
                  -40.018
                ],
                [
                  176.264,
                  -40.063
                ],
                [
                  176.321,
                  -40.086
                ],
                [
                  176.31,
                  -40.121
                ],
                [
                  176.379,
                  -40.158
                ],
                [
                  176.359,
                  -40.198
                ],
                [
                  176.378,
                  -40.272
                ],
                [
                  176.399,
                  -40.285
                ],
                [
                  176.389,
                  -40.323
                ],
                [
                  176.406,
                  -40.333
                ],
                [
                  176.371,
                  -40.359
                ],
                [
                  176.46,
                  -40.412
                ],
                [
                  176.492,
                  -40.412
                ],
                [
                  176.493,
                  -40.4
                ],
                [
                  176.55,
                  -40.421
                ],
                [
                  176.559,
                  -40.407
                ],
                [
                  176.587,
                  -40.431
                ],
                [
                  176.623,
                  -40.428
                ],
                [
                  176.622,
                  -40.491
                ],
                [
                  176.56,
                  -40.496
                ],
                [
                  176.493,
                  -40.531
                ],
                [
                  176.376,
                  -40.668
                ],
                [
                  176.31,
                  -40.716
                ],
                [
                  176.267,
                  -40.782
                ],
                [
                  176.272,
                  -40.745
                ],
                [
                  176.247,
                  -40.741
                ],
                [
                  176.234,
                  -40.708
                ],
                [
                  176.094,
                  -40.675
                ],
                [
                  176.082,
                  -40.716
                ],
                [
                  176.017,
                  -40.706
                ],
                [
                  175.995,
                  -40.725
                ],
                [
                  175.974,
                  -40.723
                ],
                [
                  175.975,
                  -40.738
                ],
                [
                  175.943,
                  -40.741
                ],
                [
                  175.935,
                  -40.767
                ],
                [
                  175.91,
                  -40.751
                ],
                [
                  175.872,
                  -40.778
                ],
                [
                  175.827,
                  -40.761
                ],
                [
                  175.811,
                  -40.78
                ],
                [
                  175.765,
                  -40.768
                ],
                [
                  175.791,
                  -40.726
                ],
                [
                  175.752,
                  -40.697
                ],
                [
                  175.691,
                  -40.697
                ],
                [
                  175.694,
                  -40.716
                ],
                [
                  175.628,
                  -40.753
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.689,
                  -40.466
                ],
                [
                  175.724,
                  -40.402
                ],
                [
                  175.766,
                  -40.373
                ],
                [
                  175.791,
                  -40.314
                ],
                [
                  175.771,
                  -40.306
                ],
                [
                  175.805,
                  -40.265
                ],
                [
                  175.815,
                  -40.272
                ],
                [
                  175.815,
                  -40.247
                ],
                [
                  175.828,
                  -40.262
                ],
                [
                  175.841,
                  -40.246
                ],
                [
                  175.86,
                  -40.254
                ],
                [
                  175.898,
                  -40.185
                ],
                [
                  175.979,
                  -40.142
                ],
                [
                  176.033,
                  -40.08
                ],
                [
                  176.07,
                  -40.061
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.13,
                  -40.024
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 1,
          RTO2017_V1: "01",
          RTO2017__1: "Northland",
          Shape_STAr: 132870285945e-1,
          Shape_STLe: 164798471222e-5
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  173.014,
                  -34.393
                ],
                [
                  173.048,
                  -34.412
                ],
                [
                  173.012,
                  -34.428
                ],
                [
                  173.007,
                  -34.509
                ],
                [
                  172.988,
                  -34.521
                ],
                [
                  173.011,
                  -34.623
                ],
                [
                  173.059,
                  -34.703
                ],
                [
                  173.116,
                  -34.737
                ],
                [
                  173.132,
                  -34.763
                ],
                [
                  173.155,
                  -34.766
                ],
                [
                  173.146,
                  -34.779
                ],
                [
                  173.175,
                  -34.804
                ],
                [
                  173.154,
                  -34.834
                ],
                [
                  173.184,
                  -34.863
                ],
                [
                  173.275,
                  -34.888
                ],
                [
                  173.29,
                  -34.858
                ],
                [
                  173.324,
                  -34.861
                ],
                [
                  173.386,
                  -34.838
                ],
                [
                  173.399,
                  -34.784
                ],
                [
                  173.412,
                  -34.833
                ],
                [
                  173.45,
                  -34.825
                ],
                [
                  173.441,
                  -34.836
                ],
                [
                  173.47,
                  -34.849
                ],
                [
                  173.414,
                  -34.881
                ],
                [
                  173.373,
                  -34.882
                ],
                [
                  173.381,
                  -34.939
                ],
                [
                  173.432,
                  -34.986
                ],
                [
                  173.518,
                  -34.989
                ],
                [
                  173.539,
                  -34.971
                ],
                [
                  173.527,
                  -34.944
                ],
                [
                  173.559,
                  -34.914
                ],
                [
                  173.573,
                  -34.944
                ],
                [
                  173.621,
                  -34.939
                ],
                [
                  173.644,
                  -34.966
                ],
                [
                  173.682,
                  -34.948
                ],
                [
                  173.705,
                  -34.954
                ],
                [
                  173.717,
                  -34.998
                ],
                [
                  173.777,
                  -35.008
                ],
                [
                  173.862,
                  -34.99
                ],
                [
                  173.844,
                  -34.999
                ],
                [
                  173.86,
                  -35.019
                ],
                [
                  173.885,
                  -35.022
                ],
                [
                  173.893,
                  -35.01
                ],
                [
                  173.92,
                  -35.027
                ],
                [
                  173.914,
                  -35.039
                ],
                [
                  173.939,
                  -35.053
                ],
                [
                  173.936,
                  -35.089
                ],
                [
                  173.965,
                  -35.12
                ],
                [
                  174.075,
                  -35.115
                ],
                [
                  174.098,
                  -35.151
                ],
                [
                  174.119,
                  -35.157
                ],
                [
                  174.341,
                  -35.163
                ],
                [
                  174.341,
                  -35.191
                ],
                [
                  174.318,
                  -35.195
                ],
                [
                  174.315,
                  -35.221
                ],
                [
                  174.291,
                  -35.232
                ],
                [
                  174.313,
                  -35.237
                ],
                [
                  174.293,
                  -35.25
                ],
                [
                  174.295,
                  -35.254
                ],
                [
                  174.307,
                  -35.247
                ],
                [
                  174.326,
                  -35.25
                ],
                [
                  174.297,
                  -35.256
                ],
                [
                  174.29,
                  -35.275
                ],
                [
                  174.337,
                  -35.325
                ],
                [
                  174.377,
                  -35.319
                ],
                [
                  174.363,
                  -35.436
                ],
                [
                  174.393,
                  -35.43
                ],
                [
                  174.409,
                  -35.444
                ],
                [
                  174.432,
                  -35.427
                ],
                [
                  174.428,
                  -35.456
                ],
                [
                  174.48,
                  -35.512
                ],
                [
                  174.459,
                  -35.529
                ],
                [
                  174.473,
                  -35.556
                ],
                [
                  174.511,
                  -35.556
                ],
                [
                  174.506,
                  -35.567
                ],
                [
                  174.536,
                  -35.581
                ],
                [
                  174.542,
                  -35.635
                ],
                [
                  174.517,
                  -35.63
                ],
                [
                  174.502,
                  -35.649
                ],
                [
                  174.525,
                  -35.714
                ],
                [
                  174.567,
                  -35.717
                ],
                [
                  174.552,
                  -35.728
                ],
                [
                  174.563,
                  -35.745
                ],
                [
                  174.549,
                  -35.787
                ],
                [
                  174.591,
                  -35.854
                ],
                [
                  174.531,
                  -35.862
                ],
                [
                  174.501,
                  -35.839
                ],
                [
                  174.467,
                  -35.883
                ],
                [
                  174.464,
                  -35.948
                ],
                [
                  174.492,
                  -36.008
                ],
                [
                  174.538,
                  -36.048
                ],
                [
                  174.589,
                  -36.047
                ],
                [
                  174.619,
                  -36.119
                ],
                [
                  174.585,
                  -36.143
                ],
                [
                  174.581,
                  -36.166
                ],
                [
                  174.533,
                  -36.185
                ],
                [
                  174.523,
                  -36.21
                ],
                [
                  174.484,
                  -36.23
                ],
                [
                  174.474,
                  -36.229
                ],
                [
                  174.476,
                  -36.225
                ],
                [
                  174.474,
                  -36.222
                ],
                [
                  174.476,
                  -36.22
                ],
                [
                  174.473,
                  -36.218
                ],
                [
                  174.475,
                  -36.212
                ],
                [
                  174.47,
                  -36.212
                ],
                [
                  174.465,
                  -36.26
                ],
                [
                  174.455,
                  -36.249
                ],
                [
                  174.435,
                  -36.262
                ],
                [
                  174.432,
                  -36.26
                ],
                [
                  174.43,
                  -36.259
                ],
                [
                  174.428,
                  -36.255
                ],
                [
                  174.425,
                  -36.253
                ],
                [
                  174.424,
                  -36.253
                ],
                [
                  174.425,
                  -36.267
                ],
                [
                  174.395,
                  -36.287
                ],
                [
                  174.374,
                  -36.276
                ],
                [
                  174.34,
                  -36.317
                ],
                [
                  174.275,
                  -36.286
                ],
                [
                  174.273,
                  -36.259
                ],
                [
                  174.307,
                  -36.244
                ],
                [
                  174.318,
                  -36.273
                ],
                [
                  174.332,
                  -36.263
                ],
                [
                  174.349,
                  -36.267
                ],
                [
                  174.342,
                  -36.282
                ],
                [
                  174.361,
                  -36.281
                ],
                [
                  174.322,
                  -36.234
                ],
                [
                  174.337,
                  -36.225
                ],
                [
                  174.334,
                  -36.232
                ],
                [
                  174.345,
                  -36.235
                ],
                [
                  174.339,
                  -36.226
                ],
                [
                  174.351,
                  -36.228
                ],
                [
                  174.356,
                  -36.227
                ],
                [
                  174.34,
                  -36.219
                ],
                [
                  174.368,
                  -36.204
                ],
                [
                  174.381,
                  -36.21
                ],
                [
                  174.373,
                  -36.181
                ],
                [
                  174.393,
                  -36.186
                ],
                [
                  174.391,
                  -36.175
                ],
                [
                  174.399,
                  -36.175
                ],
                [
                  174.397,
                  -36.172
                ],
                [
                  174.372,
                  -36.169
                ],
                [
                  174.401,
                  -36.157
                ],
                [
                  174.388,
                  -36.148
                ],
                [
                  174.416,
                  -36.149
                ],
                [
                  174.417,
                  -36.145
                ],
                [
                  174.418,
                  -36.152
                ],
                [
                  174.432,
                  -36.157
                ],
                [
                  174.424,
                  -36.138
                ],
                [
                  174.39,
                  -36.144
                ],
                [
                  174.364,
                  -36.117
                ],
                [
                  174.385,
                  -36.156
                ],
                [
                  174.367,
                  -36.16
                ],
                [
                  174.359,
                  -36.205
                ],
                [
                  174.315,
                  -36.226
                ],
                [
                  174.33,
                  -36.193
                ],
                [
                  174.297,
                  -36.212
                ],
                [
                  174.266,
                  -36.185
                ],
                [
                  174.301,
                  -36.183
                ],
                [
                  174.298,
                  -36.178
                ],
                [
                  174.311,
                  -36.18
                ],
                [
                  174.313,
                  -36.172
                ],
                [
                  174.286,
                  -36.179
                ],
                [
                  174.285,
                  -36.172
                ],
                [
                  174.291,
                  -36.171
                ],
                [
                  174.292,
                  -36.166
                ],
                [
                  174.295,
                  -36.165
                ],
                [
                  174.297,
                  -36.164
                ],
                [
                  174.297,
                  -36.163
                ],
                [
                  174.257,
                  -36.177
                ],
                [
                  174.244,
                  -36.166
                ],
                [
                  174.254,
                  -36.184
                ],
                [
                  174.236,
                  -36.171
                ],
                [
                  174.239,
                  -36.138
                ],
                [
                  174.255,
                  -36.118
                ],
                [
                  174.258,
                  -36.123
                ],
                [
                  174.269,
                  -36.121
                ],
                [
                  174.27,
                  -36.117
                ],
                [
                  174.256,
                  -36.112
                ],
                [
                  174.239,
                  -36.122
                ],
                [
                  174.226,
                  -36.16
                ],
                [
                  174.218,
                  -36.121
                ],
                [
                  174.235,
                  -36.116
                ],
                [
                  174.233,
                  -36.106
                ],
                [
                  174.218,
                  -36.115
                ],
                [
                  174.206,
                  -36.137
                ],
                [
                  174.201,
                  -36.125
                ],
                [
                  174.188,
                  -36.122
                ],
                [
                  174.19,
                  -36.142
                ],
                [
                  174.162,
                  -36.141
                ],
                [
                  174.199,
                  -36.151
                ],
                [
                  174.168,
                  -36.158
                ],
                [
                  174.192,
                  -36.16
                ],
                [
                  174.187,
                  -36.175
                ],
                [
                  174.21,
                  -36.159
                ],
                [
                  174.236,
                  -36.182
                ],
                [
                  174.205,
                  -36.176
                ],
                [
                  174.196,
                  -36.188
                ],
                [
                  174.195,
                  -36.196
                ],
                [
                  174.24,
                  -36.185
                ],
                [
                  174.22,
                  -36.197
                ],
                [
                  174.218,
                  -36.208
                ],
                [
                  174.232,
                  -36.215
                ],
                [
                  174.245,
                  -36.196
                ],
                [
                  174.249,
                  -36.212
                ],
                [
                  174.263,
                  -36.194
                ],
                [
                  174.266,
                  -36.219
                ],
                [
                  174.288,
                  -36.215
                ],
                [
                  174.293,
                  -36.238
                ],
                [
                  174.273,
                  -36.234
                ],
                [
                  174.237,
                  -36.263
                ],
                [
                  174.154,
                  -36.214
                ],
                [
                  174.121,
                  -36.168
                ],
                [
                  174.046,
                  -36.17
                ],
                [
                  173.99,
                  -36.124
                ],
                [
                  174.039,
                  -36.19
                ],
                [
                  174.071,
                  -36.202
                ],
                [
                  174.079,
                  -36.236
                ],
                [
                  174.108,
                  -36.25
                ],
                [
                  174.097,
                  -36.269
                ],
                [
                  174.122,
                  -36.258
                ],
                [
                  174.155,
                  -36.276
                ],
                [
                  174.157,
                  -36.291
                ],
                [
                  174.122,
                  -36.301
                ],
                [
                  174.158,
                  -36.301
                ],
                [
                  174.181,
                  -36.336
                ],
                [
                  174.181,
                  -36.365
                ],
                [
                  174.142,
                  -36.39
                ],
                [
                  174.038,
                  -36.392
                ],
                [
                  174.014,
                  -36.295
                ],
                [
                  173.967,
                  -36.209
                ],
                [
                  173.635,
                  -35.831
                ],
                [
                  173.44,
                  -35.639
                ],
                [
                  173.366,
                  -35.532
                ],
                [
                  173.162,
                  -35.315
                ],
                [
                  173.163,
                  -35.293
                ],
                [
                  173.056,
                  -35.194
                ],
                [
                  173.07,
                  -35.164
                ],
                [
                  173.135,
                  -35.177
                ],
                [
                  173.169,
                  -35.136
                ],
                [
                  173.173,
                  -35.059
                ],
                [
                  173.136,
                  -34.969
                ],
                [
                  172.85,
                  -34.628
                ],
                [
                  172.738,
                  -34.533
                ],
                [
                  172.704,
                  -34.524
                ],
                [
                  172.69,
                  -34.491
                ],
                [
                  172.643,
                  -34.477
                ],
                [
                  172.673,
                  -34.46
                ],
                [
                  172.68,
                  -34.42
                ],
                [
                  172.8,
                  -34.454
                ],
                [
                  172.852,
                  -34.434
                ],
                [
                  172.854,
                  -34.415
                ],
                [
                  172.964,
                  -34.426
                ],
                [
                  173.014,
                  -34.393
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 5,
          RTO2017_V1: "05",
          RTO2017__1: "Western Bays",
          Shape_STAr: 229241039319e-2,
          Shape_STLe: 294951.491503
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.94,
                  -37.373
                ],
                [
                  175.986,
                  -37.472
                ],
                [
                  176.15,
                  -37.624
                ],
                [
                  176.402,
                  -37.743
                ],
                [
                  176.454,
                  -37.755
                ],
                [
                  176.468,
                  -37.741
                ],
                [
                  176.603,
                  -37.83
                ],
                [
                  176.603,
                  -38.011
                ],
                [
                  176.509,
                  -37.994
                ],
                [
                  176.5,
                  -37.959
                ],
                [
                  176.469,
                  -37.967
                ],
                [
                  176.351,
                  -37.937
                ],
                [
                  176.286,
                  -37.937
                ],
                [
                  176.239,
                  -37.96
                ],
                [
                  176.098,
                  -37.962
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  176.013,
                  -37.993
                ],
                [
                  175.971,
                  -37.986
                ],
                [
                  175.941,
                  -37.93
                ],
                [
                  175.977,
                  -37.914
                ],
                [
                  175.954,
                  -37.902
                ],
                [
                  175.972,
                  -37.883
                ],
                [
                  175.936,
                  -37.881
                ],
                [
                  175.935,
                  -37.843
                ],
                [
                  175.906,
                  -37.829
                ],
                [
                  175.928,
                  -37.776
                ],
                [
                  175.841,
                  -37.642
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.831,
                  -37.537
                ],
                [
                  175.806,
                  -37.511
                ],
                [
                  175.833,
                  -37.472
                ],
                [
                  175.866,
                  -37.5
                ],
                [
                  175.899,
                  -37.496
                ],
                [
                  175.861,
                  -37.461
                ],
                [
                  175.912,
                  -37.428
                ],
                [
                  175.917,
                  -37.379
                ],
                [
                  175.94,
                  -37.373
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 12,
          RTO2017_V1: "12",
          RTO2017__1: "Taranaki",
          Shape_STAr: 794407718983e-2,
          Shape_STLe: 565800.35437
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  174.614,
                  -38.707
                ],
                [
                  174.617,
                  -38.723
                ],
                [
                  174.647,
                  -38.721
                ],
                [
                  174.654,
                  -38.733
                ],
                [
                  174.687,
                  -38.728
                ],
                [
                  174.756,
                  -38.745
                ],
                [
                  174.794,
                  -38.731
                ],
                [
                  174.863,
                  -38.775
                ],
                [
                  174.82,
                  -38.787
                ],
                [
                  174.808,
                  -38.82
                ],
                [
                  174.787,
                  -38.821
                ],
                [
                  174.828,
                  -38.91
                ],
                [
                  174.857,
                  -38.889
                ],
                [
                  174.884,
                  -38.913
                ],
                [
                  174.871,
                  -38.928
                ],
                [
                  174.885,
                  -38.969
                ],
                [
                  174.869,
                  -38.989
                ],
                [
                  174.911,
                  -38.989
                ],
                [
                  174.915,
                  -39.011
                ],
                [
                  174.96,
                  -38.995
                ],
                [
                  174.977,
                  -39.042
                ],
                [
                  174.963,
                  -39.066
                ],
                [
                  175.047,
                  -39.07
                ],
                [
                  175.07,
                  -39.106
                ],
                [
                  174.998,
                  -39.111
                ],
                [
                  175,
                  -39.129
                ],
                [
                  174.983,
                  -39.112
                ],
                [
                  174.984,
                  -39.155
                ],
                [
                  174.95,
                  -39.163
                ],
                [
                  174.959,
                  -39.171
                ],
                [
                  174.914,
                  -39.234
                ],
                [
                  174.896,
                  -39.227
                ],
                [
                  174.86,
                  -39.232
                ],
                [
                  174.813,
                  -39.314
                ],
                [
                  174.823,
                  -39.334
                ],
                [
                  174.892,
                  -39.358
                ],
                [
                  174.879,
                  -39.39
                ],
                [
                  174.866,
                  -39.389
                ],
                [
                  174.885,
                  -39.435
                ],
                [
                  174.928,
                  -39.476
                ],
                [
                  174.967,
                  -39.485
                ],
                [
                  174.97,
                  -39.525
                ],
                [
                  174.992,
                  -39.54
                ],
                [
                  174.968,
                  -39.605
                ],
                [
                  174.988,
                  -39.665
                ],
                [
                  174.93,
                  -39.683
                ],
                [
                  174.923,
                  -39.743
                ],
                [
                  174.888,
                  -39.751
                ],
                [
                  174.835,
                  -39.8
                ],
                [
                  174.803,
                  -39.803
                ],
                [
                  174.766,
                  -39.853
                ],
                [
                  174.784,
                  -39.858
                ],
                [
                  174.78,
                  -39.862
                ],
                [
                  174.734,
                  -39.869
                ],
                [
                  174.535,
                  -39.805
                ],
                [
                  174.418,
                  -39.732
                ],
                [
                  174.353,
                  -39.659
                ],
                [
                  174.297,
                  -39.626
                ],
                [
                  174.202,
                  -39.588
                ],
                [
                  173.987,
                  -39.554
                ],
                [
                  173.911,
                  -39.519
                ],
                [
                  173.793,
                  -39.413
                ],
                [
                  173.752,
                  -39.281
                ],
                [
                  173.792,
                  -39.193
                ],
                [
                  173.911,
                  -39.12
                ],
                [
                  174.004,
                  -39.085
                ],
                [
                  174.029,
                  -39.054
                ],
                [
                  174.089,
                  -39.051
                ],
                [
                  174.201,
                  -38.988
                ],
                [
                  174.365,
                  -38.993
                ],
                [
                  174.438,
                  -38.963
                ],
                [
                  174.593,
                  -38.817
                ],
                [
                  174.614,
                  -38.707
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 3,
          RTO2017_V1: "03",
          RTO2017__1: "Waikato",
          Shape_STAr: 152839372949e-1,
          Shape_STLe: 825529.815225
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.161,
                  -37.016
                ],
                [
                  175.185,
                  -37.041
                ],
                [
                  175.267,
                  -37.033
                ],
                [
                  175.262,
                  -37.066
                ],
                [
                  175.24,
                  -37.067
                ],
                [
                  175.251,
                  -37.11
                ],
                [
                  175.217,
                  -37.117
                ],
                [
                  175.243,
                  -37.14
                ],
                [
                  175.258,
                  -37.136
                ],
                [
                  175.264,
                  -37.192
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.306,
                  -37.251
                ],
                [
                  175.384,
                  -37.374
                ],
                [
                  175.396,
                  -37.439
                ],
                [
                  175.412,
                  -37.425
                ],
                [
                  175.409,
                  -37.438
                ],
                [
                  175.437,
                  -37.45
                ],
                [
                  175.521,
                  -37.42
                ],
                [
                  175.631,
                  -37.419
                ],
                [
                  175.64,
                  -37.454
                ],
                [
                  175.672,
                  -37.451
                ],
                [
                  175.706,
                  -37.469
                ],
                [
                  175.706,
                  -37.459
                ],
                [
                  175.755,
                  -37.463
                ],
                [
                  175.743,
                  -37.533
                ],
                [
                  175.765,
                  -37.523
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.841,
                  -37.642
                ],
                [
                  175.928,
                  -37.776
                ],
                [
                  175.906,
                  -37.829
                ],
                [
                  175.935,
                  -37.843
                ],
                [
                  175.936,
                  -37.881
                ],
                [
                  175.972,
                  -37.883
                ],
                [
                  175.954,
                  -37.902
                ],
                [
                  175.977,
                  -37.914
                ],
                [
                  175.941,
                  -37.93
                ],
                [
                  175.971,
                  -37.986
                ],
                [
                  176.013,
                  -37.993
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  175.982,
                  -38.139
                ],
                [
                  176.031,
                  -38.139
                ],
                [
                  176.031,
                  -38.167
                ],
                [
                  176.11,
                  -38.167
                ],
                [
                  176.15,
                  -38.218
                ],
                [
                  176.116,
                  -38.269
                ],
                [
                  176.129,
                  -38.273
                ],
                [
                  176.109,
                  -38.276
                ],
                [
                  176.138,
                  -38.288
                ],
                [
                  176.126,
                  -38.309
                ],
                [
                  176.059,
                  -38.334
                ],
                [
                  176.024,
                  -38.365
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  175.957,
                  -38.422
                ],
                [
                  175.824,
                  -38.438
                ],
                [
                  175.77,
                  -38.396
                ],
                [
                  175.781,
                  -38.362
                ],
                [
                  175.674,
                  -38.304
                ],
                [
                  175.66,
                  -38.319
                ],
                [
                  175.689,
                  -38.333
                ],
                [
                  175.699,
                  -38.379
                ],
                [
                  175.611,
                  -38.442
                ],
                [
                  175.637,
                  -38.552
                ],
                [
                  175.605,
                  -38.585
                ],
                [
                  175.542,
                  -38.598
                ],
                [
                  175.501,
                  -38.559
                ],
                [
                  175.446,
                  -38.565
                ],
                [
                  175.421,
                  -38.551
                ],
                [
                  175.336,
                  -38.582
                ],
                [
                  175.325,
                  -38.551
                ],
                [
                  175.3,
                  -38.601
                ],
                [
                  175.285,
                  -38.588
                ],
                [
                  175.213,
                  -38.639
                ],
                [
                  175.116,
                  -38.622
                ],
                [
                  175,
                  -38.666
                ],
                [
                  174.957,
                  -38.665
                ],
                [
                  174.964,
                  -38.697
                ],
                [
                  174.935,
                  -38.731
                ],
                [
                  174.938,
                  -38.75
                ],
                [
                  174.863,
                  -38.775
                ],
                [
                  174.794,
                  -38.731
                ],
                [
                  174.754,
                  -38.745
                ],
                [
                  174.687,
                  -38.728
                ],
                [
                  174.654,
                  -38.733
                ],
                [
                  174.613,
                  -38.714
                ],
                [
                  174.646,
                  -38.456
                ],
                [
                  174.635,
                  -38.387
                ],
                [
                  174.657,
                  -38.383
                ],
                [
                  174.716,
                  -38.306
                ],
                [
                  174.714,
                  -38.202
                ],
                [
                  174.681,
                  -38.11
                ],
                [
                  174.734,
                  -38.124
                ],
                [
                  174.782,
                  -38.084
                ],
                [
                  174.786,
                  -38.032
                ],
                [
                  174.81,
                  -38.008
                ],
                [
                  174.796,
                  -38.015
                ],
                [
                  174.78,
                  -37.977
                ],
                [
                  174.757,
                  -37.864
                ],
                [
                  174.777,
                  -37.831
                ],
                [
                  174.825,
                  -37.822
                ],
                [
                  174.839,
                  -37.8
                ],
                [
                  174.81,
                  -37.676
                ],
                [
                  174.748,
                  -37.505
                ],
                [
                  174.705,
                  -37.438
                ],
                [
                  174.71,
                  -37.392
                ],
                [
                  174.659,
                  -37.293
                ],
                [
                  174.7,
                  -37.262
                ],
                [
                  174.739,
                  -37.268
                ],
                [
                  174.806,
                  -37.227
                ],
                [
                  174.848,
                  -37.234
                ],
                [
                  174.85,
                  -37.251
                ],
                [
                  174.887,
                  -37.231
                ],
                [
                  174.931,
                  -37.233
                ],
                [
                  174.93,
                  -37.206
                ],
                [
                  174.948,
                  -37.196
                ],
                [
                  174.973,
                  -37.195
                ],
                [
                  174.99,
                  -37.217
                ],
                [
                  175.054,
                  -37.181
                ],
                [
                  175.074,
                  -37.195
                ],
                [
                  175.09,
                  -37.18
                ],
                [
                  175.133,
                  -37.185
                ],
                [
                  175.154,
                  -37.136
                ],
                [
                  175.141,
                  -37.099
                ],
                [
                  175.161,
                  -37.016
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 4,
          RTO2017_V1: "04",
          RTO2017__1: "Coromandel",
          Shape_STAr: 35688670484e-1,
          Shape_STLe: 778800.419478
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.369,
                  -36.469
                ],
                [
                  175.415,
                  -36.473
                ],
                [
                  175.421,
                  -36.511
                ],
                [
                  175.443,
                  -36.503
                ],
                [
                  175.476,
                  -36.535
                ],
                [
                  175.47,
                  -36.51
                ],
                [
                  175.489,
                  -36.51
                ],
                [
                  175.533,
                  -36.54
                ],
                [
                  175.523,
                  -36.595
                ],
                [
                  175.559,
                  -36.597
                ],
                [
                  175.58,
                  -36.62
                ],
                [
                  175.573,
                  -36.656
                ],
                [
                  175.627,
                  -36.723
                ],
                [
                  175.709,
                  -36.727
                ],
                [
                  175.783,
                  -36.692
                ],
                [
                  175.798,
                  -36.717
                ],
                [
                  175.822,
                  -36.721
                ],
                [
                  175.827,
                  -36.74
                ],
                [
                  175.755,
                  -36.757
                ],
                [
                  175.748,
                  -36.791
                ],
                [
                  175.734,
                  -36.795
                ],
                [
                  175.732,
                  -36.792
                ],
                [
                  175.729,
                  -36.79
                ],
                [
                  175.727,
                  -36.791
                ],
                [
                  175.726,
                  -36.788
                ],
                [
                  175.726,
                  -36.788
                ],
                [
                  175.724,
                  -36.788
                ],
                [
                  175.725,
                  -36.806
                ],
                [
                  175.703,
                  -36.806
                ],
                [
                  175.701,
                  -36.819
                ],
                [
                  175.708,
                  -36.832
                ],
                [
                  175.725,
                  -36.833
                ],
                [
                  175.771,
                  -36.82
                ],
                [
                  175.82,
                  -36.841
                ],
                [
                  175.819,
                  -36.883
                ],
                [
                  175.856,
                  -36.923
                ],
                [
                  175.843,
                  -36.964
                ],
                [
                  175.888,
                  -37.039
                ],
                [
                  175.879,
                  -37.15
                ],
                [
                  175.893,
                  -37.196
                ],
                [
                  175.877,
                  -37.204
                ],
                [
                  175.88,
                  -37.231
                ],
                [
                  175.943,
                  -37.346
                ],
                [
                  175.94,
                  -37.373
                ],
                [
                  175.917,
                  -37.379
                ],
                [
                  175.912,
                  -37.428
                ],
                [
                  175.861,
                  -37.461
                ],
                [
                  175.899,
                  -37.496
                ],
                [
                  175.866,
                  -37.5
                ],
                [
                  175.833,
                  -37.472
                ],
                [
                  175.806,
                  -37.511
                ],
                [
                  175.831,
                  -37.537
                ],
                [
                  175.812,
                  -37.564
                ],
                [
                  175.765,
                  -37.523
                ],
                [
                  175.743,
                  -37.533
                ],
                [
                  175.755,
                  -37.463
                ],
                [
                  175.706,
                  -37.459
                ],
                [
                  175.706,
                  -37.469
                ],
                [
                  175.672,
                  -37.451
                ],
                [
                  175.64,
                  -37.454
                ],
                [
                  175.631,
                  -37.419
                ],
                [
                  175.521,
                  -37.42
                ],
                [
                  175.437,
                  -37.45
                ],
                [
                  175.409,
                  -37.438
                ],
                [
                  175.412,
                  -37.425
                ],
                [
                  175.396,
                  -37.439
                ],
                [
                  175.384,
                  -37.374
                ],
                [
                  175.306,
                  -37.251
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.395,
                  -37.229
                ],
                [
                  175.501,
                  -37.194
                ],
                [
                  175.545,
                  -37.159
                ],
                [
                  175.505,
                  -37.102
                ],
                [
                  175.524,
                  -37.061
                ],
                [
                  175.499,
                  -36.974
                ],
                [
                  175.406,
                  -36.854
                ],
                [
                  175.434,
                  -36.844
                ],
                [
                  175.428,
                  -36.794
                ],
                [
                  175.481,
                  -36.734
                ],
                [
                  175.43,
                  -36.717
                ],
                [
                  175.447,
                  -36.66
                ],
                [
                  175.425,
                  -36.588
                ],
                [
                  175.345,
                  -36.554
                ],
                [
                  175.328,
                  -36.526
                ],
                [
                  175.328,
                  -36.481
                ],
                [
                  175.369,
                  -36.469
                ]
              ]
            ],
            [
              [
                [
                  175.293,
                  -37.034
                ],
                [
                  175.306,
                  -37.092
                ],
                [
                  175.295,
                  -37.123
                ],
                [
                  175.324,
                  -37.182
                ],
                [
                  175.264,
                  -37.192
                ],
                [
                  175.258,
                  -37.136
                ],
                [
                  175.243,
                  -37.14
                ],
                [
                  175.217,
                  -37.117
                ],
                [
                  175.251,
                  -37.11
                ],
                [
                  175.24,
                  -37.067
                ],
                [
                  175.262,
                  -37.066
                ],
                [
                  175.267,
                  -37.033
                ],
                [
                  175.292,
                  -37.031
                ],
                [
                  175.293,
                  -37.034
                ]
              ]
            ],
            [
              [
                [
                  175.789,
                  -36.58
                ],
                [
                  175.79,
                  -36.606
                ],
                [
                  175.834,
                  -36.626
                ],
                [
                  175.823,
                  -36.642
                ],
                [
                  175.776,
                  -36.638
                ],
                [
                  175.787,
                  -36.609
                ],
                [
                  175.773,
                  -36.592
                ],
                [
                  175.769,
                  -36.605
                ],
                [
                  175.752,
                  -36.595
                ],
                [
                  175.789,
                  -36.58
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 10,
          RTO2017_V1: "10",
          RTO2017__1: "Hawke's Bay",
          Shape_STAr: 12795739773400002e-6,
          Shape_STLe: 945189.683298
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  177.122,
                  -38.584
                ],
                [
                  177.308,
                  -38.66
                ],
                [
                  177.309,
                  -38.597
                ],
                [
                  177.353,
                  -38.625
                ],
                [
                  177.448,
                  -38.636
                ],
                [
                  177.409,
                  -38.699
                ],
                [
                  177.429,
                  -38.692
                ],
                [
                  177.466,
                  -38.706
                ],
                [
                  177.47,
                  -38.755
                ],
                [
                  177.531,
                  -38.792
                ],
                [
                  177.531,
                  -38.82
                ],
                [
                  177.561,
                  -38.802
                ],
                [
                  177.593,
                  -38.803
                ],
                [
                  177.6,
                  -38.852
                ],
                [
                  177.626,
                  -38.843
                ],
                [
                  177.637,
                  -38.871
                ],
                [
                  177.662,
                  -38.846
                ],
                [
                  177.66,
                  -38.905
                ],
                [
                  177.722,
                  -38.898
                ],
                [
                  177.729,
                  -38.919
                ],
                [
                  177.749,
                  -38.897
                ],
                [
                  177.776,
                  -38.913
                ],
                [
                  177.799,
                  -38.894
                ],
                [
                  177.805,
                  -38.912
                ],
                [
                  177.845,
                  -38.922
                ],
                [
                  177.837,
                  -38.956
                ],
                [
                  177.899,
                  -38.972
                ],
                [
                  177.886,
                  -39.024
                ],
                [
                  177.902,
                  -39.073
                ],
                [
                  178.001,
                  -39.112
                ],
                [
                  177.925,
                  -39.169
                ],
                [
                  177.906,
                  -39.226
                ],
                [
                  177.865,
                  -39.265
                ],
                [
                  177.822,
                  -39.16
                ],
                [
                  177.872,
                  -39.086
                ],
                [
                  177.843,
                  -39.059
                ],
                [
                  177.823,
                  -39.077
                ],
                [
                  177.661,
                  -39.051
                ],
                [
                  177.419,
                  -39.063
                ],
                [
                  177.259,
                  -39.101
                ],
                [
                  177.046,
                  -39.194
                ],
                [
                  177.019,
                  -39.261
                ],
                [
                  176.9,
                  -39.367
                ],
                [
                  176.873,
                  -39.456
                ],
                [
                  176.889,
                  -39.48
                ],
                [
                  176.924,
                  -39.473
                ],
                [
                  176.923,
                  -39.554
                ],
                [
                  176.966,
                  -39.623
                ],
                [
                  177.032,
                  -39.65
                ],
                [
                  177.076,
                  -39.635
                ],
                [
                  177.096,
                  -39.643
                ],
                [
                  177.015,
                  -39.732
                ],
                [
                  176.994,
                  -39.798
                ],
                [
                  177.005,
                  -39.841
                ],
                [
                  176.908,
                  -39.982
                ],
                [
                  176.87,
                  -40.13
                ],
                [
                  176.787,
                  -40.218
                ],
                [
                  176.74,
                  -40.227
                ],
                [
                  176.678,
                  -40.266
                ],
                [
                  176.673,
                  -40.322
                ],
                [
                  176.623,
                  -40.428
                ],
                [
                  176.587,
                  -40.431
                ],
                [
                  176.559,
                  -40.407
                ],
                [
                  176.55,
                  -40.421
                ],
                [
                  176.493,
                  -40.4
                ],
                [
                  176.492,
                  -40.412
                ],
                [
                  176.46,
                  -40.412
                ],
                [
                  176.371,
                  -40.359
                ],
                [
                  176.406,
                  -40.333
                ],
                [
                  176.389,
                  -40.323
                ],
                [
                  176.399,
                  -40.285
                ],
                [
                  176.378,
                  -40.272
                ],
                [
                  176.359,
                  -40.198
                ],
                [
                  176.379,
                  -40.158
                ],
                [
                  176.31,
                  -40.121
                ],
                [
                  176.321,
                  -40.086
                ],
                [
                  176.264,
                  -40.063
                ],
                [
                  176.214,
                  -40.018
                ],
                [
                  176.154,
                  -40.012
                ],
                [
                  176.13,
                  -40.024
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.124,
                  -39.948
                ],
                [
                  176.107,
                  -39.917
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176.177,
                  -39.744
                ],
                [
                  176.169,
                  -39.718
                ],
                [
                  176.201,
                  -39.673
                ],
                [
                  176.165,
                  -39.649
                ],
                [
                  176.179,
                  -39.605
                ],
                [
                  176.143,
                  -39.585
                ],
                [
                  176.17,
                  -39.582
                ],
                [
                  176.21,
                  -39.533
                ],
                [
                  176.278,
                  -39.503
                ],
                [
                  176.341,
                  -39.502
                ],
                [
                  176.337,
                  -39.488
                ],
                [
                  176.316,
                  -39.497
                ],
                [
                  176.302,
                  -39.437
                ],
                [
                  176.332,
                  -39.375
                ],
                [
                  176.265,
                  -39.349
                ],
                [
                  176.305,
                  -39.292
                ],
                [
                  176.292,
                  -39.251
                ],
                [
                  176.2,
                  -39.226
                ],
                [
                  176.176,
                  -39.144
                ],
                [
                  176.233,
                  -39.098
                ],
                [
                  176.34,
                  -39.173
                ],
                [
                  176.395,
                  -39.162
                ],
                [
                  176.37,
                  -39.133
                ],
                [
                  176.443,
                  -39.121
                ],
                [
                  176.42,
                  -39.062
                ],
                [
                  176.449,
                  -39.002
                ],
                [
                  176.61,
                  -38.998
                ],
                [
                  176.598,
                  -38.933
                ],
                [
                  176.698,
                  -38.856
                ],
                [
                  176.692,
                  -38.806
                ],
                [
                  176.714,
                  -38.728
                ],
                [
                  176.743,
                  -38.728
                ],
                [
                  176.774,
                  -38.684
                ],
                [
                  176.823,
                  -38.691
                ],
                [
                  176.887,
                  -38.667
                ],
                [
                  176.929,
                  -38.698
                ],
                [
                  176.972,
                  -38.705
                ],
                [
                  177.046,
                  -38.621
                ],
                [
                  177.077,
                  -38.611
                ],
                [
                  177.1,
                  -38.627
                ],
                [
                  177.122,
                  -38.584
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 7,
          RTO2017_V1: "07",
          RTO2017__1: "Rotorua",
          Shape_STAr: 261894532458e-2,
          Shape_STLe: 278743.543791
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.286,
                  -37.937
                ],
                [
                  176.351,
                  -37.937
                ],
                [
                  176.469,
                  -37.967
                ],
                [
                  176.5,
                  -37.959
                ],
                [
                  176.509,
                  -37.994
                ],
                [
                  176.603,
                  -38.011
                ],
                [
                  176.615,
                  -38.059
                ],
                [
                  176.604,
                  -38.121
                ],
                [
                  176.584,
                  -38.125
                ],
                [
                  176.578,
                  -38.427
                ],
                [
                  176.521,
                  -38.419
                ],
                [
                  176.505,
                  -38.402
                ],
                [
                  176.476,
                  -38.51
                ],
                [
                  176.476,
                  -38.533
                ],
                [
                  176.387,
                  -38.506
                ],
                [
                  176.359,
                  -38.569
                ],
                [
                  176.3,
                  -38.551
                ],
                [
                  176.323,
                  -38.507
                ],
                [
                  176.303,
                  -38.486
                ],
                [
                  176.229,
                  -38.522
                ],
                [
                  176.179,
                  -38.519
                ],
                [
                  176.148,
                  -38.487
                ],
                [
                  176.119,
                  -38.413
                ],
                [
                  176.028,
                  -38.386
                ],
                [
                  176.024,
                  -38.365
                ],
                [
                  176.059,
                  -38.334
                ],
                [
                  176.131,
                  -38.304
                ],
                [
                  176.138,
                  -38.288
                ],
                [
                  176.109,
                  -38.276
                ],
                [
                  176.129,
                  -38.273
                ],
                [
                  176.116,
                  -38.269
                ],
                [
                  176.15,
                  -38.218
                ],
                [
                  176.11,
                  -38.167
                ],
                [
                  176.031,
                  -38.167
                ],
                [
                  176.031,
                  -38.139
                ],
                [
                  175.982,
                  -38.139
                ],
                [
                  176.062,
                  -38.027
                ],
                [
                  176.098,
                  -37.962
                ],
                [
                  176.239,
                  -37.96
                ],
                [
                  176.286,
                  -37.937
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 15,
          RTO2017_V1: "15",
          RTO2017__1: "Manawatu",
          Shape_STAr: 29614413415700006e-7,
          Shape_STLe: 326975.003384
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.847,
                  -39.798
                ],
                [
                  175.929,
                  -39.816
                ],
                [
                  175.965,
                  -39.848
                ],
                [
                  175.985,
                  -39.85
                ],
                [
                  176,
                  -39.832
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176.107,
                  -39.917
                ],
                [
                  176.124,
                  -39.948
                ],
                [
                  176.094,
                  -39.996
                ],
                [
                  176.07,
                  -40.061
                ],
                [
                  176.033,
                  -40.08
                ],
                [
                  175.979,
                  -40.142
                ],
                [
                  175.898,
                  -40.185
                ],
                [
                  175.86,
                  -40.254
                ],
                [
                  175.841,
                  -40.246
                ],
                [
                  175.828,
                  -40.262
                ],
                [
                  175.815,
                  -40.247
                ],
                [
                  175.815,
                  -40.272
                ],
                [
                  175.805,
                  -40.265
                ],
                [
                  175.771,
                  -40.306
                ],
                [
                  175.791,
                  -40.314
                ],
                [
                  175.767,
                  -40.372
                ],
                [
                  175.724,
                  -40.402
                ],
                [
                  175.689,
                  -40.466
                ],
                [
                  175.625,
                  -40.51
                ],
                [
                  175.609,
                  -40.503
                ],
                [
                  175.584,
                  -40.53
                ],
                [
                  175.556,
                  -40.501
                ],
                [
                  175.56,
                  -40.483
                ],
                [
                  175.497,
                  -40.434
                ],
                [
                  175.471,
                  -40.437
                ],
                [
                  175.469,
                  -40.426
                ],
                [
                  175.458,
                  -40.441
                ],
                [
                  175.453,
                  -40.429
                ],
                [
                  175.426,
                  -40.438
                ],
                [
                  175.278,
                  -40.396
                ],
                [
                  175.28,
                  -40.386
                ],
                [
                  175.227,
                  -40.391
                ],
                [
                  175.222,
                  -40.286
                ],
                [
                  175.27,
                  -40.296
                ],
                [
                  175.318,
                  -40.257
                ],
                [
                  175.35,
                  -40.195
                ],
                [
                  175.399,
                  -40.186
                ],
                [
                  175.433,
                  -40.159
                ],
                [
                  175.442,
                  -40.095
                ],
                [
                  175.492,
                  -40.067
                ],
                [
                  175.507,
                  -40.029
                ],
                [
                  175.551,
                  -40.004
                ],
                [
                  175.58,
                  -40.022
                ],
                [
                  175.58,
                  -40.002
                ],
                [
                  175.63,
                  -39.977
                ],
                [
                  175.638,
                  -39.934
                ],
                [
                  175.675,
                  -39.902
                ],
                [
                  175.677,
                  -39.879
                ],
                [
                  175.718,
                  -39.88
                ],
                [
                  175.743,
                  -39.85
                ],
                [
                  175.792,
                  -39.839
                ],
                [
                  175.787,
                  -39.812
                ],
                [
                  175.847,
                  -39.798
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 9,
          RTO2017_V1: "09",
          RTO2017__1: "Gisborne",
          Shape_STAr: 114858953837e-1,
          Shape_STLe: 693315.029563
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  178.008,
                  -37.553
                ],
                [
                  178.037,
                  -37.542
                ],
                [
                  178.164,
                  -37.553
                ],
                [
                  178.175,
                  -37.534
                ],
                [
                  178.314,
                  -37.556
                ],
                [
                  178.294,
                  -37.584
                ],
                [
                  178.301,
                  -37.596
                ],
                [
                  178.325,
                  -37.591
                ],
                [
                  178.316,
                  -37.602
                ],
                [
                  178.341,
                  -37.622
                ],
                [
                  178.481,
                  -37.64
                ],
                [
                  178.55,
                  -37.692
                ],
                [
                  178.45,
                  -37.813
                ],
                [
                  178.452,
                  -37.833
                ],
                [
                  178.413,
                  -37.859
                ],
                [
                  178.387,
                  -37.919
                ],
                [
                  178.391,
                  -37.961
                ],
                [
                  178.337,
                  -38.009
                ],
                [
                  178.337,
                  -38.037
                ],
                [
                  178.372,
                  -38.05
                ],
                [
                  178.374,
                  -38.094
                ],
                [
                  178.322,
                  -38.122
                ],
                [
                  178.318,
                  -38.139
                ],
                [
                  178.368,
                  -38.176
                ],
                [
                  178.31,
                  -38.233
                ],
                [
                  178.335,
                  -38.283
                ],
                [
                  178.359,
                  -38.289
                ],
                [
                  178.326,
                  -38.305
                ],
                [
                  178.33,
                  -38.352
                ],
                [
                  178.306,
                  -38.363
                ],
                [
                  178.318,
                  -38.383
                ],
                [
                  178.34,
                  -38.379
                ],
                [
                  178.347,
                  -38.416
                ],
                [
                  178.28,
                  -38.475
                ],
                [
                  178.292,
                  -38.529
                ],
                [
                  178.203,
                  -38.587
                ],
                [
                  178.147,
                  -38.652
                ],
                [
                  178.125,
                  -38.651
                ],
                [
                  178.08,
                  -38.678
                ],
                [
                  178.07,
                  -38.708
                ],
                [
                  178.015,
                  -38.671
                ],
                [
                  177.952,
                  -38.698
                ],
                [
                  177.935,
                  -38.75
                ],
                [
                  177.972,
                  -38.758
                ],
                [
                  177.929,
                  -38.787
                ],
                [
                  177.912,
                  -38.828
                ],
                [
                  177.92,
                  -38.867
                ],
                [
                  177.903,
                  -38.888
                ],
                [
                  177.897,
                  -38.973
                ],
                [
                  177.837,
                  -38.956
                ],
                [
                  177.845,
                  -38.922
                ],
                [
                  177.805,
                  -38.912
                ],
                [
                  177.799,
                  -38.894
                ],
                [
                  177.776,
                  -38.913
                ],
                [
                  177.749,
                  -38.897
                ],
                [
                  177.729,
                  -38.919
                ],
                [
                  177.722,
                  -38.898
                ],
                [
                  177.66,
                  -38.905
                ],
                [
                  177.662,
                  -38.846
                ],
                [
                  177.638,
                  -38.871
                ],
                [
                  177.626,
                  -38.843
                ],
                [
                  177.6,
                  -38.852
                ],
                [
                  177.593,
                  -38.803
                ],
                [
                  177.561,
                  -38.802
                ],
                [
                  177.531,
                  -38.82
                ],
                [
                  177.531,
                  -38.792
                ],
                [
                  177.47,
                  -38.755
                ],
                [
                  177.466,
                  -38.706
                ],
                [
                  177.429,
                  -38.692
                ],
                [
                  177.409,
                  -38.699
                ],
                [
                  177.448,
                  -38.636
                ],
                [
                  177.353,
                  -38.625
                ],
                [
                  177.309,
                  -38.597
                ],
                [
                  177.308,
                  -38.66
                ],
                [
                  177.122,
                  -38.584
                ],
                [
                  177.167,
                  -38.578
                ],
                [
                  177.207,
                  -38.514
                ],
                [
                  177.182,
                  -38.488
                ],
                [
                  177.204,
                  -38.386
                ],
                [
                  177.24,
                  -38.364
                ],
                [
                  177.238,
                  -38.347
                ],
                [
                  177.215,
                  -38.342
                ],
                [
                  177.229,
                  -38.287
                ],
                [
                  177.207,
                  -38.264
                ],
                [
                  177.168,
                  -38.263
                ],
                [
                  177.145,
                  -38.227
                ],
                [
                  177.159,
                  -38.12
                ],
                [
                  177.173,
                  -38.115
                ],
                [
                  177.163,
                  -38.083
                ],
                [
                  177.133,
                  -38.076
                ],
                [
                  177.102,
                  -38.025
                ],
                [
                  177.157,
                  -37.987
                ],
                [
                  177.387,
                  -37.985
                ],
                [
                  177.486,
                  -37.95
                ],
                [
                  177.486,
                  -37.935
                ],
                [
                  177.53,
                  -37.92
                ],
                [
                  177.584,
                  -37.867
                ],
                [
                  177.613,
                  -37.812
                ],
                [
                  177.651,
                  -37.805
                ],
                [
                  177.684,
                  -37.76
                ],
                [
                  177.671,
                  -37.739
                ],
                [
                  177.708,
                  -37.723
                ],
                [
                  177.728,
                  -37.68
                ],
                [
                  177.788,
                  -37.681
                ],
                [
                  177.816,
                  -37.658
                ],
                [
                  177.864,
                  -37.657
                ],
                [
                  177.904,
                  -37.605
                ],
                [
                  177.92,
                  -37.62
                ],
                [
                  177.957,
                  -37.613
                ],
                [
                  177.993,
                  -37.572
                ],
                [
                  177.981,
                  -37.537
                ],
                [
                  178.008,
                  -37.553
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 17,
          RTO2017_V1: "17",
          RTO2017__1: "Wairarapa",
          Shape_STAr: 5938005663259999e-6,
          Shape_STLe: 455199.155947
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.094,
                  -40.675
                ],
                [
                  176.234,
                  -40.708
                ],
                [
                  176.247,
                  -40.741
                ],
                [
                  176.272,
                  -40.745
                ],
                [
                  176.267,
                  -40.782
                ],
                [
                  176.22,
                  -40.886
                ],
                [
                  176.23,
                  -40.904
                ],
                [
                  176.146,
                  -40.957
                ],
                [
                  176.063,
                  -41.13
                ],
                [
                  176.004,
                  -41.171
                ],
                [
                  175.963,
                  -41.245
                ],
                [
                  175.883,
                  -41.274
                ],
                [
                  175.863,
                  -41.317
                ],
                [
                  175.811,
                  -41.361
                ],
                [
                  175.674,
                  -41.414
                ],
                [
                  175.585,
                  -41.487
                ],
                [
                  175.534,
                  -41.496
                ],
                [
                  175.432,
                  -41.572
                ],
                [
                  175.366,
                  -41.572
                ],
                [
                  175.325,
                  -41.606
                ],
                [
                  175.291,
                  -41.614
                ],
                [
                  175.237,
                  -41.608
                ],
                [
                  175.218,
                  -41.54
                ],
                [
                  175.195,
                  -41.527
                ],
                [
                  175.214,
                  -41.429
                ],
                [
                  175.049,
                  -41.374
                ],
                [
                  174.983,
                  -41.402
                ],
                [
                  174.959,
                  -41.383
                ],
                [
                  174.993,
                  -41.345
                ],
                [
                  175.022,
                  -41.348
                ],
                [
                  175.083,
                  -41.284
                ],
                [
                  175.084,
                  -41.222
                ],
                [
                  175.152,
                  -41.203
                ],
                [
                  175.233,
                  -41.117
                ],
                [
                  175.243,
                  -41.064
                ],
                [
                  175.306,
                  -40.989
                ],
                [
                  175.264,
                  -40.977
                ],
                [
                  175.282,
                  -40.952
                ],
                [
                  175.27,
                  -40.938
                ],
                [
                  175.351,
                  -40.896
                ],
                [
                  175.357,
                  -40.815
                ],
                [
                  175.377,
                  -40.809
                ],
                [
                  175.396,
                  -40.759
                ],
                [
                  175.44,
                  -40.744
                ],
                [
                  175.473,
                  -40.693
                ],
                [
                  175.628,
                  -40.753
                ],
                [
                  175.694,
                  -40.716
                ],
                [
                  175.691,
                  -40.697
                ],
                [
                  175.752,
                  -40.697
                ],
                [
                  175.791,
                  -40.726
                ],
                [
                  175.765,
                  -40.768
                ],
                [
                  175.811,
                  -40.78
                ],
                [
                  175.827,
                  -40.761
                ],
                [
                  175.849,
                  -40.762
                ],
                [
                  175.872,
                  -40.778
                ],
                [
                  175.91,
                  -40.751
                ],
                [
                  175.935,
                  -40.767
                ],
                [
                  175.943,
                  -40.741
                ],
                [
                  175.975,
                  -40.738
                ],
                [
                  175.974,
                  -40.723
                ],
                [
                  175.995,
                  -40.725
                ],
                [
                  176.017,
                  -40.706
                ],
                [
                  176.082,
                  -40.716
                ],
                [
                  176.094,
                  -40.675
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 14,
          RTO2017_V1: "14",
          RTO2017__1: "Rangitikei",
          Shape_STAr: 448374058789e-2,
          Shape_STLe: 620789.129236
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  176.149,
                  -39.136
                ],
                [
                  176.177,
                  -39.145
                ],
                [
                  176.2,
                  -39.226
                ],
                [
                  176.29,
                  -39.247
                ],
                [
                  176.305,
                  -39.292
                ],
                [
                  176.265,
                  -39.349
                ],
                [
                  176.332,
                  -39.375
                ],
                [
                  176.302,
                  -39.437
                ],
                [
                  176.316,
                  -39.497
                ],
                [
                  176.337,
                  -39.488
                ],
                [
                  176.341,
                  -39.502
                ],
                [
                  176.278,
                  -39.503
                ],
                [
                  176.21,
                  -39.533
                ],
                [
                  176.17,
                  -39.582
                ],
                [
                  176.143,
                  -39.585
                ],
                [
                  176.179,
                  -39.605
                ],
                [
                  176.165,
                  -39.649
                ],
                [
                  176.201,
                  -39.673
                ],
                [
                  176.169,
                  -39.718
                ],
                [
                  176.177,
                  -39.744
                ],
                [
                  176.117,
                  -39.887
                ],
                [
                  176,
                  -39.832
                ],
                [
                  175.985,
                  -39.85
                ],
                [
                  175.964,
                  -39.848
                ],
                [
                  175.929,
                  -39.816
                ],
                [
                  175.847,
                  -39.798
                ],
                [
                  175.787,
                  -39.812
                ],
                [
                  175.792,
                  -39.839
                ],
                [
                  175.743,
                  -39.85
                ],
                [
                  175.718,
                  -39.88
                ],
                [
                  175.677,
                  -39.879
                ],
                [
                  175.675,
                  -39.902
                ],
                [
                  175.638,
                  -39.934
                ],
                [
                  175.633,
                  -39.974
                ],
                [
                  175.58,
                  -40.002
                ],
                [
                  175.58,
                  -40.021
                ],
                [
                  175.551,
                  -40.004
                ],
                [
                  175.506,
                  -40.03
                ],
                [
                  175.492,
                  -40.067
                ],
                [
                  175.442,
                  -40.095
                ],
                [
                  175.433,
                  -40.159
                ],
                [
                  175.399,
                  -40.186
                ],
                [
                  175.35,
                  -40.195
                ],
                [
                  175.318,
                  -40.257
                ],
                [
                  175.27,
                  -40.296
                ],
                [
                  175.222,
                  -40.286
                ],
                [
                  175.18,
                  -40.143
                ],
                [
                  175.099,
                  -40.041
                ],
                [
                  175.112,
                  -40.028
                ],
                [
                  175.122,
                  -40.037
                ],
                [
                  175.145,
                  -40.007
                ],
                [
                  175.223,
                  -39.993
                ],
                [
                  175.236,
                  -39.967
                ],
                [
                  175.266,
                  -39.974
                ],
                [
                  175.286,
                  -39.936
                ],
                [
                  175.269,
                  -39.932
                ],
                [
                  175.278,
                  -39.918
                ],
                [
                  175.293,
                  -39.924
                ],
                [
                  175.279,
                  -39.909
                ],
                [
                  175.295,
                  -39.88
                ],
                [
                  175.274,
                  -39.878
                ],
                [
                  175.29,
                  -39.86
                ],
                [
                  175.349,
                  -39.873
                ],
                [
                  175.386,
                  -39.832
                ],
                [
                  175.453,
                  -39.822
                ],
                [
                  175.515,
                  -39.681
                ],
                [
                  175.462,
                  -39.642
                ],
                [
                  175.506,
                  -39.581
                ],
                [
                  175.488,
                  -39.579
                ],
                [
                  175.488,
                  -39.545
                ],
                [
                  175.592,
                  -39.543
                ],
                [
                  175.596,
                  -39.522
                ],
                [
                  175.643,
                  -39.525
                ],
                [
                  175.658,
                  -39.549
                ],
                [
                  175.684,
                  -39.544
                ],
                [
                  175.713,
                  -39.574
                ],
                [
                  175.789,
                  -39.526
                ],
                [
                  175.835,
                  -39.528
                ],
                [
                  175.845,
                  -39.51
                ],
                [
                  175.866,
                  -39.521
                ],
                [
                  175.901,
                  -39.501
                ],
                [
                  175.893,
                  -39.412
                ],
                [
                  176.008,
                  -39.415
                ],
                [
                  176.029,
                  -39.356
                ],
                [
                  175.976,
                  -39.356
                ],
                [
                  175.976,
                  -39.287
                ],
                [
                  176.005,
                  -39.283
                ],
                [
                  175.958,
                  -39.258
                ],
                [
                  175.886,
                  -39.296
                ],
                [
                  175.829,
                  -39.289
                ],
                [
                  175.868,
                  -39.263
                ],
                [
                  175.855,
                  -39.244
                ],
                [
                  175.893,
                  -39.224
                ],
                [
                  175.886,
                  -39.206
                ],
                [
                  175.96,
                  -39.184
                ],
                [
                  175.976,
                  -39.15
                ],
                [
                  176.081,
                  -39.157
                ],
                [
                  176.149,
                  -39.136
                ]
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          OBJECTID: 2,
          RTO2017_V1: "02",
          RTO2017__1: "Auckland",
          Shape_STAr: 161566119855e-1,
          Shape_STLe: 659677.328142
        },
        geometry: {
          type: "MultiPolygon",
          coordinates: [
            [
              [
                [
                  175.084,
                  -35.7
                ],
                [
                  175.217,
                  -35.716
                ],
                [
                  175.323,
                  -35.771
                ],
                [
                  175.379,
                  -35.825
                ],
                [
                  175.485,
                  -35.834
                ],
                [
                  175.571,
                  -35.873
                ],
                [
                  175.742,
                  -36.04
                ],
                [
                  175.763,
                  -36.11
                ],
                [
                  175.755,
                  -36.186
                ],
                [
                  175.779,
                  -36.228
                ],
                [
                  175.903,
                  -36.258
                ],
                [
                  175.628,
                  -36.385
                ],
                [
                  175.417,
                  -36.38
                ],
                [
                  175.251,
                  -36.4
                ],
                [
                  175.163,
                  -36.524
                ],
                [
                  175.267,
                  -36.704
                ],
                [
                  175.311,
                  -36.838
                ],
                [
                  175.379,
                  -36.963
                ],
                [
                  175.389,
                  -37.022
                ],
                [
                  175.185,
                  -37.041
                ],
                [
                  175.161,
                  -37.016
                ],
                [
                  175.141,
                  -37.099
                ],
                [
                  175.154,
                  -37.136
                ],
                [
                  175.133,
                  -37.185
                ],
                [
                  175.09,
                  -37.18
                ],
                [
                  175.074,
                  -37.195
                ],
                [
                  175.054,
                  -37.181
                ],
                [
                  174.99,
                  -37.217
                ],
                [
                  174.973,
                  -37.195
                ],
                [
                  174.948,
                  -37.196
                ],
                [
                  174.93,
                  -37.206
                ],
                [
                  174.931,
                  -37.233
                ],
                [
                  174.887,
                  -37.231
                ],
                [
                  174.85,
                  -37.251
                ],
                [
                  174.848,
                  -37.234
                ],
                [
                  174.806,
                  -37.227
                ],
                [
                  174.739,
                  -37.268
                ],
                [
                  174.7,
                  -37.262
                ],
                [
                  174.659,
                  -37.293
                ],
                [
                  174.426,
                  -37.363
                ],
                [
                  174.339,
                  -37.214
                ],
                [
                  174.253,
                  -37.132
                ],
                [
                  174.17,
                  -36.867
                ],
                [
                  174.141,
                  -36.822
                ],
                [
                  173.994,
                  -36.639
                ],
                [
                  173.897,
                  -36.559
                ],
                [
                  174.193,
                  -36.402
                ],
                [
                  174.239,
                  -36.296
                ],
                [
                  174.342,
                  -36.32
                ],
                [
                  174.455,
                  -36.249
                ],
                [
                  174.465,
                  -36.26
                ],
                [
                  174.484,
                  -36.23
                ],
                [
                  174.523,
                  -36.21
                ],
                [
                  174.535,
                  -36.184
                ],
                [
                  174.581,
                  -36.166
                ],
                [
                  174.585,
                  -36.143
                ],
                [
                  174.806,
                  -35.988
                ],
                [
                  174.893,
                  -35.866
                ],
                [
                  174.911,
                  -35.713
                ],
                [
                  174.932,
                  -35.725
                ],
                [
                  175.007,
                  -35.702
                ],
                [
                  175.084,
                  -35.7
                ]
              ]
            ]
          ]
        }
      }
    ];
    northisland = {
      type,
      name,
      crs,
      features
    };
  }
});

// .svelte-kit/output/server/chunks/index-76d00731.js
var index_76d00731_exports = {};
__export(index_76d00731_exports, {
  default: () => Routes
});
function equalEarthRaw(lambda, phi) {
  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}
function geoEqualEarth() {
  return projection(equalEarthRaw).scale(177.158);
}
var A1, A2, A3, A4, M, iterations, type2, name2, crs2, features2, coastline, SSRPrism, css$7, MinimumViable, css$6, SelectAreas1, css$5, ClickableAreas, css$4, ColorStyle, css$3, Projection, css$2, SelectAreas2, css$1, LayerBehavior, css2, Routes;
var init_index_76d00731 = __esm({
  ".svelte-kit/output/server/chunks/index-76d00731.js"() {
    init_shims();
    init_app_ca4b120c();
    init_rto2017_ni_simplified_3dp_geojson_b549cdc6();
    A1 = 1.340264;
    A2 = -0.081106;
    A3 = 893e-6;
    A4 = 3796e-6;
    M = sqrt(3) / 2;
    iterations = 12;
    equalEarthRaw.invert = function(x, y) {
      var l = y, l2 = l * l, l6 = l2 * l2 * l2;
      for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
        fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
        fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
        l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
        if (abs(delta) < epsilon2$1)
          break;
      }
      return [
        M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),
        asin(sin(l) / M)
      ];
    };
    type2 = "FeatureCollection";
    name2 = "a4_coastline_simplified_3dp";
    crs2 = {
      type: "name",
      properties: {
        name: "urn:ogc:def:crs:OGC:1.3:CRS84"
      }
    };
    features2 = [
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                167.87,
                -46.684
              ],
              [
                167.978,
                -46.721
              ],
              [
                168.004,
                -46.79
              ],
              [
                168.091,
                -46.832
              ],
              [
                168.076,
                -46.854
              ],
              [
                168.145,
                -46.861
              ],
              [
                168.126,
                -46.875
              ],
              [
                168.15,
                -46.88
              ],
              [
                168.123,
                -46.893
              ],
              [
                168.131,
                -46.9
              ],
              [
                168.164,
                -46.896
              ],
              [
                168.14,
                -46.912
              ],
              [
                168.071,
                -46.908
              ],
              [
                168.068,
                -46.895
              ],
              [
                168.067,
                -46.907
              ],
              [
                168.042,
                -46.902
              ],
              [
                168.063,
                -46.917
              ],
              [
                168.047,
                -46.92
              ],
              [
                168.012,
                -46.903
              ],
              [
                168.032,
                -46.898
              ],
              [
                168.008,
                -46.869
              ],
              [
                167.991,
                -46.871
              ],
              [
                168.002,
                -46.895
              ],
              [
                167.976,
                -46.891
              ],
              [
                167.963,
                -46.894
              ],
              [
                167.952,
                -46.896
              ],
              [
                167.971,
                -46.901
              ],
              [
                167.979,
                -46.929
              ],
              [
                167.95,
                -46.938
              ],
              [
                167.915,
                -46.972
              ],
              [
                167.893,
                -46.978
              ],
              [
                167.886,
                -46.982
              ],
              [
                167.887,
                -46.984
              ],
              [
                167.964,
                -46.954
              ],
              [
                167.987,
                -46.929
              ],
              [
                168.014,
                -46.924
              ],
              [
                168.023,
                -46.951
              ],
              [
                168.131,
                -46.959
              ],
              [
                168.075,
                -46.991
              ],
              [
                168.139,
                -46.991
              ],
              [
                168.143,
                -46.969
              ],
              [
                168.174,
                -46.971
              ],
              [
                168.168,
                -46.938
              ],
              [
                168.194,
                -46.921
              ],
              [
                168.177,
                -46.942
              ],
              [
                168.178,
                -46.974
              ],
              [
                168.216,
                -46.994
              ],
              [
                168.209,
                -47.015
              ],
              [
                168.223,
                -47.013
              ],
              [
                168.229,
                -47.016
              ],
              [
                168.202,
                -47.028
              ],
              [
                168.219,
                -47.035
              ],
              [
                168.198,
                -47.052
              ],
              [
                168.211,
                -47.066
              ],
              [
                168.195,
                -47.064
              ],
              [
                168.175,
                -47.045
              ],
              [
                168.161,
                -47.042
              ],
              [
                168.176,
                -47.058
              ],
              [
                168.151,
                -47.067
              ],
              [
                168.207,
                -47.079
              ],
              [
                168.22,
                -47.097
              ],
              [
                168.141,
                -47.078
              ],
              [
                168.157,
                -47.107
              ],
              [
                168.146,
                -47.118
              ],
              [
                168.132,
                -47.103
              ],
              [
                168.075,
                -47.094
              ],
              [
                168.075,
                -47.087
              ],
              [
                168.067,
                -47.084
              ],
              [
                168.069,
                -47.076
              ],
              [
                168.055,
                -47.076
              ],
              [
                168.072,
                -47.094
              ],
              [
                168.135,
                -47.119
              ],
              [
                168.071,
                -47.103
              ],
              [
                168.031,
                -47.128
              ],
              [
                168.003,
                -47.122
              ],
              [
                167.993,
                -47.112
              ],
              [
                167.991,
                -47.112
              ],
              [
                167.988,
                -47.112
              ],
              [
                167.997,
                -47.125
              ],
              [
                167.982,
                -47.134
              ],
              [
                167.95,
                -47.128
              ],
              [
                167.897,
                -47.17
              ],
              [
                167.866,
                -47.168
              ],
              [
                167.866,
                -47.181
              ],
              [
                167.82,
                -47.192
              ],
              [
                167.758,
                -47.171
              ],
              [
                167.722,
                -47.182
              ],
              [
                167.72,
                -47.166
              ],
              [
                167.697,
                -47.151
              ],
              [
                167.686,
                -47.171
              ],
              [
                167.661,
                -47.166
              ],
              [
                167.675,
                -47.194
              ],
              [
                167.652,
                -47.205
              ],
              [
                167.636,
                -47.198
              ],
              [
                167.656,
                -47.187
              ],
              [
                167.598,
                -47.196
              ],
              [
                167.639,
                -47.205
              ],
              [
                167.606,
                -47.21
              ],
              [
                167.597,
                -47.218
              ],
              [
                167.609,
                -47.225
              ],
              [
                167.578,
                -47.237
              ],
              [
                167.553,
                -47.233
              ],
              [
                167.621,
                -47.245
              ],
              [
                167.651,
                -47.221
              ],
              [
                167.662,
                -47.229
              ],
              [
                167.658,
                -47.237
              ],
              [
                167.651,
                -47.239
              ],
              [
                167.649,
                -47.242
              ],
              [
                167.644,
                -47.244
              ],
              [
                167.645,
                -47.244
              ],
              [
                167.641,
                -47.246
              ],
              [
                167.637,
                -47.249
              ],
              [
                167.657,
                -47.244
              ],
              [
                167.646,
                -47.264
              ],
              [
                167.61,
                -47.271
              ],
              [
                167.617,
                -47.248
              ],
              [
                167.594,
                -47.245
              ],
              [
                167.573,
                -47.279
              ],
              [
                167.54,
                -47.29
              ],
              [
                167.49,
                -47.285
              ],
              [
                167.492,
                -47.27
              ],
              [
                167.454,
                -47.277
              ],
              [
                167.467,
                -47.216
              ],
              [
                167.498,
                -47.198
              ],
              [
                167.519,
                -47.204
              ],
              [
                167.522,
                -47.189
              ],
              [
                167.576,
                -47.166
              ],
              [
                167.573,
                -47.148
              ],
              [
                167.555,
                -47.156
              ],
              [
                167.59,
                -47.114
              ],
              [
                167.568,
                -47.113
              ],
              [
                167.56,
                -47.091
              ],
              [
                167.62,
                -47.042
              ],
              [
                167.728,
                -47.053
              ],
              [
                167.692,
                -47.034
              ],
              [
                167.686,
                -47.015
              ],
              [
                167.7,
                -47.003
              ],
              [
                167.669,
                -46.977
              ],
              [
                167.733,
                -46.957
              ],
              [
                167.771,
                -46.923
              ],
              [
                167.751,
                -46.848
              ],
              [
                167.7,
                -46.796
              ],
              [
                167.719,
                -46.785
              ],
              [
                167.704,
                -46.755
              ],
              [
                167.725,
                -46.728
              ],
              [
                167.72,
                -46.714
              ],
              [
                167.786,
                -46.687
              ],
              [
                167.834,
                -46.703
              ],
              [
                167.87,
                -46.684
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                166.679,
                -45.6
              ],
              [
                166.717,
                -45.625
              ],
              [
                166.724,
                -45.698
              ],
              [
                166.718,
                -45.725
              ],
              [
                166.685,
                -45.748
              ],
              [
                166.663,
                -45.752
              ],
              [
                166.648,
                -45.714
              ],
              [
                166.647,
                -45.74
              ],
              [
                166.626,
                -45.749
              ],
              [
                166.597,
                -45.756
              ],
              [
                166.59,
                -45.754
              ],
              [
                166.58,
                -45.732
              ],
              [
                166.609,
                -45.736
              ],
              [
                166.563,
                -45.715
              ],
              [
                166.583,
                -45.696
              ],
              [
                166.546,
                -45.698
              ],
              [
                166.581,
                -45.691
              ],
              [
                166.555,
                -45.683
              ],
              [
                166.552,
                -45.651
              ],
              [
                166.541,
                -45.682
              ],
              [
                166.451,
                -45.744
              ],
              [
                166.444,
                -45.739
              ],
              [
                166.538,
                -45.627
              ],
              [
                166.554,
                -45.631
              ],
              [
                166.553,
                -45.649
              ],
              [
                166.583,
                -45.611
              ],
              [
                166.679,
                -45.6
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                171.144,
                -44.94
              ],
              [
                171.082,
                -45.021
              ],
              [
                170.98,
                -45.092
              ],
              [
                170.983,
                -45.121
              ],
              [
                170.919,
                -45.157
              ],
              [
                170.864,
                -45.238
              ],
              [
                170.824,
                -45.327
              ],
              [
                170.836,
                -45.359
              ],
              [
                170.863,
                -45.357
              ],
              [
                170.869,
                -45.39
              ],
              [
                170.819,
                -45.424
              ],
              [
                170.81,
                -45.457
              ],
              [
                170.831,
                -45.473
              ],
              [
                170.754,
                -45.534
              ],
              [
                170.707,
                -45.611
              ],
              [
                170.694,
                -45.619
              ],
              [
                170.674,
                -45.598
              ],
              [
                170.682,
                -45.612
              ],
              [
                170.663,
                -45.64
              ],
              [
                170.658,
                -45.628
              ],
              [
                170.648,
                -45.621
              ],
              [
                170.646,
                -45.622
              ],
              [
                170.659,
                -45.642
              ],
              [
                170.67,
                -45.638
              ],
              [
                170.674,
                -45.64
              ],
              [
                170.61,
                -45.696
              ],
              [
                170.602,
                -45.728
              ],
              [
                170.589,
                -45.713
              ],
              [
                170.571,
                -45.722
              ],
              [
                170.569,
                -45.746
              ],
              [
                170.618,
                -45.734
              ],
              [
                170.626,
                -45.763
              ],
              [
                170.639,
                -45.738
              ],
              [
                170.661,
                -45.76
              ],
              [
                170.692,
                -45.755
              ],
              [
                170.701,
                -45.77
              ],
              [
                170.712,
                -45.776
              ],
              [
                170.708,
                -45.779
              ],
              [
                170.717,
                -45.783
              ],
              [
                170.718,
                -45.787
              ],
              [
                170.629,
                -45.796
              ],
              [
                170.618,
                -45.828
              ],
              [
                170.605,
                -45.821
              ],
              [
                170.567,
                -45.863
              ],
              [
                170.506,
                -45.88
              ],
              [
                170.518,
                -45.894
              ],
              [
                170.532,
                -45.88
              ],
              [
                170.575,
                -45.879
              ],
              [
                170.597,
                -45.869
              ],
              [
                170.603,
                -45.845
              ],
              [
                170.651,
                -45.839
              ],
              [
                170.642,
                -45.824
              ],
              [
                170.672,
                -45.833
              ],
              [
                170.669,
                -45.815
              ],
              [
                170.721,
                -45.798
              ],
              [
                170.728,
                -45.772
              ],
              [
                170.751,
                -45.805
              ],
              [
                170.732,
                -45.845
              ],
              [
                170.749,
                -45.846
              ],
              [
                170.748,
                -45.873
              ],
              [
                170.687,
                -45.862
              ],
              [
                170.687,
                -45.892
              ],
              [
                170.663,
                -45.904
              ],
              [
                170.498,
                -45.911
              ],
              [
                170.298,
                -45.962
              ],
              [
                170.212,
                -46.052
              ],
              [
                170.192,
                -46.053
              ],
              [
                170.2,
                -46.092
              ],
              [
                170.171,
                -46.153
              ],
              [
                170.01,
                -46.238
              ],
              [
                169.973,
                -46.272
              ],
              [
                169.798,
                -46.355
              ],
              [
                169.78,
                -46.398
              ],
              [
                169.8,
                -46.412
              ],
              [
                169.794,
                -46.435
              ],
              [
                169.819,
                -46.45
              ],
              [
                169.781,
                -46.453
              ],
              [
                169.753,
                -46.483
              ],
              [
                169.746,
                -46.476
              ],
              [
                169.638,
                -46.469
              ],
              [
                169.614,
                -46.481
              ],
              [
                169.63,
                -46.49
              ],
              [
                169.695,
                -46.485
              ],
              [
                169.723,
                -46.49
              ],
              [
                169.693,
                -46.51
              ],
              [
                169.698,
                -46.52
              ],
              [
                169.617,
                -46.54
              ],
              [
                169.585,
                -46.578
              ],
              [
                169.562,
                -46.561
              ],
              [
                169.477,
                -46.561
              ],
              [
                169.468,
                -46.581
              ],
              [
                169.433,
                -46.592
              ],
              [
                169.447,
                -46.606
              ],
              [
                169.438,
                -46.613
              ],
              [
                169.379,
                -46.607
              ],
              [
                169.356,
                -46.62
              ],
              [
                169.36,
                -46.637
              ],
              [
                169.281,
                -46.622
              ],
              [
                169.204,
                -46.662
              ],
              [
                169.17,
                -46.657
              ],
              [
                169.136,
                -46.646
              ],
              [
                169.151,
                -46.646
              ],
              [
                169.171,
                -46.624
              ],
              [
                169.129,
                -46.603
              ],
              [
                169.141,
                -46.63
              ],
              [
                169.127,
                -46.639
              ],
              [
                169.141,
                -46.639
              ],
              [
                169.143,
                -46.642
              ],
              [
                169.067,
                -46.671
              ],
              [
                168.847,
                -46.661
              ],
              [
                168.824,
                -46.626
              ],
              [
                168.829,
                -46.605
              ],
              [
                168.77,
                -46.575
              ],
              [
                168.603,
                -46.552
              ],
              [
                168.548,
                -46.557
              ],
              [
                168.59,
                -46.583
              ],
              [
                168.566,
                -46.592
              ],
              [
                168.583,
                -46.587
              ],
              [
                168.592,
                -46.586
              ],
              [
                168.518,
                -46.607
              ],
              [
                168.368,
                -46.602
              ],
              [
                168.376,
                -46.583
              ],
              [
                168.418,
                -46.571
              ],
              [
                168.439,
                -46.587
              ],
              [
                168.53,
                -46.592
              ],
              [
                168.516,
                -46.574
              ],
              [
                168.45,
                -46.56
              ],
              [
                168.378,
                -46.574
              ],
              [
                168.362,
                -46.556
              ],
              [
                168.374,
                -46.548
              ],
              [
                168.35,
                -46.536
              ],
              [
                168.334,
                -46.551
              ],
              [
                168.301,
                -46.548
              ],
              [
                168.306,
                -46.588
              ],
              [
                168.36,
                -46.612
              ],
              [
                168.33,
                -46.625
              ],
              [
                168.31,
                -46.594
              ],
              [
                168.275,
                -46.585
              ],
              [
                168.267,
                -46.556
              ],
              [
                168.231,
                -46.552
              ],
              [
                168.224,
                -46.523
              ],
              [
                168.286,
                -46.512
              ],
              [
                168.278,
                -46.54
              ],
              [
                168.297,
                -46.533
              ],
              [
                168.286,
                -46.524
              ],
              [
                168.294,
                -46.508
              ],
              [
                168.377,
                -46.485
              ],
              [
                168.337,
                -46.419
              ],
              [
                168.312,
                -46.429
              ],
              [
                168.327,
                -46.449
              ],
              [
                168.318,
                -46.456
              ],
              [
                168.271,
                -46.46
              ],
              [
                168.268,
                -46.442
              ],
              [
                168.267,
                -46.46
              ],
              [
                168.303,
                -46.464
              ],
              [
                168.293,
                -46.47
              ],
              [
                168.304,
                -46.489
              ],
              [
                168.271,
                -46.5
              ],
              [
                168.197,
                -46.391
              ],
              [
                168.157,
                -46.361
              ],
              [
                168.085,
                -46.339
              ],
              [
                168.012,
                -46.355
              ],
              [
                168.018,
                -46.346
              ],
              [
                168.018,
                -46.328
              ],
              [
                167.962,
                -46.333
              ],
              [
                167.95,
                -46.308
              ],
              [
                167.959,
                -46.34
              ],
              [
                168.022,
                -46.36
              ],
              [
                168.038,
                -46.384
              ],
              [
                167.914,
                -46.357
              ],
              [
                167.88,
                -46.368
              ],
              [
                167.884,
                -46.392
              ],
              [
                167.831,
                -46.368
              ],
              [
                167.783,
                -46.389
              ],
              [
                167.736,
                -46.365
              ],
              [
                167.731,
                -46.335
              ],
              [
                167.687,
                -46.322
              ],
              [
                167.73,
                -46.299
              ],
              [
                167.722,
                -46.266
              ],
              [
                167.611,
                -46.191
              ],
              [
                167.519,
                -46.157
              ],
              [
                167.403,
                -46.152
              ],
              [
                167.392,
                -46.178
              ],
              [
                167.352,
                -46.195
              ],
              [
                167.364,
                -46.227
              ],
              [
                167.342,
                -46.251
              ],
              [
                167.27,
                -46.245
              ],
              [
                167.217,
                -46.263
              ],
              [
                167.106,
                -46.258
              ],
              [
                167.019,
                -46.227
              ],
              [
                166.873,
                -46.21
              ],
              [
                166.809,
                -46.213
              ],
              [
                166.78,
                -46.231
              ],
              [
                166.765,
                -46.214
              ],
              [
                166.661,
                -46.205
              ],
              [
                166.644,
                -46.194
              ],
              [
                166.65,
                -46.174
              ],
              [
                166.609,
                -46.158
              ],
              [
                166.619,
                -46.143
              ],
              [
                166.716,
                -46.111
              ],
              [
                166.708,
                -46.092
              ],
              [
                166.725,
                -46.071
              ],
              [
                166.733,
                -46.091
              ],
              [
                166.737,
                -46.064
              ],
              [
                166.772,
                -46.058
              ],
              [
                166.781,
                -46.046
              ],
              [
                166.774,
                -46.001
              ],
              [
                166.855,
                -45.981
              ],
              [
                166.918,
                -45.933
              ],
              [
                166.918,
                -45.922
              ],
              [
                166.85,
                -45.969
              ],
              [
                166.775,
                -45.978
              ],
              [
                166.786,
                -45.987
              ],
              [
                166.735,
                -46.019
              ],
              [
                166.766,
                -46.041
              ],
              [
                166.751,
                -46.059
              ],
              [
                166.738,
                -46.059
              ],
              [
                166.739,
                -46.038
              ],
              [
                166.716,
                -46.075
              ],
              [
                166.705,
                -46.075
              ],
              [
                166.697,
                -46.055
              ],
              [
                166.735,
                -46.022
              ],
              [
                166.724,
                -46.018
              ],
              [
                166.685,
                -46.052
              ],
              [
                166.693,
                -46.06
              ],
              [
                166.687,
                -46.064
              ],
              [
                166.674,
                -46.052
              ],
              [
                166.658,
                -46.064
              ],
              [
                166.659,
                -46.069
              ],
              [
                166.648,
                -46.078
              ],
              [
                166.648,
                -46.08
              ],
              [
                166.645,
                -46.083
              ],
              [
                166.614,
                -46.06
              ],
              [
                166.576,
                -46.092
              ],
              [
                166.565,
                -46.072
              ],
              [
                166.584,
                -46.062
              ],
              [
                166.59,
                -46.034
              ],
              [
                166.609,
                -46.053
              ],
              [
                166.599,
                -46.016
              ],
              [
                166.619,
                -45.988
              ],
              [
                166.771,
                -45.968
              ],
              [
                166.754,
                -45.954
              ],
              [
                166.767,
                -45.945
              ],
              [
                166.705,
                -45.957
              ],
              [
                166.647,
                -45.949
              ],
              [
                166.683,
                -45.907
              ],
              [
                166.688,
                -45.877
              ],
              [
                166.71,
                -45.868
              ],
              [
                166.708,
                -45.858
              ],
              [
                166.682,
                -45.869
              ],
              [
                166.596,
                -45.97
              ],
              [
                166.499,
                -46.002
              ],
              [
                166.473,
                -45.996
              ],
              [
                166.472,
                -46.012
              ],
              [
                166.45,
                -45.998
              ],
              [
                166.451,
                -45.941
              ],
              [
                166.426,
                -45.905
              ],
              [
                166.44,
                -45.883
              ],
              [
                166.433,
                -45.842
              ],
              [
                166.455,
                -45.813
              ],
              [
                166.521,
                -45.794
              ],
              [
                166.596,
                -45.795
              ],
              [
                166.571,
                -45.816
              ],
              [
                166.622,
                -45.791
              ],
              [
                166.78,
                -45.762
              ],
              [
                166.856,
                -45.775
              ],
              [
                166.838,
                -45.764
              ],
              [
                166.883,
                -45.738
              ],
              [
                166.981,
                -45.718
              ],
              [
                166.948,
                -45.72
              ],
              [
                166.963,
                -45.7
              ],
              [
                166.953,
                -45.695
              ],
              [
                166.935,
                -45.724
              ],
              [
                166.823,
                -45.704
              ],
              [
                166.762,
                -45.724
              ],
              [
                166.728,
                -45.727
              ],
              [
                166.751,
                -45.668
              ],
              [
                166.938,
                -45.631
              ],
              [
                166.97,
                -45.604
              ],
              [
                166.926,
                -45.627
              ],
              [
                166.734,
                -45.661
              ],
              [
                166.729,
                -45.596
              ],
              [
                166.87,
                -45.552
              ],
              [
                166.883,
                -45.564
              ],
              [
                166.958,
                -45.552
              ],
              [
                166.987,
                -45.564
              ],
              [
                166.996,
                -45.554
              ],
              [
                166.961,
                -45.546
              ],
              [
                166.895,
                -45.556
              ],
              [
                166.884,
                -45.544
              ],
              [
                166.947,
                -45.525
              ],
              [
                167.002,
                -45.499
              ],
              [
                167.015,
                -45.487
              ],
              [
                166.898,
                -45.528
              ],
              [
                166.864,
                -45.52
              ],
              [
                166.871,
                -45.543
              ],
              [
                166.807,
                -45.547
              ],
              [
                166.742,
                -45.579
              ],
              [
                166.672,
                -45.576
              ],
              [
                166.688,
                -45.506
              ],
              [
                166.728,
                -45.503
              ],
              [
                166.711,
                -45.471
              ],
              [
                166.793,
                -45.325
              ],
              [
                166.844,
                -45.276
              ],
              [
                166.95,
                -45.318
              ],
              [
                166.897,
                -45.344
              ],
              [
                166.969,
                -45.321
              ],
              [
                167.028,
                -45.352
              ],
              [
                166.999,
                -45.372
              ],
              [
                167.014,
                -45.375
              ],
              [
                167.02,
                -45.402
              ],
              [
                166.979,
                -45.399
              ],
              [
                166.919,
                -45.418
              ],
              [
                166.917,
                -45.424
              ],
              [
                166.982,
                -45.406
              ],
              [
                167.019,
                -45.415
              ],
              [
                167.037,
                -45.354
              ],
              [
                167.069,
                -45.363
              ],
              [
                167.116,
                -45.431
              ],
              [
                167.114,
                -45.449
              ],
              [
                167.072,
                -45.477
              ],
              [
                167.057,
                -45.507
              ],
              [
                167.12,
                -45.459
              ],
              [
                167.14,
                -45.441
              ],
              [
                167.11,
                -45.387
              ],
              [
                167.007,
                -45.314
              ],
              [
                167.034,
                -45.293
              ],
              [
                167.124,
                -45.283
              ],
              [
                167.168,
                -45.318
              ],
              [
                167.191,
                -45.32
              ],
              [
                167.162,
                -45.308
              ],
              [
                167.144,
                -45.278
              ],
              [
                167.171,
                -45.25
              ],
              [
                167.146,
                -45.266
              ],
              [
                167.119,
                -45.261
              ],
              [
                167.111,
                -45.277
              ],
              [
                167.011,
                -45.28
              ],
              [
                166.967,
                -45.193
              ],
              [
                166.994,
                -45.166
              ],
              [
                166.974,
                -45.138
              ],
              [
                167.105,
                -45.033
              ],
              [
                167.092,
                -45.026
              ],
              [
                167.125,
                -45.012
              ],
              [
                167.146,
                -44.975
              ],
              [
                167.197,
                -44.962
              ],
              [
                167.19,
                -44.95
              ],
              [
                167.212,
                -44.927
              ],
              [
                167.242,
                -44.928
              ],
              [
                167.221,
                -44.919
              ],
              [
                167.271,
                -44.87
              ],
              [
                167.327,
                -44.845
              ],
              [
                167.34,
                -44.844
              ],
              [
                167.376,
                -44.91
              ],
              [
                167.358,
                -44.947
              ],
              [
                167.403,
                -44.963
              ],
              [
                167.382,
                -44.998
              ],
              [
                167.412,
                -44.973
              ],
              [
                167.442,
                -44.984
              ],
              [
                167.383,
                -44.935
              ],
              [
                167.407,
                -44.931
              ],
              [
                167.355,
                -44.825
              ],
              [
                167.397,
                -44.814
              ],
              [
                167.442,
                -44.776
              ],
              [
                167.489,
                -44.777
              ],
              [
                167.538,
                -44.801
              ],
              [
                167.489,
                -44.847
              ],
              [
                167.496,
                -44.866
              ],
              [
                167.531,
                -44.882
              ],
              [
                167.5,
                -44.853
              ],
              [
                167.548,
                -44.802
              ],
              [
                167.494,
                -44.753
              ],
              [
                167.527,
                -44.731
              ],
              [
                167.593,
                -44.739
              ],
              [
                167.632,
                -44.783
              ],
              [
                167.62,
                -44.748
              ],
              [
                167.561,
                -44.718
              ],
              [
                167.565,
                -44.685
              ],
              [
                167.613,
                -44.66
              ],
              [
                167.663,
                -44.685
              ],
              [
                167.633,
                -44.642
              ],
              [
                167.738,
                -44.603
              ],
              [
                167.75,
                -44.581
              ],
              [
                167.783,
                -44.572
              ],
              [
                167.806,
                -44.603
              ],
              [
                167.872,
                -44.625
              ],
              [
                167.913,
                -44.686
              ],
              [
                167.929,
                -44.683
              ],
              [
                167.913,
                -44.671
              ],
              [
                167.929,
                -44.672
              ],
              [
                167.913,
                -44.623
              ],
              [
                167.817,
                -44.599
              ],
              [
                167.831,
                -44.528
              ],
              [
                167.816,
                -44.496
              ],
              [
                167.844,
                -44.485
              ],
              [
                167.872,
                -44.435
              ],
              [
                167.931,
                -44.39
              ],
              [
                167.987,
                -44.378
              ],
              [
                168.002,
                -44.337
              ],
              [
                168.001,
                -44.368
              ],
              [
                168.049,
                -44.451
              ],
              [
                168.055,
                -44.511
              ],
              [
                168.076,
                -44.519
              ],
              [
                168.058,
                -44.412
              ],
              [
                168.018,
                -44.384
              ],
              [
                168.008,
                -44.339
              ],
              [
                167.994,
                -44.328
              ],
              [
                168.098,
                -44.327
              ],
              [
                168.12,
                -44.291
              ],
              [
                168.052,
                -44.258
              ],
              [
                168.104,
                -44.243
              ],
              [
                168.251,
                -44.154
              ],
              [
                168.286,
                -44.103
              ],
              [
                168.326,
                -44.084
              ],
              [
                168.326,
                -44.051
              ],
              [
                168.361,
                -44.031
              ],
              [
                168.367,
                -44.009
              ],
              [
                168.513,
                -44.002
              ],
              [
                168.617,
                -43.958
              ],
              [
                168.615,
                -43.977
              ],
              [
                168.653,
                -43.996
              ],
              [
                168.815,
                -43.967
              ],
              [
                168.887,
                -43.906
              ],
              [
                169.017,
                -43.853
              ],
              [
                169.209,
                -43.719
              ],
              [
                169.346,
                -43.67
              ],
              [
                169.382,
                -43.638
              ],
              [
                169.501,
                -43.627
              ],
              [
                169.555,
                -43.586
              ],
              [
                169.571,
                -43.602
              ],
              [
                169.609,
                -43.592
              ],
              [
                169.649,
                -43.554
              ],
              [
                169.69,
                -43.545
              ],
              [
                169.794,
                -43.421
              ],
              [
                169.974,
                -43.362
              ],
              [
                170.134,
                -43.231
              ],
              [
                170.205,
                -43.226
              ],
              [
                170.227,
                -43.194
              ],
              [
                170.273,
                -43.176
              ],
              [
                170.258,
                -43.156
              ],
              [
                170.224,
                -43.155
              ],
              [
                170.232,
                -43.165
              ],
              [
                170.218,
                -43.165
              ],
              [
                170.213,
                -43.19
              ],
              [
                170.166,
                -43.218
              ],
              [
                170.26,
                -43.108
              ],
              [
                170.349,
                -43.094
              ],
              [
                170.411,
                -43.042
              ],
              [
                170.458,
                -43.023
              ],
              [
                170.595,
                -42.993
              ],
              [
                170.721,
                -42.93
              ],
              [
                170.86,
                -42.83
              ],
              [
                170.948,
                -42.724
              ],
              [
                171.096,
                -42.603
              ],
              [
                171.167,
                -42.508
              ],
              [
                171.219,
                -42.38
              ],
              [
                171.24,
                -42.374
              ],
              [
                171.28,
                -42.313
              ],
              [
                171.306,
                -42.26
              ],
              [
                171.326,
                -42.114
              ],
              [
                171.361,
                -42.072
              ],
              [
                171.366,
                -42.035
              ],
              [
                171.392,
                -42.021
              ],
              [
                171.418,
                -41.918
              ],
              [
                171.455,
                -41.885
              ],
              [
                171.459,
                -41.753
              ],
              [
                171.55,
                -41.75
              ],
              [
                171.587,
                -41.727
              ],
              [
                171.59,
                -41.745
              ],
              [
                171.568,
                -41.749
              ],
              [
                171.593,
                -41.748
              ],
              [
                171.595,
                -41.766
              ],
              [
                171.601,
                -41.742
              ],
              [
                171.599,
                -41.741
              ],
              [
                171.596,
                -41.745
              ],
              [
                171.594,
                -41.744
              ],
              [
                171.589,
                -41.727
              ],
              [
                171.676,
                -41.739
              ],
              [
                171.882,
                -41.601
              ],
              [
                171.986,
                -41.446
              ],
              [
                172.061,
                -41.388
              ],
              [
                172.092,
                -41.276
              ],
              [
                172.095,
                -41.291
              ],
              [
                172.108,
                -41.276
              ],
              [
                172.1,
                -40.896
              ],
              [
                172.216,
                -40.776
              ],
              [
                172.292,
                -40.747
              ],
              [
                172.445,
                -40.631
              ],
              [
                172.534,
                -40.582
              ],
              [
                172.544,
                -40.606
              ],
              [
                172.505,
                -40.622
              ],
              [
                172.517,
                -40.641
              ],
              [
                172.516,
                -40.626
              ],
              [
                172.557,
                -40.606
              ],
              [
                172.552,
                -40.619
              ],
              [
                172.567,
                -40.608
              ],
              [
                172.586,
                -40.617
              ],
              [
                172.581,
                -40.599
              ],
              [
                172.568,
                -40.601
              ],
              [
                172.576,
                -40.591
              ],
              [
                172.613,
                -40.588
              ],
              [
                172.616,
                -40.601
              ],
              [
                172.625,
                -40.604
              ],
              [
                172.63,
                -40.555
              ],
              [
                172.576,
                -40.566
              ],
              [
                172.554,
                -40.588
              ],
              [
                172.55,
                -40.571
              ],
              [
                172.643,
                -40.508
              ],
              [
                172.682,
                -40.499
              ],
              [
                172.899,
                -40.513
              ],
              [
                172.98,
                -40.53
              ],
              [
                173.016,
                -40.55
              ],
              [
                172.893,
                -40.519
              ],
              [
                172.753,
                -40.516
              ],
              [
                172.686,
                -40.584
              ],
              [
                172.682,
                -40.661
              ],
              [
                172.67,
                -40.638
              ],
              [
                172.662,
                -40.643
              ],
              [
                172.649,
                -40.655
              ],
              [
                172.649,
                -40.657
              ],
              [
                172.667,
                -40.68
              ],
              [
                172.687,
                -40.679
              ],
              [
                172.679,
                -40.732
              ],
              [
                172.688,
                -40.716
              ],
              [
                172.733,
                -40.772
              ],
              [
                172.84,
                -40.833
              ],
              [
                172.891,
                -40.831
              ],
              [
                172.921,
                -40.8
              ],
              [
                172.945,
                -40.827
              ],
              [
                172.954,
                -40.789
              ],
              [
                172.999,
                -40.783
              ],
              [
                173.014,
                -40.847
              ],
              [
                173.062,
                -40.865
              ],
              [
                173.065,
                -40.878
              ],
              [
                173.046,
                -40.887
              ],
              [
                173.064,
                -40.91
              ],
              [
                173.05,
                -40.95
              ],
              [
                173.069,
                -40.961
              ],
              [
                173.012,
                -40.992
              ],
              [
                173.023,
                -41.045
              ],
              [
                173,
                -41.064
              ],
              [
                173.036,
                -41.096
              ],
              [
                173.025,
                -41.138
              ],
              [
                173.019,
                -41.125
              ],
              [
                173.009,
                -41.142
              ],
              [
                173.049,
                -41.187
              ],
              [
                173.037,
                -41.159
              ],
              [
                173.066,
                -41.184
              ],
              [
                173.107,
                -41.249
              ],
              [
                173.1,
                -41.261
              ],
              [
                173.072,
                -41.253
              ],
              [
                173.087,
                -41.267
              ],
              [
                173.075,
                -41.277
              ],
              [
                173.104,
                -41.277
              ],
              [
                173.085,
                -41.285
              ],
              [
                173.094,
                -41.292
              ],
              [
                173.137,
                -41.288
              ],
              [
                173.194,
                -41.331
              ],
              [
                173.221,
                -41.304
              ],
              [
                173.205,
                -41.306
              ],
              [
                173.225,
                -41.302
              ],
              [
                173.207,
                -41.298
              ],
              [
                173.313,
                -41.249
              ],
              [
                173.323,
                -41.203
              ],
              [
                173.416,
                -41.159
              ],
              [
                173.413,
                -41.138
              ],
              [
                173.436,
                -41.14
              ],
              [
                173.439,
                -41.16
              ],
              [
                173.444,
                -41.164
              ],
              [
                173.413,
                -41.161
              ],
              [
                173.429,
                -41.177
              ],
              [
                173.464,
                -41.166
              ],
              [
                173.442,
                -41.161
              ],
              [
                173.483,
                -41.157
              ],
              [
                173.514,
                -41.104
              ],
              [
                173.547,
                -41.097
              ],
              [
                173.594,
                -41.051
              ],
              [
                173.637,
                -41.079
              ],
              [
                173.621,
                -41.087
              ],
              [
                173.616,
                -41.104
              ],
              [
                173.647,
                -41.089
              ],
              [
                173.652,
                -41.109
              ],
              [
                173.667,
                -41.11
              ],
              [
                173.663,
                -41.078
              ],
              [
                173.763,
                -41.046
              ],
              [
                173.741,
                -41.048
              ],
              [
                173.745,
                -41.033
              ],
              [
                173.69,
                -41.056
              ],
              [
                173.673,
                -41.034
              ],
              [
                173.734,
                -40.998
              ],
              [
                173.748,
                -41.005
              ],
              [
                173.767,
                -40.974
              ],
              [
                173.777,
                -40.99
              ],
              [
                173.798,
                -40.984
              ],
              [
                173.786,
                -40.968
              ],
              [
                173.805,
                -40.972
              ],
              [
                173.835,
                -40.924
              ],
              [
                173.856,
                -40.929
              ],
              [
                173.832,
                -40.981
              ],
              [
                173.852,
                -40.99
              ],
              [
                173.917,
                -40.943
              ],
              [
                173.907,
                -40.927
              ],
              [
                173.931,
                -40.926
              ],
              [
                173.979,
                -40.888
              ],
              [
                173.98,
                -40.905
              ],
              [
                174.023,
                -40.911
              ],
              [
                174.014,
                -40.937
              ],
              [
                173.997,
                -40.947
              ],
              [
                173.99,
                -40.91
              ],
              [
                173.97,
                -40.913
              ],
              [
                173.957,
                -40.923
              ],
              [
                173.975,
                -40.938
              ],
              [
                173.95,
                -40.942
              ],
              [
                173.956,
                -40.967
              ],
              [
                173.907,
                -40.965
              ],
              [
                173.9,
                -40.988
              ],
              [
                173.928,
                -40.985
              ],
              [
                173.863,
                -41.021
              ],
              [
                173.813,
                -41.018
              ],
              [
                173.828,
                -40.988
              ],
              [
                173.804,
                -41.014
              ],
              [
                173.784,
                -41.006
              ],
              [
                173.773,
                -41.02
              ],
              [
                173.811,
                -41.032
              ],
              [
                173.768,
                -41.053
              ],
              [
                173.787,
                -41.057
              ],
              [
                173.78,
                -41.085
              ],
              [
                173.767,
                -41.086
              ],
              [
                173.75,
                -41.101
              ],
              [
                173.773,
                -41.094
              ],
              [
                173.76,
                -41.119
              ],
              [
                173.786,
                -41.111
              ],
              [
                173.795,
                -41.083
              ],
              [
                173.808,
                -41.092
              ],
              [
                173.832,
                -41.053
              ],
              [
                173.951,
                -41.062
              ],
              [
                173.905,
                -41.07
              ],
              [
                173.906,
                -41.091
              ],
              [
                173.869,
                -41.079
              ],
              [
                173.858,
                -41.098
              ],
              [
                173.889,
                -41.1
              ],
              [
                173.883,
                -41.121
              ],
              [
                173.844,
                -41.114
              ],
              [
                173.856,
                -41.123
              ],
              [
                173.831,
                -41.136
              ],
              [
                173.838,
                -41.145
              ],
              [
                173.778,
                -41.153
              ],
              [
                173.785,
                -41.177
              ],
              [
                173.848,
                -41.152
              ],
              [
                173.829,
                -41.173
              ],
              [
                173.858,
                -41.169
              ],
              [
                173.866,
                -41.19
              ],
              [
                173.84,
                -41.218
              ],
              [
                173.85,
                -41.241
              ],
              [
                173.822,
                -41.25
              ],
              [
                173.787,
                -41.235
              ],
              [
                173.805,
                -41.255
              ],
              [
                173.734,
                -41.264
              ],
              [
                173.77,
                -41.274
              ],
              [
                173.771,
                -41.287
              ],
              [
                173.779,
                -41.263
              ],
              [
                173.807,
                -41.287
              ],
              [
                173.846,
                -41.29
              ],
              [
                173.855,
                -41.278
              ],
              [
                173.827,
                -41.286
              ],
              [
                173.808,
                -41.268
              ],
              [
                173.868,
                -41.257
              ],
              [
                173.927,
                -41.224
              ],
              [
                173.881,
                -41.229
              ],
              [
                173.86,
                -41.227
              ],
              [
                173.862,
                -41.219
              ],
              [
                173.947,
                -41.2
              ],
              [
                173.937,
                -41.219
              ],
              [
                173.97,
                -41.218
              ],
              [
                174.122,
                -41.172
              ],
              [
                174.053,
                -41.179
              ],
              [
                174.04,
                -41.174
              ],
              [
                174.046,
                -41.158
              ],
              [
                173.986,
                -41.182
              ],
              [
                173.998,
                -41.195
              ],
              [
                173.966,
                -41.189
              ],
              [
                173.975,
                -41.183
              ],
              [
                173.967,
                -41.172
              ],
              [
                173.872,
                -41.21
              ],
              [
                173.898,
                -41.168
              ],
              [
                173.868,
                -41.154
              ],
              [
                173.883,
                -41.156
              ],
              [
                173.901,
                -41.15
              ],
              [
                173.868,
                -41.142
              ],
              [
                173.923,
                -41.125
              ],
              [
                173.901,
                -41.123
              ],
              [
                173.909,
                -41.109
              ],
              [
                173.931,
                -41.113
              ],
              [
                173.933,
                -41.084
              ],
              [
                173.976,
                -41.079
              ],
              [
                173.95,
                -41.115
              ],
              [
                173.965,
                -41.15
              ],
              [
                173.974,
                -41.128
              ],
              [
                173.994,
                -41.136
              ],
              [
                173.987,
                -41.1
              ],
              [
                174.011,
                -41.095
              ],
              [
                174.038,
                -41.114
              ],
              [
                174.048,
                -41.105
              ],
              [
                174.01,
                -41.059
              ],
              [
                174.048,
                -41.054
              ],
              [
                174.049,
                -41.021
              ],
              [
                174.009,
                -41.017
              ],
              [
                173.996,
                -41.041
              ],
              [
                173.975,
                -41.056
              ],
              [
                173.984,
                -41.032
              ],
              [
                173.934,
                -41.039
              ],
              [
                173.953,
                -41.033
              ],
              [
                173.935,
                -41.02
              ],
              [
                173.95,
                -41.013
              ],
              [
                173.988,
                -41.016
              ],
              [
                173.965,
                -40.992
              ],
              [
                173.995,
                -40.995
              ],
              [
                173.996,
                -40.969
              ],
              [
                174.023,
                -40.976
              ],
              [
                174.009,
                -41.01
              ],
              [
                174.047,
                -41.018
              ],
              [
                174.067,
                -40.996
              ],
              [
                174.065,
                -41.014
              ],
              [
                174.108,
                -41.053
              ],
              [
                174.097,
                -40.995
              ],
              [
                174.141,
                -41.02
              ],
              [
                174.142,
                -40.998
              ],
              [
                174.163,
                -40.983
              ],
              [
                174.148,
                -40.979
              ],
              [
                174.156,
                -40.969
              ],
              [
                174.182,
                -41.011
              ],
              [
                174.23,
                -40.985
              ],
              [
                174.217,
                -41.009
              ],
              [
                174.195,
                -41.012
              ],
              [
                174.199,
                -41.04
              ],
              [
                174.184,
                -41.029
              ],
              [
                174.167,
                -41.043
              ],
              [
                174.217,
                -41.071
              ],
              [
                174.241,
                -41.041
              ],
              [
                174.289,
                -41.034
              ],
              [
                174.297,
                -41.014
              ],
              [
                174.315,
                -40.994
              ],
              [
                174.298,
                -41.035
              ],
              [
                174.273,
                -41.045
              ],
              [
                174.272,
                -41.069
              ],
              [
                174.234,
                -41.093
              ],
              [
                174.247,
                -41.122
              ],
              [
                174.208,
                -41.119
              ],
              [
                174.22,
                -41.142
              ],
              [
                174.187,
                -41.14
              ],
              [
                174.197,
                -41.123
              ],
              [
                174.182,
                -41.123
              ],
              [
                174.18,
                -41.087
              ],
              [
                174.164,
                -41.116
              ],
              [
                174.145,
                -41.108
              ],
              [
                174.147,
                -41.128
              ],
              [
                174.166,
                -41.136
              ],
              [
                174.159,
                -41.15
              ],
              [
                174.201,
                -41.154
              ],
              [
                174.184,
                -41.175
              ],
              [
                174.203,
                -41.183
              ],
              [
                174.17,
                -41.202
              ],
              [
                174.181,
                -41.18
              ],
              [
                174.153,
                -41.173
              ],
              [
                174.157,
                -41.213
              ],
              [
                174.125,
                -41.192
              ],
              [
                174.112,
                -41.205
              ],
              [
                174.12,
                -41.22
              ],
              [
                174.093,
                -41.202
              ],
              [
                174.077,
                -41.229
              ],
              [
                174.064,
                -41.223
              ],
              [
                174.07,
                -41.206
              ],
              [
                174.045,
                -41.211
              ],
              [
                174.04,
                -41.231
              ],
              [
                174.031,
                -41.21
              ],
              [
                174.025,
                -41.241
              ],
              [
                173.999,
                -41.217
              ],
              [
                173.998,
                -41.244
              ],
              [
                173.983,
                -41.251
              ],
              [
                173.966,
                -41.223
              ],
              [
                173.972,
                -41.254
              ],
              [
                173.914,
                -41.264
              ],
              [
                173.904,
                -41.28
              ],
              [
                174.011,
                -41.258
              ],
              [
                173.994,
                -41.279
              ],
              [
                174.009,
                -41.272
              ],
              [
                174.004,
                -41.283
              ],
              [
                174.007,
                -41.282
              ],
              [
                174.005,
                -41.287
              ],
              [
                174.011,
                -41.29
              ],
              [
                174.037,
                -41.254
              ],
              [
                174.049,
                -41.251
              ],
              [
                174.039,
                -41.269
              ],
              [
                174.065,
                -41.252
              ],
              [
                174.088,
                -41.269
              ],
              [
                174.079,
                -41.249
              ],
              [
                174.146,
                -41.232
              ],
              [
                174.134,
                -41.258
              ],
              [
                174.15,
                -41.248
              ],
              [
                174.157,
                -41.264
              ],
              [
                174.177,
                -41.25
              ],
              [
                174.203,
                -41.277
              ],
              [
                174.211,
                -41.266
              ],
              [
                174.186,
                -41.25
              ],
              [
                174.246,
                -41.244
              ],
              [
                174.254,
                -41.26
              ],
              [
                174.266,
                -41.252
              ],
              [
                174.255,
                -41.244
              ],
              [
                174.277,
                -41.244
              ],
              [
                174.272,
                -41.234
              ],
              [
                174.305,
                -41.214
              ],
              [
                174.316,
                -41.213
              ],
              [
                174.275,
                -41.256
              ],
              [
                174.283,
                -41.268
              ],
              [
                174.223,
                -41.292
              ],
              [
                174.239,
                -41.32
              ],
              [
                174.213,
                -41.325
              ],
              [
                174.201,
                -41.31
              ],
              [
                174.192,
                -41.337
              ],
              [
                174.123,
                -41.352
              ],
              [
                174.19,
                -41.293
              ],
              [
                174.16,
                -41.288
              ],
              [
                174.139,
                -41.314
              ],
              [
                174.15,
                -41.284
              ],
              [
                174.114,
                -41.299
              ],
              [
                174.123,
                -41.306
              ],
              [
                174.105,
                -41.339
              ],
              [
                174.09,
                -41.359
              ],
              [
                174.071,
                -41.355
              ],
              [
                174.067,
                -41.387
              ],
              [
                174.049,
                -41.392
              ],
              [
                174.029,
                -41.453
              ],
              [
                174.062,
                -41.501
              ],
              [
                174.048,
                -41.508
              ],
              [
                174.072,
                -41.524
              ],
              [
                174.058,
                -41.551
              ],
              [
                174.076,
                -41.555
              ],
              [
                174.08,
                -41.537
              ],
              [
                174.089,
                -41.56
              ],
              [
                174.126,
                -41.547
              ],
              [
                174.065,
                -41.513
              ],
              [
                174.062,
                -41.501
              ],
              [
                174.15,
                -41.559
              ],
              [
                174.166,
                -41.605
              ],
              [
                174.157,
                -41.657
              ],
              [
                174.182,
                -41.711
              ],
              [
                174.212,
                -41.728
              ],
              [
                174.276,
                -41.726
              ],
              [
                174.275,
                -41.743
              ],
              [
                174.218,
                -41.792
              ],
              [
                174.161,
                -41.872
              ],
              [
                173.954,
                -42.059
              ],
              [
                173.925,
                -42.124
              ],
              [
                173.94,
                -42.162
              ],
              [
                173.808,
                -42.265
              ],
              [
                173.762,
                -42.285
              ],
              [
                173.749,
                -42.321
              ],
              [
                173.695,
                -42.354
              ],
              [
                173.682,
                -42.398
              ],
              [
                173.716,
                -42.424
              ],
              [
                173.692,
                -42.435
              ],
              [
                173.672,
                -42.413
              ],
              [
                173.642,
                -42.415
              ],
              [
                173.539,
                -42.467
              ],
              [
                173.502,
                -42.526
              ],
              [
                173.502,
                -42.548
              ],
              [
                173.517,
                -42.556
              ],
              [
                173.478,
                -42.592
              ],
              [
                173.368,
                -42.799
              ],
              [
                173.313,
                -42.852
              ],
              [
                173.319,
                -42.884
              ],
              [
                173.24,
                -42.954
              ],
              [
                173.14,
                -42.99
              ],
              [
                173.081,
                -43.051
              ],
              [
                173.044,
                -43.047
              ],
              [
                172.817,
                -43.133
              ],
              [
                172.734,
                -43.255
              ],
              [
                172.712,
                -43.322
              ],
              [
                172.701,
                -43.419
              ],
              [
                172.707,
                -43.429
              ],
              [
                172.711,
                -43.391
              ],
              [
                172.722,
                -43.48
              ],
              [
                172.754,
                -43.556
              ],
              [
                172.724,
                -43.525
              ],
              [
                172.703,
                -43.555
              ],
              [
                172.808,
                -43.587
              ],
              [
                172.654,
                -43.62
              ],
              [
                172.65,
                -43.641
              ],
              [
                172.657,
                -43.64
              ],
              [
                172.662,
                -43.634
              ],
              [
                172.663,
                -43.634
              ],
              [
                172.666,
                -43.631
              ],
              [
                172.668,
                -43.631
              ],
              [
                172.661,
                -43.667
              ],
              [
                172.682,
                -43.637
              ],
              [
                172.699,
                -43.656
              ],
              [
                172.72,
                -43.624
              ],
              [
                172.743,
                -43.622
              ],
              [
                172.75,
                -43.639
              ],
              [
                172.755,
                -43.621
              ],
              [
                172.816,
                -43.617
              ],
              [
                172.825,
                -43.604
              ],
              [
                172.811,
                -43.659
              ],
              [
                172.822,
                -43.663
              ],
              [
                172.849,
                -43.608
              ],
              [
                172.861,
                -43.603
              ],
              [
                172.881,
                -43.625
              ],
              [
                172.893,
                -43.614
              ],
              [
                172.904,
                -43.633
              ],
              [
                172.907,
                -43.625
              ],
              [
                172.911,
                -43.624
              ],
              [
                172.885,
                -43.672
              ],
              [
                172.895,
                -43.689
              ],
              [
                172.932,
                -43.623
              ],
              [
                172.961,
                -43.634
              ],
              [
                172.961,
                -43.648
              ],
              [
                172.978,
                -43.633
              ],
              [
                172.999,
                -43.645
              ],
              [
                172.993,
                -43.676
              ],
              [
                173.047,
                -43.651
              ],
              [
                173.035,
                -43.662
              ],
              [
                173.073,
                -43.675
              ],
              [
                173.057,
                -43.691
              ],
              [
                173.076,
                -43.699
              ],
              [
                173.087,
                -43.683
              ],
              [
                173.107,
                -43.7
              ],
              [
                173.099,
                -43.72
              ],
              [
                173.118,
                -43.727
              ],
              [
                173.095,
                -43.733
              ],
              [
                173.098,
                -43.745
              ],
              [
                173.129,
                -43.746
              ],
              [
                173.127,
                -43.776
              ],
              [
                173.108,
                -43.775
              ],
              [
                173.113,
                -43.799
              ],
              [
                173.096,
                -43.808
              ],
              [
                173.103,
                -43.833
              ],
              [
                173.085,
                -43.832
              ],
              [
                173.078,
                -43.853
              ],
              [
                173.057,
                -43.838
              ],
              [
                173.063,
                -43.85
              ],
              [
                173.04,
                -43.855
              ],
              [
                173.037,
                -43.873
              ],
              [
                173.004,
                -43.868
              ],
              [
                173.017,
                -43.88
              ],
              [
                172.996,
                -43.887
              ],
              [
                172.993,
                -43.872
              ],
              [
                172.969,
                -43.888
              ],
              [
                172.939,
                -43.854
              ],
              [
                172.945,
                -43.82
              ],
              [
                172.968,
                -43.801
              ],
              [
                172.942,
                -43.788
              ],
              [
                172.966,
                -43.784
              ],
              [
                172.949,
                -43.774
              ],
              [
                172.963,
                -43.765
              ],
              [
                172.933,
                -43.75
              ],
              [
                172.928,
                -43.777
              ],
              [
                172.922,
                -43.759
              ],
              [
                172.91,
                -43.762
              ],
              [
                172.925,
                -43.796
              ],
              [
                172.903,
                -43.823
              ],
              [
                172.912,
                -43.863
              ],
              [
                172.949,
                -43.895
              ],
              [
                172.93,
                -43.902
              ],
              [
                172.868,
                -43.894
              ],
              [
                172.857,
                -43.876
              ],
              [
                172.827,
                -43.888
              ],
              [
                172.84,
                -43.875
              ],
              [
                172.812,
                -43.88
              ],
              [
                172.824,
                -43.869
              ],
              [
                172.822,
                -43.859
              ],
              [
                172.807,
                -43.874
              ],
              [
                172.803,
                -43.862
              ],
              [
                172.782,
                -43.868
              ],
              [
                172.785,
                -43.85
              ],
              [
                172.745,
                -43.854
              ],
              [
                172.729,
                -43.827
              ],
              [
                172.317,
                -43.867
              ],
              [
                172.013,
                -43.965
              ],
              [
                171.64,
                -44.12
              ],
              [
                171.447,
                -44.219
              ],
              [
                171.333,
                -44.295
              ],
              [
                171.245,
                -44.382
              ],
              [
                171.27,
                -44.388
              ],
              [
                171.262,
                -44.443
              ],
              [
                171.196,
                -44.525
              ],
              [
                171.163,
                -44.603
              ],
              [
                171.174,
                -44.829
              ],
              [
                171.144,
                -44.94
              ]
            ],
            [
              [
                170.579,
                -45.749
              ],
              [
                170.579,
                -45.752
              ],
              [
                170.586,
                -45.755
              ],
              [
                170.58,
                -45.747
              ],
              [
                170.579,
                -45.749
              ]
            ],
            [
              [
                170.52,
                -45.894
              ],
              [
                170.528,
                -45.893
              ],
              [
                170.528,
                -45.892
              ],
              [
                170.522,
                -45.891
              ],
              [
                170.52,
                -45.894
              ]
            ],
            [
              [
                170.354,
                -43.093
              ],
              [
                170.324,
                -43.106
              ],
              [
                170.381,
                -43.093
              ],
              [
                170.37,
                -43.107
              ],
              [
                170.389,
                -43.11
              ],
              [
                170.385,
                -43.088
              ],
              [
                170.354,
                -43.093
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                166.962,
                -45.148
              ],
              [
                166.971,
                -45.166
              ],
              [
                166.949,
                -45.203
              ],
              [
                166.998,
                -45.3
              ],
              [
                166.947,
                -45.294
              ],
              [
                166.869,
                -45.241
              ],
              [
                166.962,
                -45.148
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                174.381,
                -41.088
              ],
              [
                174.392,
                -41.118
              ],
              [
                174.37,
                -41.159
              ],
              [
                174.371,
                -41.197
              ],
              [
                174.28,
                -41.209
              ],
              [
                174.247,
                -41.222
              ],
              [
                174.254,
                -41.237
              ],
              [
                174.231,
                -41.236
              ],
              [
                174.229,
                -41.222
              ],
              [
                174.161,
                -41.242
              ],
              [
                174.195,
                -41.209
              ],
              [
                174.233,
                -41.217
              ],
              [
                174.227,
                -41.203
              ],
              [
                174.255,
                -41.204
              ],
              [
                174.258,
                -41.182
              ],
              [
                174.288,
                -41.183
              ],
              [
                174.303,
                -41.163
              ],
              [
                174.321,
                -41.161
              ],
              [
                174.312,
                -41.177
              ],
              [
                174.341,
                -41.177
              ],
              [
                174.333,
                -41.168
              ],
              [
                174.365,
                -41.156
              ],
              [
                174.375,
                -41.125
              ],
              [
                174.339,
                -41.147
              ],
              [
                174.325,
                -41.131
              ],
              [
                174.288,
                -41.141
              ],
              [
                174.316,
                -41.118
              ],
              [
                174.331,
                -41.13
              ],
              [
                174.358,
                -41.118
              ],
              [
                174.381,
                -41.088
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                173.956,
                -40.693
              ],
              [
                173.968,
                -40.708
              ],
              [
                173.962,
                -40.758
              ],
              [
                173.939,
                -40.787
              ],
              [
                173.957,
                -40.796
              ],
              [
                173.908,
                -40.845
              ],
              [
                173.912,
                -40.869
              ],
              [
                173.901,
                -40.879
              ],
              [
                173.896,
                -40.878
              ],
              [
                173.907,
                -40.862
              ],
              [
                173.89,
                -40.858
              ],
              [
                173.834,
                -40.919
              ],
              [
                173.791,
                -40.941
              ],
              [
                173.77,
                -40.942
              ],
              [
                173.798,
                -40.89
              ],
              [
                173.784,
                -40.882
              ],
              [
                173.78,
                -40.89
              ],
              [
                173.773,
                -40.896
              ],
              [
                173.77,
                -40.896
              ],
              [
                173.782,
                -40.834
              ],
              [
                173.792,
                -40.858
              ],
              [
                173.845,
                -40.863
              ],
              [
                173.836,
                -40.846
              ],
              [
                173.85,
                -40.837
              ],
              [
                173.834,
                -40.843
              ],
              [
                173.829,
                -40.856
              ],
              [
                173.81,
                -40.849
              ],
              [
                173.808,
                -40.815
              ],
              [
                173.794,
                -40.815
              ],
              [
                173.834,
                -40.771
              ],
              [
                173.828,
                -40.755
              ],
              [
                173.84,
                -40.769
              ],
              [
                173.865,
                -40.731
              ],
              [
                173.884,
                -40.736
              ],
              [
                173.861,
                -40.768
              ],
              [
                173.874,
                -40.78
              ],
              [
                173.866,
                -40.807
              ],
              [
                173.894,
                -40.778
              ],
              [
                173.906,
                -40.804
              ],
              [
                173.911,
                -40.78
              ],
              [
                173.927,
                -40.784
              ],
              [
                173.933,
                -40.769
              ],
              [
                173.884,
                -40.769
              ],
              [
                173.938,
                -40.746
              ],
              [
                173.956,
                -40.693
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                176.333,
                -40.698
              ],
              [
                176.267,
                -40.785
              ],
              [
                176.22,
                -40.886
              ],
              [
                176.23,
                -40.904
              ],
              [
                176.146,
                -40.957
              ],
              [
                176.107,
                -41.015
              ],
              [
                176.063,
                -41.13
              ],
              [
                176.004,
                -41.171
              ],
              [
                175.963,
                -41.245
              ],
              [
                175.883,
                -41.274
              ],
              [
                175.863,
                -41.317
              ],
              [
                175.811,
                -41.361
              ],
              [
                175.674,
                -41.414
              ],
              [
                175.585,
                -41.487
              ],
              [
                175.534,
                -41.496
              ],
              [
                175.432,
                -41.572
              ],
              [
                175.366,
                -41.572
              ],
              [
                175.325,
                -41.606
              ],
              [
                175.291,
                -41.614
              ],
              [
                175.237,
                -41.608
              ],
              [
                175.218,
                -41.54
              ],
              [
                175.195,
                -41.527
              ],
              [
                175.217,
                -41.431
              ],
              [
                175.121,
                -41.389
              ],
              [
                175.042,
                -41.374
              ],
              [
                174.919,
                -41.437
              ],
              [
                174.869,
                -41.41
              ],
              [
                174.875,
                -41.384
              ],
              [
                174.848,
                -41.359
              ],
              [
                174.912,
                -41.259
              ],
              [
                174.899,
                -41.259
              ],
              [
                174.901,
                -41.237
              ],
              [
                174.886,
                -41.231
              ],
              [
                174.844,
                -41.229
              ],
              [
                174.786,
                -41.265
              ],
              [
                174.779,
                -41.288
              ],
              [
                174.804,
                -41.286
              ],
              [
                174.803,
                -41.316
              ],
              [
                174.826,
                -41.284
              ],
              [
                174.834,
                -41.289
              ],
              [
                174.839,
                -41.328
              ],
              [
                174.821,
                -41.345
              ],
              [
                174.799,
                -41.329
              ],
              [
                174.792,
                -41.347
              ],
              [
                174.715,
                -41.362
              ],
              [
                174.66,
                -41.341
              ],
              [
                174.616,
                -41.292
              ],
              [
                174.644,
                -41.239
              ],
              [
                174.664,
                -41.247
              ],
              [
                174.714,
                -41.219
              ],
              [
                174.74,
                -41.172
              ],
              [
                174.805,
                -41.111
              ],
              [
                174.85,
                -41.089
              ],
              [
                174.863,
                -41.103
              ],
              [
                174.837,
                -41.125
              ],
              [
                174.859,
                -41.116
              ],
              [
                174.869,
                -41.104
              ],
              [
                174.867,
                -41.087
              ],
              [
                174.839,
                -41.064
              ],
              [
                174.846,
                -41.05
              ],
              [
                174.948,
                -40.99
              ],
              [
                174.983,
                -40.885
              ],
              [
                175.063,
                -40.824
              ],
              [
                175.16,
                -40.663
              ],
              [
                175.214,
                -40.481
              ],
              [
                175.229,
                -40.369
              ],
              [
                175.191,
                -40.158
              ],
              [
                175.144,
                -40.083
              ],
              [
                175.069,
                -40.007
              ],
              [
                174.928,
                -39.899
              ],
              [
                174.807,
                -39.859
              ],
              [
                174.717,
                -39.867
              ],
              [
                174.649,
                -39.835
              ],
              [
                174.559,
                -39.817
              ],
              [
                174.418,
                -39.732
              ],
              [
                174.353,
                -39.659
              ],
              [
                174.298,
                -39.627
              ],
              [
                174.202,
                -39.588
              ],
              [
                173.987,
                -39.554
              ],
              [
                173.911,
                -39.519
              ],
              [
                173.793,
                -39.413
              ],
              [
                173.751,
                -39.279
              ],
              [
                173.792,
                -39.193
              ],
              [
                173.846,
                -39.154
              ],
              [
                173.978,
                -39.1
              ],
              [
                174.029,
                -39.054
              ],
              [
                174.089,
                -39.051
              ],
              [
                174.2,
                -38.989
              ],
              [
                174.407,
                -38.983
              ],
              [
                174.593,
                -38.817
              ],
              [
                174.646,
                -38.456
              ],
              [
                174.635,
                -38.387
              ],
              [
                174.657,
                -38.383
              ],
              [
                174.716,
                -38.306
              ],
              [
                174.714,
                -38.202
              ],
              [
                174.681,
                -38.11
              ],
              [
                174.734,
                -38.124
              ],
              [
                174.775,
                -38.088
              ],
              [
                174.762,
                -38.12
              ],
              [
                174.779,
                -38.109
              ],
              [
                174.778,
                -38.136
              ],
              [
                174.805,
                -38.119
              ],
              [
                174.807,
                -38.143
              ],
              [
                174.813,
                -38.138
              ],
              [
                174.819,
                -38.136
              ],
              [
                174.823,
                -38.134
              ],
              [
                174.824,
                -38.134
              ],
              [
                174.815,
                -38.145
              ],
              [
                174.828,
                -38.142
              ],
              [
                174.829,
                -38.158
              ],
              [
                174.835,
                -38.133
              ],
              [
                174.849,
                -38.13
              ],
              [
                174.85,
                -38.139
              ],
              [
                174.855,
                -38.142
              ],
              [
                174.851,
                -38.151
              ],
              [
                174.854,
                -38.155
              ],
              [
                174.858,
                -38.14
              ],
              [
                174.843,
                -38.117
              ],
              [
                174.818,
                -38.129
              ],
              [
                174.827,
                -38.108
              ],
              [
                174.848,
                -38.102
              ],
              [
                174.847,
                -38.117
              ],
              [
                174.855,
                -38.119
              ],
              [
                174.859,
                -38.099
              ],
              [
                174.863,
                -38.121
              ],
              [
                174.875,
                -38.127
              ],
              [
                174.893,
                -38.12
              ],
              [
                174.894,
                -38.107
              ],
              [
                174.875,
                -38.115
              ],
              [
                174.869,
                -38.095
              ],
              [
                174.921,
                -38.092
              ],
              [
                174.903,
                -38.084
              ],
              [
                174.912,
                -38.082
              ],
              [
                174.917,
                -38.075
              ],
              [
                174.876,
                -38.078
              ],
              [
                174.9,
                -38.075
              ],
              [
                174.909,
                -38.066
              ],
              [
                174.895,
                -38.064
              ],
              [
                174.911,
                -38.055
              ],
              [
                174.908,
                -38.05
              ],
              [
                174.89,
                -38.065
              ],
              [
                174.888,
                -38.047
              ],
              [
                174.86,
                -38.056
              ],
              [
                174.859,
                -38.037
              ],
              [
                174.847,
                -38.062
              ],
              [
                174.842,
                -38.04
              ],
              [
                174.811,
                -38.079
              ],
              [
                174.778,
                -38.083
              ],
              [
                174.79,
                -38.027
              ],
              [
                174.821,
                -38.006
              ],
              [
                174.849,
                -38.025
              ],
              [
                174.861,
                -37.99
              ],
              [
                174.873,
                -37.998
              ],
              [
                174.873,
                -37.969
              ],
              [
                174.896,
                -37.963
              ],
              [
                174.851,
                -37.952
              ],
              [
                174.851,
                -37.932
              ],
              [
                174.814,
                -37.965
              ],
              [
                174.834,
                -37.99
              ],
              [
                174.796,
                -38.015
              ],
              [
                174.758,
                -37.859
              ],
              [
                174.777,
                -37.831
              ],
              [
                174.844,
                -37.804
              ],
              [
                174.865,
                -37.801
              ],
              [
                174.862,
                -37.805
              ],
              [
                174.85,
                -37.807
              ],
              [
                174.845,
                -37.811
              ],
              [
                174.861,
                -37.807
              ],
              [
                174.87,
                -37.832
              ],
              [
                174.872,
                -37.796
              ],
              [
                174.902,
                -37.818
              ],
              [
                174.899,
                -37.805
              ],
              [
                174.929,
                -37.808
              ],
              [
                174.919,
                -37.796
              ],
              [
                174.929,
                -37.801
              ],
              [
                174.939,
                -37.789
              ],
              [
                174.946,
                -37.809
              ],
              [
                174.947,
                -37.789
              ],
              [
                174.973,
                -37.805
              ],
              [
                174.974,
                -37.797
              ],
              [
                174.951,
                -37.779
              ],
              [
                174.927,
                -37.796
              ],
              [
                174.913,
                -37.786
              ],
              [
                174.928,
                -37.771
              ],
              [
                174.968,
                -37.774
              ],
              [
                174.952,
                -37.766
              ],
              [
                174.959,
                -37.753
              ],
              [
                174.952,
                -37.724
              ],
              [
                174.953,
                -37.75
              ],
              [
                174.939,
                -37.752
              ],
              [
                174.94,
                -37.739
              ],
              [
                174.934,
                -37.732
              ],
              [
                174.93,
                -37.755
              ],
              [
                174.922,
                -37.742
              ],
              [
                174.913,
                -37.743
              ],
              [
                174.92,
                -37.753
              ],
              [
                174.897,
                -37.764
              ],
              [
                174.91,
                -37.766
              ],
              [
                174.901,
                -37.791
              ],
              [
                174.865,
                -37.774
              ],
              [
                174.871,
                -37.789
              ],
              [
                174.838,
                -37.796
              ],
              [
                174.769,
                -37.561
              ],
              [
                174.7,
                -37.417
              ],
              [
                174.707,
                -37.376
              ],
              [
                174.741,
                -37.386
              ],
              [
                174.775,
                -37.345
              ],
              [
                174.741,
                -37.342
              ],
              [
                174.745,
                -37.367
              ],
              [
                174.726,
                -37.38
              ],
              [
                174.692,
                -37.357
              ],
              [
                174.536,
                -37.054
              ],
              [
                174.628,
                -37.036
              ],
              [
                174.658,
                -37.044
              ],
              [
                174.665,
                -37.068
              ],
              [
                174.646,
                -37.073
              ],
              [
                174.643,
                -37.078
              ],
              [
                174.658,
                -37.082
              ],
              [
                174.64,
                -37.085
              ],
              [
                174.636,
                -37.087
              ],
              [
                174.669,
                -37.106
              ],
              [
                174.643,
                -37.121
              ],
              [
                174.667,
                -37.118
              ],
              [
                174.654,
                -37.145
              ],
              [
                174.69,
                -37.147
              ],
              [
                174.682,
                -37.157
              ],
              [
                174.668,
                -37.161
              ],
              [
                174.666,
                -37.163
              ],
              [
                174.699,
                -37.151
              ],
              [
                174.68,
                -37.175
              ],
              [
                174.697,
                -37.17
              ],
              [
                174.683,
                -37.188
              ],
              [
                174.703,
                -37.186
              ],
              [
                174.687,
                -37.203
              ],
              [
                174.704,
                -37.196
              ],
              [
                174.693,
                -37.216
              ],
              [
                174.719,
                -37.214
              ],
              [
                174.713,
                -37.197
              ],
              [
                174.729,
                -37.19
              ],
              [
                174.704,
                -37.157
              ],
              [
                174.742,
                -37.162
              ],
              [
                174.747,
                -37.188
              ],
              [
                174.746,
                -37.17
              ],
              [
                174.787,
                -37.163
              ],
              [
                174.794,
                -37.174
              ],
              [
                174.792,
                -37.163
              ],
              [
                174.768,
                -37.157
              ],
              [
                174.745,
                -37.166
              ],
              [
                174.742,
                -37.147
              ],
              [
                174.708,
                -37.152
              ],
              [
                174.69,
                -37.137
              ],
              [
                174.739,
                -37.126
              ],
              [
                174.756,
                -37.113
              ],
              [
                174.767,
                -37.096
              ],
              [
                174.77,
                -37.092
              ],
              [
                174.774,
                -37.089
              ],
              [
                174.775,
                -37.089
              ],
              [
                174.792,
                -37.092
              ],
              [
                174.776,
                -37.105
              ],
              [
                174.788,
                -37.108
              ],
              [
                174.78,
                -37.137
              ],
              [
                174.793,
                -37.138
              ],
              [
                174.797,
                -37.096
              ],
              [
                174.856,
                -37.056
              ],
              [
                174.876,
                -37.073
              ],
              [
                174.861,
                -37.089
              ],
              [
                174.866,
                -37.087
              ],
              [
                174.86,
                -37.1
              ],
              [
                174.87,
                -37.112
              ],
              [
                174.867,
                -37.086
              ],
              [
                174.897,
                -37.061
              ],
              [
                174.897,
                -37.086
              ],
              [
                174.912,
                -37.098
              ],
              [
                174.908,
                -37.101
              ],
              [
                174.9,
                -37.115
              ],
              [
                174.902,
                -37.116
              ],
              [
                174.917,
                -37.094
              ],
              [
                174.921,
                -37.1
              ],
              [
                174.924,
                -37.101
              ],
              [
                174.921,
                -37.091
              ],
              [
                174.934,
                -37.099
              ],
              [
                174.94,
                -37.095
              ],
              [
                174.943,
                -37.1
              ],
              [
                174.946,
                -37.094
              ],
              [
                174.9,
                -37.081
              ],
              [
                174.908,
                -37.061
              ],
              [
                174.934,
                -37.066
              ],
              [
                174.938,
                -37.06
              ],
              [
                174.908,
                -37.043
              ],
              [
                174.873,
                -37.055
              ],
              [
                174.893,
                -37.042
              ],
              [
                174.873,
                -37.037
              ],
              [
                174.859,
                -37.052
              ],
              [
                174.857,
                -37.017
              ],
              [
                174.84,
                -37.018
              ],
              [
                174.853,
                -37.025
              ],
              [
                174.844,
                -37.03
              ],
              [
                174.819,
                -37.003
              ],
              [
                174.802,
                -37.012
              ],
              [
                174.817,
                -37.018
              ],
              [
                174.765,
                -37.019
              ],
              [
                174.774,
                -37.011
              ],
              [
                174.771,
                -37.005
              ],
              [
                174.742,
                -36.993
              ],
              [
                174.766,
                -36.967
              ],
              [
                174.745,
                -36.973
              ],
              [
                174.736,
                -36.962
              ],
              [
                174.735,
                -36.964
              ],
              [
                174.733,
                -36.962
              ],
              [
                174.731,
                -36.963
              ],
              [
                174.73,
                -36.962
              ],
              [
                174.749,
                -36.96
              ],
              [
                174.774,
                -36.966
              ],
              [
                174.781,
                -36.955
              ],
              [
                174.756,
                -36.942
              ],
              [
                174.786,
                -36.935
              ],
              [
                174.797,
                -36.95
              ],
              [
                174.817,
                -36.943
              ],
              [
                174.809,
                -36.952
              ],
              [
                174.817,
                -36.958
              ],
              [
                174.831,
                -36.942
              ],
              [
                174.826,
                -36.929
              ],
              [
                174.771,
                -36.924
              ],
              [
                174.729,
                -36.939
              ],
              [
                174.707,
                -36.926
              ],
              [
                174.682,
                -36.934
              ],
              [
                174.65,
                -36.965
              ],
              [
                174.648,
                -36.952
              ],
              [
                174.646,
                -36.949
              ],
              [
                174.644,
                -36.948
              ],
              [
                174.633,
                -36.979
              ],
              [
                174.614,
                -36.966
              ],
              [
                174.612,
                -37.02
              ],
              [
                174.567,
                -36.999
              ],
              [
                174.557,
                -37.022
              ],
              [
                174.484,
                -37.049
              ],
              [
                174.468,
                -36.946
              ],
              [
                174.444,
                -36.912
              ],
              [
                174.448,
                -36.89
              ],
              [
                174.434,
                -36.89
              ],
              [
                174.419,
                -36.811
              ],
              [
                174.271,
                -36.608
              ],
              [
                174.168,
                -36.493
              ],
              [
                174.162,
                -36.464
              ],
              [
                174.188,
                -36.434
              ],
              [
                174.199,
                -36.43
              ],
              [
                174.218,
                -36.429
              ],
              [
                174.194,
                -36.439
              ],
              [
                174.198,
                -36.475
              ],
              [
                174.208,
                -36.439
              ],
              [
                174.236,
                -36.428
              ],
              [
                174.274,
                -36.497
              ],
              [
                174.293,
                -36.504
              ],
              [
                174.296,
                -36.53
              ],
              [
                174.377,
                -36.565
              ],
              [
                174.344,
                -36.584
              ],
              [
                174.364,
                -36.592
              ],
              [
                174.356,
                -36.601
              ],
              [
                174.348,
                -36.599
              ],
              [
                174.339,
                -36.605
              ],
              [
                174.357,
                -36.602
              ],
              [
                174.36,
                -36.599
              ],
              [
                174.352,
                -36.625
              ],
              [
                174.379,
                -36.627
              ],
              [
                174.366,
                -36.601
              ],
              [
                174.378,
                -36.591
              ],
              [
                174.378,
                -36.623
              ],
              [
                174.402,
                -36.63
              ],
              [
                174.383,
                -36.632
              ],
              [
                174.382,
                -36.635
              ],
              [
                174.413,
                -36.631
              ],
              [
                174.406,
                -36.644
              ],
              [
                174.418,
                -36.651
              ],
              [
                174.426,
                -36.639
              ],
              [
                174.405,
                -36.625
              ],
              [
                174.419,
                -36.62
              ],
              [
                174.447,
                -36.656
              ],
              [
                174.449,
                -36.656
              ],
              [
                174.428,
                -36.623
              ],
              [
                174.445,
                -36.595
              ],
              [
                174.409,
                -36.584
              ],
              [
                174.447,
                -36.554
              ],
              [
                174.423,
                -36.536
              ],
              [
                174.431,
                -36.511
              ],
              [
                174.407,
                -36.478
              ],
              [
                174.416,
                -36.441
              ],
              [
                174.425,
                -36.438
              ],
              [
                174.44,
                -36.428
              ],
              [
                174.441,
                -36.424
              ],
              [
                174.413,
                -36.411
              ],
              [
                174.414,
                -36.405
              ],
              [
                174.422,
                -36.402
              ],
              [
                174.424,
                -36.4
              ],
              [
                174.424,
                -36.397
              ],
              [
                174.393,
                -36.392
              ],
              [
                174.428,
                -36.372
              ],
              [
                174.416,
                -36.355
              ],
              [
                174.431,
                -36.353
              ],
              [
                174.44,
                -36.33
              ],
              [
                174.408,
                -36.35
              ],
              [
                174.388,
                -36.335
              ],
              [
                174.387,
                -36.352
              ],
              [
                174.415,
                -36.375
              ],
              [
                174.37,
                -36.38
              ],
              [
                174.384,
                -36.403
              ],
              [
                174.357,
                -36.411
              ],
              [
                174.31,
                -36.377
              ],
              [
                174.312,
                -36.365
              ],
              [
                174.308,
                -36.362
              ],
              [
                174.307,
                -36.357
              ],
              [
                174.304,
                -36.354
              ],
              [
                174.31,
                -36.389
              ],
              [
                174.257,
                -36.381
              ],
              [
                174.258,
                -36.326
              ],
              [
                174.281,
                -36.306
              ],
              [
                174.31,
                -36.328
              ],
              [
                174.325,
                -36.32
              ],
              [
                174.321,
                -36.331
              ],
              [
                174.37,
                -36.324
              ],
              [
                174.366,
                -36.311
              ],
              [
                174.384,
                -36.326
              ],
              [
                174.379,
                -36.312
              ],
              [
                174.394,
                -36.32
              ],
              [
                174.414,
                -36.28
              ],
              [
                174.433,
                -36.303
              ],
              [
                174.43,
                -36.271
              ],
              [
                174.455,
                -36.255
              ],
              [
                174.462,
                -36.265
              ],
              [
                174.479,
                -36.264
              ],
              [
                174.477,
                -36.278
              ],
              [
                174.495,
                -36.273
              ],
              [
                174.48,
                -36.266
              ],
              [
                174.488,
                -36.254
              ],
              [
                174.499,
                -36.256
              ],
              [
                174.508,
                -36.251
              ],
              [
                174.491,
                -36.253
              ],
              [
                174.498,
                -36.24
              ],
              [
                174.473,
                -36.259
              ],
              [
                174.482,
                -36.228
              ],
              [
                174.474,
                -36.229
              ],
              [
                174.476,
                -36.225
              ],
              [
                174.474,
                -36.222
              ],
              [
                174.476,
                -36.22
              ],
              [
                174.473,
                -36.218
              ],
              [
                174.475,
                -36.212
              ],
              [
                174.47,
                -36.212
              ],
              [
                174.465,
                -36.26
              ],
              [
                174.455,
                -36.249
              ],
              [
                174.436,
                -36.263
              ],
              [
                174.432,
                -36.262
              ],
              [
                174.432,
                -36.26
              ],
              [
                174.43,
                -36.259
              ],
              [
                174.428,
                -36.255
              ],
              [
                174.425,
                -36.253
              ],
              [
                174.424,
                -36.253
              ],
              [
                174.426,
                -36.271
              ],
              [
                174.398,
                -36.288
              ],
              [
                174.374,
                -36.276
              ],
              [
                174.355,
                -36.309
              ],
              [
                174.313,
                -36.314
              ],
              [
                174.302,
                -36.29
              ],
              [
                174.275,
                -36.286
              ],
              [
                174.271,
                -36.262
              ],
              [
                174.308,
                -36.244
              ],
              [
                174.318,
                -36.273
              ],
              [
                174.332,
                -36.263
              ],
              [
                174.349,
                -36.267
              ],
              [
                174.342,
                -36.282
              ],
              [
                174.361,
                -36.281
              ],
              [
                174.367,
                -36.272
              ],
              [
                174.323,
                -36.249
              ],
              [
                174.322,
                -36.234
              ],
              [
                174.345,
                -36.235
              ],
              [
                174.339,
                -36.226
              ],
              [
                174.351,
                -36.228
              ],
              [
                174.356,
                -36.227
              ],
              [
                174.34,
                -36.219
              ],
              [
                174.368,
                -36.204
              ],
              [
                174.381,
                -36.21
              ],
              [
                174.373,
                -36.181
              ],
              [
                174.393,
                -36.186
              ],
              [
                174.391,
                -36.175
              ],
              [
                174.399,
                -36.175
              ],
              [
                174.397,
                -36.172
              ],
              [
                174.372,
                -36.169
              ],
              [
                174.401,
                -36.157
              ],
              [
                174.389,
                -36.148
              ],
              [
                174.432,
                -36.157
              ],
              [
                174.424,
                -36.138
              ],
              [
                174.389,
                -36.145
              ],
              [
                174.395,
                -36.137
              ],
              [
                174.362,
                -36.116
              ],
              [
                174.385,
                -36.155
              ],
              [
                174.367,
                -36.16
              ],
              [
                174.359,
                -36.205
              ],
              [
                174.314,
                -36.226
              ],
              [
                174.314,
                -36.201
              ],
              [
                174.328,
                -36.196
              ],
              [
                174.33,
                -36.193
              ],
              [
                174.312,
                -36.195
              ],
              [
                174.297,
                -36.212
              ],
              [
                174.266,
                -36.185
              ],
              [
                174.301,
                -36.183
              ],
              [
                174.298,
                -36.178
              ],
              [
                174.311,
                -36.18
              ],
              [
                174.313,
                -36.172
              ],
              [
                174.284,
                -36.178
              ],
              [
                174.286,
                -36.171
              ],
              [
                174.291,
                -36.171
              ],
              [
                174.292,
                -36.166
              ],
              [
                174.297,
                -36.164
              ],
              [
                174.297,
                -36.163
              ],
              [
                174.257,
                -36.177
              ],
              [
                174.244,
                -36.166
              ],
              [
                174.254,
                -36.184
              ],
              [
                174.236,
                -36.171
              ],
              [
                174.239,
                -36.138
              ],
              [
                174.255,
                -36.118
              ],
              [
                174.258,
                -36.123
              ],
              [
                174.269,
                -36.121
              ],
              [
                174.27,
                -36.117
              ],
              [
                174.256,
                -36.112
              ],
              [
                174.239,
                -36.122
              ],
              [
                174.226,
                -36.16
              ],
              [
                174.218,
                -36.121
              ],
              [
                174.235,
                -36.116
              ],
              [
                174.233,
                -36.106
              ],
              [
                174.218,
                -36.115
              ],
              [
                174.206,
                -36.137
              ],
              [
                174.201,
                -36.125
              ],
              [
                174.186,
                -36.123
              ],
              [
                174.19,
                -36.142
              ],
              [
                174.162,
                -36.141
              ],
              [
                174.199,
                -36.151
              ],
              [
                174.168,
                -36.158
              ],
              [
                174.192,
                -36.16
              ],
              [
                174.187,
                -36.175
              ],
              [
                174.21,
                -36.159
              ],
              [
                174.236,
                -36.182
              ],
              [
                174.205,
                -36.176
              ],
              [
                174.196,
                -36.188
              ],
              [
                174.195,
                -36.196
              ],
              [
                174.24,
                -36.185
              ],
              [
                174.22,
                -36.197
              ],
              [
                174.218,
                -36.208
              ],
              [
                174.232,
                -36.215
              ],
              [
                174.245,
                -36.196
              ],
              [
                174.249,
                -36.212
              ],
              [
                174.263,
                -36.194
              ],
              [
                174.266,
                -36.219
              ],
              [
                174.288,
                -36.215
              ],
              [
                174.293,
                -36.238
              ],
              [
                174.273,
                -36.234
              ],
              [
                174.227,
                -36.263
              ],
              [
                174.154,
                -36.214
              ],
              [
                174.121,
                -36.168
              ],
              [
                174.046,
                -36.17
              ],
              [
                173.99,
                -36.124
              ],
              [
                174.039,
                -36.19
              ],
              [
                174.071,
                -36.202
              ],
              [
                174.079,
                -36.236
              ],
              [
                174.108,
                -36.25
              ],
              [
                174.097,
                -36.269
              ],
              [
                174.122,
                -36.258
              ],
              [
                174.155,
                -36.276
              ],
              [
                174.157,
                -36.291
              ],
              [
                174.122,
                -36.301
              ],
              [
                174.158,
                -36.301
              ],
              [
                174.181,
                -36.336
              ],
              [
                174.181,
                -36.365
              ],
              [
                174.142,
                -36.39
              ],
              [
                174.037,
                -36.391
              ],
              [
                174.014,
                -36.295
              ],
              [
                173.967,
                -36.209
              ],
              [
                173.365,
                -35.547
              ],
              [
                173.367,
                -35.534
              ],
              [
                173.386,
                -35.535
              ],
              [
                173.411,
                -35.48
              ],
              [
                173.416,
                -35.489
              ],
              [
                173.428,
                -35.486
              ],
              [
                173.402,
                -35.472
              ],
              [
                173.42,
                -35.469
              ],
              [
                173.423,
                -35.42
              ],
              [
                173.444,
                -35.45
              ],
              [
                173.465,
                -35.454
              ],
              [
                173.448,
                -35.438
              ],
              [
                173.458,
                -35.444
              ],
              [
                173.47,
                -35.442
              ],
              [
                173.442,
                -35.431
              ],
              [
                173.438,
                -35.413
              ],
              [
                173.472,
                -35.429
              ],
              [
                173.463,
                -35.407
              ],
              [
                173.481,
                -35.407
              ],
              [
                173.499,
                -35.457
              ],
              [
                173.503,
                -35.446
              ],
              [
                173.525,
                -35.45
              ],
              [
                173.496,
                -35.422
              ],
              [
                173.505,
                -35.391
              ],
              [
                173.518,
                -35.423
              ],
              [
                173.535,
                -35.427
              ],
              [
                173.529,
                -35.439
              ],
              [
                173.545,
                -35.433
              ],
              [
                173.548,
                -35.41
              ],
              [
                173.554,
                -35.42
              ],
              [
                173.58,
                -35.421
              ],
              [
                173.584,
                -35.424
              ],
              [
                173.588,
                -35.437
              ],
              [
                173.591,
                -35.441
              ],
              [
                173.596,
                -35.442
              ],
              [
                173.605,
                -35.437
              ],
              [
                173.613,
                -35.437
              ],
              [
                173.617,
                -35.436
              ],
              [
                173.619,
                -35.437
              ],
              [
                173.618,
                -35.435
              ],
              [
                173.604,
                -35.437
              ],
              [
                173.592,
                -35.441
              ],
              [
                173.583,
                -35.421
              ],
              [
                173.553,
                -35.408
              ],
              [
                173.545,
                -35.41
              ],
              [
                173.537,
                -35.425
              ],
              [
                173.525,
                -35.406
              ],
              [
                173.54,
                -35.379
              ],
              [
                173.555,
                -35.385
              ],
              [
                173.562,
                -35.355
              ],
              [
                173.593,
                -35.372
              ],
              [
                173.585,
                -35.36
              ],
              [
                173.613,
                -35.344
              ],
              [
                173.636,
                -35.314
              ],
              [
                173.64,
                -35.312
              ],
              [
                173.642,
                -35.306
              ],
              [
                173.61,
                -35.305
              ],
              [
                173.589,
                -35.33
              ],
              [
                173.597,
                -35.338
              ],
              [
                173.589,
                -35.345
              ],
              [
                173.57,
                -35.337
              ],
              [
                173.582,
                -35.326
              ],
              [
                173.564,
                -35.301
              ],
              [
                173.572,
                -35.328
              ],
              [
                173.549,
                -35.338
              ],
              [
                173.526,
                -35.275
              ],
              [
                173.55,
                -35.26
              ],
              [
                173.543,
                -35.261
              ],
              [
                173.521,
                -35.275
              ],
              [
                173.524,
                -35.314
              ],
              [
                173.545,
                -35.335
              ],
              [
                173.54,
                -35.375
              ],
              [
                173.486,
                -35.386
              ],
              [
                173.476,
                -35.363
              ],
              [
                173.458,
                -35.374
              ],
              [
                173.453,
                -35.361
              ],
              [
                173.432,
                -35.358
              ],
              [
                173.451,
                -35.377
              ],
              [
                173.48,
                -35.383
              ],
              [
                173.481,
                -35.4
              ],
              [
                173.439,
                -35.404
              ],
              [
                173.444,
                -35.394
              ],
              [
                173.436,
                -35.39
              ],
              [
                173.423,
                -35.408
              ],
              [
                173.425,
                -35.391
              ],
              [
                173.407,
                -35.383
              ],
              [
                173.421,
                -35.394
              ],
              [
                173.399,
                -35.41
              ],
              [
                173.382,
                -35.389
              ],
              [
                173.408,
                -35.43
              ],
              [
                173.36,
                -35.42
              ],
              [
                173.36,
                -35.433
              ],
              [
                173.389,
                -35.434
              ],
              [
                173.374,
                -35.474
              ],
              [
                173.387,
                -35.486
              ],
              [
                173.37,
                -35.496
              ],
              [
                173.369,
                -35.523
              ],
              [
                173.354,
                -35.521
              ],
              [
                173.219,
                -35.382
              ],
              [
                173.227,
                -35.378
              ],
              [
                173.231,
                -35.358
              ],
              [
                173.275,
                -35.338
              ],
              [
                173.237,
                -35.348
              ],
              [
                173.232,
                -35.339
              ],
              [
                173.253,
                -35.334
              ],
              [
                173.281,
                -35.277
              ],
              [
                173.243,
                -35.322
              ],
              [
                173.223,
                -35.317
              ],
              [
                173.248,
                -35.328
              ],
              [
                173.22,
                -35.335
              ],
              [
                173.233,
                -35.355
              ],
              [
                173.214,
                -35.378
              ],
              [
                173.156,
                -35.301
              ],
              [
                173.201,
                -35.296
              ],
              [
                173.183,
                -35.287
              ],
              [
                173.203,
                -35.281
              ],
              [
                173.21,
                -35.261
              ],
              [
                173.163,
                -35.292
              ],
              [
                173.054,
                -35.191
              ],
              [
                173.071,
                -35.164
              ],
              [
                173.135,
                -35.177
              ],
              [
                173.169,
                -35.136
              ],
              [
                173.173,
                -35.059
              ],
              [
                173.136,
                -34.969
              ],
              [
                172.85,
                -34.628
              ],
              [
                172.738,
                -34.533
              ],
              [
                172.704,
                -34.524
              ],
              [
                172.69,
                -34.491
              ],
              [
                172.643,
                -34.477
              ],
              [
                172.673,
                -34.46
              ],
              [
                172.68,
                -34.42
              ],
              [
                172.785,
                -34.454
              ],
              [
                172.837,
                -34.444
              ],
              [
                172.857,
                -34.414
              ],
              [
                172.964,
                -34.426
              ],
              [
                173.013,
                -34.393
              ],
              [
                173.047,
                -34.411
              ],
              [
                173.012,
                -34.428
              ],
              [
                172.999,
                -34.516
              ],
              [
                172.966,
                -34.521
              ],
              [
                172.977,
                -34.499
              ],
              [
                172.952,
                -34.501
              ],
              [
                172.952,
                -34.489
              ],
              [
                172.937,
                -34.506
              ],
              [
                172.922,
                -34.502
              ],
              [
                172.946,
                -34.475
              ],
              [
                172.923,
                -34.487
              ],
              [
                172.931,
                -34.471
              ],
              [
                172.901,
                -34.465
              ],
              [
                172.89,
                -34.479
              ],
              [
                172.924,
                -34.49
              ],
              [
                172.901,
                -34.496
              ],
              [
                172.924,
                -34.516
              ],
              [
                172.905,
                -34.533
              ],
              [
                172.887,
                -34.51
              ],
              [
                172.861,
                -34.509
              ],
              [
                172.895,
                -34.531
              ],
              [
                172.868,
                -34.543
              ],
              [
                172.862,
                -34.54
              ],
              [
                172.858,
                -34.541
              ],
              [
                172.857,
                -34.54
              ],
              [
                172.854,
                -34.54
              ],
              [
                172.854,
                -34.539
              ],
              [
                172.853,
                -34.539
              ],
              [
                172.851,
                -34.539
              ],
              [
                172.85,
                -34.539
              ],
              [
                172.876,
                -34.554
              ],
              [
                172.919,
                -34.552
              ],
              [
                172.946,
                -34.527
              ],
              [
                172.935,
                -34.554
              ],
              [
                172.906,
                -34.561
              ],
              [
                172.915,
                -34.571
              ],
              [
                172.924,
                -34.56
              ],
              [
                172.929,
                -34.572
              ],
              [
                172.908,
                -34.579
              ],
              [
                172.927,
                -34.577
              ],
              [
                172.913,
                -34.587
              ],
              [
                172.927,
                -34.588
              ],
              [
                172.95,
                -34.551
              ],
              [
                172.963,
                -34.558
              ],
              [
                172.972,
                -34.574
              ],
              [
                172.941,
                -34.585
              ],
              [
                172.964,
                -34.588
              ],
              [
                172.947,
                -34.594
              ],
              [
                172.977,
                -34.621
              ],
              [
                172.989,
                -34.572
              ],
              [
                172.957,
                -34.533
              ],
              [
                172.985,
                -34.528
              ],
              [
                173.035,
                -34.671
              ],
              [
                173.132,
                -34.763
              ],
              [
                173.155,
                -34.766
              ],
              [
                173.147,
                -34.78
              ],
              [
                173.175,
                -34.803
              ],
              [
                173.169,
                -34.825
              ],
              [
                173.156,
                -34.823
              ],
              [
                173.133,
                -34.807
              ],
              [
                173.125,
                -34.777
              ],
              [
                173.112,
                -34.777
              ],
              [
                173.094,
                -34.761
              ],
              [
                173.081,
                -34.758
              ],
              [
                173.078,
                -34.759
              ],
              [
                173.132,
                -34.832
              ],
              [
                173.151,
                -34.822
              ],
              [
                173.194,
                -34.868
              ],
              [
                173.281,
                -34.893
              ],
              [
                173.269,
                -34.922
              ],
              [
                173.214,
                -34.934
              ],
              [
                173.236,
                -34.938
              ],
              [
                173.213,
                -34.968
              ],
              [
                173.22,
                -34.995
              ],
              [
                173.236,
                -34.995
              ],
              [
                173.231,
                -35.019
              ],
              [
                173.235,
                -35.009
              ],
              [
                173.241,
                -35.024
              ],
              [
                173.252,
                -35.021
              ],
              [
                173.237,
                -35.008
              ],
              [
                173.251,
                -34.993
              ],
              [
                173.291,
                -35
              ],
              [
                173.282,
                -35.013
              ],
              [
                173.296,
                -35.018
              ],
              [
                173.308,
                -34.993
              ],
              [
                173.316,
                -35.01
              ],
              [
                173.339,
                -34.954
              ],
              [
                173.286,
                -34.862
              ],
              [
                173.384,
                -34.84
              ],
              [
                173.399,
                -34.784
              ],
              [
                173.413,
                -34.797
              ],
              [
                173.412,
                -34.833
              ],
              [
                173.45,
                -34.825
              ],
              [
                173.441,
                -34.836
              ],
              [
                173.47,
                -34.849
              ],
              [
                173.414,
                -34.881
              ],
              [
                173.373,
                -34.882
              ],
              [
                173.378,
                -34.934
              ],
              [
                173.429,
                -34.984
              ],
              [
                173.468,
                -34.994
              ],
              [
                173.526,
                -34.98
              ],
              [
                173.543,
                -35.011
              ],
              [
                173.551,
                -35
              ],
              [
                173.551,
                -35.017
              ],
              [
                173.561,
                -35.013
              ],
              [
                173.562,
                -34.986
              ],
              [
                173.548,
                -34.973
              ],
              [
                173.534,
                -34.984
              ],
              [
                173.526,
                -34.951
              ],
              [
                173.559,
                -34.914
              ],
              [
                173.573,
                -34.944
              ],
              [
                173.621,
                -34.939
              ],
              [
                173.646,
                -34.967
              ],
              [
                173.7,
                -34.952
              ],
              [
                173.712,
                -34.994
              ],
              [
                173.757,
                -35
              ],
              [
                173.722,
                -35.006
              ],
              [
                173.749,
                -35.014
              ],
              [
                173.747,
                -35.025
              ],
              [
                173.7,
                -35.055
              ],
              [
                173.718,
                -35.06
              ],
              [
                173.72,
                -35.084
              ],
              [
                173.756,
                -35.074
              ],
              [
                173.741,
                -35.067
              ],
              [
                173.748,
                -35.038
              ],
              [
                173.763,
                -35.054
              ],
              [
                173.775,
                -35.051
              ],
              [
                173.758,
                -35.035
              ],
              [
                173.783,
                -35.038
              ],
              [
                173.762,
                -35.007
              ],
              [
                173.861,
                -34.99
              ],
              [
                173.844,
                -34.999
              ],
              [
                173.86,
                -35.019
              ],
              [
                173.893,
                -35.01
              ],
              [
                173.92,
                -35.027
              ],
              [
                173.914,
                -35.039
              ],
              [
                173.939,
                -35.053
              ],
              [
                173.927,
                -35.064
              ],
              [
                173.936,
                -35.089
              ],
              [
                173.963,
                -35.119
              ],
              [
                174.08,
                -35.117
              ],
              [
                174.098,
                -35.151
              ],
              [
                174.126,
                -35.156
              ],
              [
                174.121,
                -35.172
              ],
              [
                174.088,
                -35.171
              ],
              [
                174.067,
                -35.194
              ],
              [
                174.045,
                -35.156
              ],
              [
                174.074,
                -35.158
              ],
              [
                174.07,
                -35.146
              ],
              [
                174.044,
                -35.144
              ],
              [
                174.039,
                -35.168
              ],
              [
                174.02,
                -35.158
              ],
              [
                174.023,
                -35.142
              ],
              [
                174.004,
                -35.138
              ],
              [
                173.979,
                -35.153
              ],
              [
                173.977,
                -35.175
              ],
              [
                173.983,
                -35.159
              ],
              [
                174.004,
                -35.157
              ],
              [
                174.004,
                -35.172
              ],
              [
                174.05,
                -35.193
              ],
              [
                174.011,
                -35.188
              ],
              [
                173.963,
                -35.217
              ],
              [
                174.071,
                -35.211
              ],
              [
                174.058,
                -35.228
              ],
              [
                174.076,
                -35.238
              ],
              [
                174.083,
                -35.272
              ],
              [
                174.059,
                -35.262
              ],
              [
                174.067,
                -35.271
              ],
              [
                174.056,
                -35.273
              ],
              [
                174.051,
                -35.278
              ],
              [
                174.07,
                -35.285
              ],
              [
                174.08,
                -35.273
              ],
              [
                174.102,
                -35.308
              ],
              [
                174.122,
                -35.312
              ],
              [
                174.094,
                -35.333
              ],
              [
                174.118,
                -35.331
              ],
              [
                174.103,
                -35.339
              ],
              [
                174.104,
                -35.362
              ],
              [
                174.143,
                -35.367
              ],
              [
                174.107,
                -35.345
              ],
              [
                174.123,
                -35.345
              ],
              [
                174.134,
                -35.315
              ],
              [
                174.136,
                -35.341
              ],
              [
                174.145,
                -35.328
              ],
              [
                174.162,
                -35.338
              ],
              [
                174.181,
                -35.331
              ],
              [
                174.143,
                -35.321
              ],
              [
                174.158,
                -35.313
              ],
              [
                174.21,
                -35.322
              ],
              [
                174.213,
                -35.341
              ],
              [
                174.233,
                -35.325
              ],
              [
                174.199,
                -35.31
              ],
              [
                174.214,
                -35.305
              ],
              [
                174.207,
                -35.296
              ],
              [
                174.195,
                -35.312
              ],
              [
                174.191,
                -35.295
              ],
              [
                174.176,
                -35.305
              ],
              [
                174.167,
                -35.291
              ],
              [
                174.162,
                -35.305
              ],
              [
                174.122,
                -35.308
              ],
              [
                174.115,
                -35.283
              ],
              [
                174.149,
                -35.288
              ],
              [
                174.113,
                -35.258
              ],
              [
                174.12,
                -35.242
              ],
              [
                174.168,
                -35.277
              ],
              [
                174.197,
                -35.28
              ],
              [
                174.176,
                -35.272
              ],
              [
                174.178,
                -35.263
              ],
              [
                174.205,
                -35.284
              ],
              [
                174.213,
                -35.282
              ],
              [
                174.213,
                -35.253
              ],
              [
                174.194,
                -35.257
              ],
              [
                174.194,
                -35.254
              ],
              [
                174.19,
                -35.252
              ],
              [
                174.188,
                -35.248
              ],
              [
                174.264,
                -35.261
              ],
              [
                174.238,
                -35.244
              ],
              [
                174.26,
                -35.236
              ],
              [
                174.252,
                -35.222
              ],
              [
                174.284,
                -35.227
              ],
              [
                174.29,
                -35.202
              ],
              [
                174.305,
                -35.2
              ],
              [
                174.294,
                -35.186
              ],
              [
                174.334,
                -35.172
              ],
              [
                174.341,
                -35.191
              ],
              [
                174.318,
                -35.195
              ],
              [
                174.316,
                -35.219
              ],
              [
                174.291,
                -35.234
              ],
              [
                174.313,
                -35.237
              ],
              [
                174.293,
                -35.25
              ],
              [
                174.295,
                -35.254
              ],
              [
                174.307,
                -35.247
              ],
              [
                174.326,
                -35.25
              ],
              [
                174.297,
                -35.256
              ],
              [
                174.29,
                -35.275
              ],
              [
                174.337,
                -35.325
              ],
              [
                174.377,
                -35.319
              ],
              [
                174.35,
                -35.339
              ],
              [
                174.376,
                -35.35
              ],
              [
                174.377,
                -35.377
              ],
              [
                174.357,
                -35.373
              ],
              [
                174.36,
                -35.355
              ],
              [
                174.335,
                -35.347
              ],
              [
                174.337,
                -35.335
              ],
              [
                174.323,
                -35.341
              ],
              [
                174.305,
                -35.32
              ],
              [
                174.303,
                -35.33
              ],
              [
                174.313,
                -35.347
              ],
              [
                174.329,
                -35.345
              ],
              [
                174.313,
                -35.357
              ],
              [
                174.34,
                -35.364
              ],
              [
                174.358,
                -35.416
              ],
              [
                174.375,
                -35.42
              ],
              [
                174.363,
                -35.437
              ],
              [
                174.393,
                -35.43
              ],
              [
                174.409,
                -35.444
              ],
              [
                174.419,
                -35.424
              ],
              [
                174.432,
                -35.428
              ],
              [
                174.428,
                -35.456
              ],
              [
                174.453,
                -35.468
              ],
              [
                174.48,
                -35.514
              ],
              [
                174.437,
                -35.505
              ],
              [
                174.429,
                -35.518
              ],
              [
                174.451,
                -35.526
              ],
              [
                174.468,
                -35.512
              ],
              [
                174.459,
                -35.531
              ],
              [
                174.473,
                -35.556
              ],
              [
                174.511,
                -35.556
              ],
              [
                174.506,
                -35.567
              ],
              [
                174.536,
                -35.581
              ],
              [
                174.542,
                -35.612
              ],
              [
                174.537,
                -35.614
              ],
              [
                174.528,
                -35.609
              ],
              [
                174.524,
                -35.611
              ],
              [
                174.542,
                -35.62
              ],
              [
                174.536,
                -35.64
              ],
              [
                174.514,
                -35.627
              ],
              [
                174.478,
                -35.643
              ],
              [
                174.485,
                -35.635
              ],
              [
                174.466,
                -35.644
              ],
              [
                174.468,
                -35.639
              ],
              [
                174.466,
                -35.639
              ],
              [
                174.467,
                -35.638
              ],
              [
                174.467,
                -35.636
              ],
              [
                174.465,
                -35.635
              ],
              [
                174.461,
                -35.64
              ],
              [
                174.449,
                -35.633
              ],
              [
                174.436,
                -35.635
              ],
              [
                174.467,
                -35.653
              ],
              [
                174.514,
                -35.63
              ],
              [
                174.502,
                -35.649
              ],
              [
                174.525,
                -35.714
              ],
              [
                174.499,
                -35.713
              ],
              [
                174.499,
                -35.732
              ],
              [
                174.485,
                -35.731
              ],
              [
                174.482,
                -35.736
              ],
              [
                174.485,
                -35.745
              ],
              [
                174.508,
                -35.731
              ],
              [
                174.505,
                -35.721
              ],
              [
                174.542,
                -35.711
              ],
              [
                174.526,
                -35.726
              ],
              [
                174.54,
                -35.737
              ],
              [
                174.532,
                -35.747
              ],
              [
                174.524,
                -35.746
              ],
              [
                174.516,
                -35.751
              ],
              [
                174.515,
                -35.753
              ],
              [
                174.514,
                -35.755
              ],
              [
                174.539,
                -35.753
              ],
              [
                174.552,
                -35.734
              ],
              [
                174.537,
                -35.726
              ],
              [
                174.56,
                -35.716
              ],
              [
                174.567,
                -35.717
              ],
              [
                174.552,
                -35.728
              ],
              [
                174.563,
                -35.745
              ],
              [
                174.551,
                -35.746
              ],
              [
                174.561,
                -35.763
              ],
              [
                174.549,
                -35.787
              ],
              [
                174.591,
                -35.854
              ],
              [
                174.531,
                -35.862
              ],
              [
                174.533,
                -35.835
              ],
              [
                174.497,
                -35.828
              ],
              [
                174.504,
                -35.811
              ],
              [
                174.49,
                -35.788
              ],
              [
                174.481,
                -35.793
              ],
              [
                174.457,
                -35.793
              ],
              [
                174.478,
                -35.772
              ],
              [
                174.428,
                -35.781
              ],
              [
                174.443,
                -35.796
              ],
              [
                174.379,
                -35.757
              ],
              [
                174.361,
                -35.776
              ],
              [
                174.361,
                -35.739
              ],
              [
                174.344,
                -35.731
              ],
              [
                174.335,
                -35.738
              ],
              [
                174.348,
                -35.737
              ],
              [
                174.351,
                -35.758
              ],
              [
                174.322,
                -35.761
              ],
              [
                174.306,
                -35.785
              ],
              [
                174.332,
                -35.778
              ],
              [
                174.341,
                -35.792
              ],
              [
                174.323,
                -35.81
              ],
              [
                174.341,
                -35.821
              ],
              [
                174.306,
                -35.837
              ],
              [
                174.356,
                -35.844
              ],
              [
                174.341,
                -35.837
              ],
              [
                174.36,
                -35.834
              ],
              [
                174.356,
                -35.813
              ],
              [
                174.372,
                -35.806
              ],
              [
                174.369,
                -35.835
              ],
              [
                174.383,
                -35.814
              ],
              [
                174.405,
                -35.831
              ],
              [
                174.426,
                -35.827
              ],
              [
                174.423,
                -35.838
              ],
              [
                174.454,
                -35.818
              ],
              [
                174.473,
                -35.839
              ],
              [
                174.499,
                -35.838
              ],
              [
                174.467,
                -35.883
              ],
              [
                174.464,
                -35.95
              ],
              [
                174.509,
                -36.03
              ],
              [
                174.54,
                -36.049
              ],
              [
                174.59,
                -36.048
              ],
              [
                174.599,
                -36.082
              ],
              [
                174.59,
                -36.082
              ],
              [
                174.589,
                -36.085
              ],
              [
                174.597,
                -36.109
              ],
              [
                174.59,
                -36.118
              ],
              [
                174.572,
                -36.095
              ],
              [
                174.563,
                -36.095
              ],
              [
                174.581,
                -36.124
              ],
              [
                174.568,
                -36.141
              ],
              [
                174.602,
                -36.114
              ],
              [
                174.598,
                -36.083
              ],
              [
                174.657,
                -36.178
              ],
              [
                174.71,
                -36.23
              ],
              [
                174.747,
                -36.258
              ],
              [
                174.822,
                -36.277
              ],
              [
                174.795,
                -36.303
              ],
              [
                174.8,
                -36.321
              ],
              [
                174.784,
                -36.32
              ],
              [
                174.785,
                -36.305
              ],
              [
                174.755,
                -36.314
              ],
              [
                174.737,
                -36.333
              ],
              [
                174.758,
                -36.32
              ],
              [
                174.762,
                -36.357
              ],
              [
                174.776,
                -36.361
              ],
              [
                174.78,
                -36.319
              ],
              [
                174.789,
                -36.351
              ],
              [
                174.839,
                -36.37
              ],
              [
                174.866,
                -36.364
              ],
              [
                174.848,
                -36.378
              ],
              [
                174.795,
                -36.378
              ],
              [
                174.791,
                -36.39
              ],
              [
                174.755,
                -36.382
              ],
              [
                174.743,
                -36.397
              ],
              [
                174.73,
                -36.386
              ],
              [
                174.74,
                -36.37
              ],
              [
                174.734,
                -36.373
              ],
              [
                174.732,
                -36.36
              ],
              [
                174.728,
                -36.36
              ],
              [
                174.732,
                -36.367
              ],
              [
                174.728,
                -36.379
              ],
              [
                174.729,
                -36.367
              ],
              [
                174.726,
                -36.381
              ],
              [
                174.717,
                -36.388
              ],
              [
                174.714,
                -36.374
              ],
              [
                174.711,
                -36.373
              ],
              [
                174.71,
                -36.37
              ],
              [
                174.709,
                -36.369
              ],
              [
                174.709,
                -36.37
              ],
              [
                174.709,
                -36.391
              ],
              [
                174.738,
                -36.399
              ],
              [
                174.732,
                -36.424
              ],
              [
                174.779,
                -36.437
              ],
              [
                174.736,
                -36.504
              ],
              [
                174.753,
                -36.464
              ],
              [
                174.741,
                -36.462
              ],
              [
                174.739,
                -36.459
              ],
              [
                174.74,
                -36.453
              ],
              [
                174.738,
                -36.452
              ],
              [
                174.738,
                -36.472
              ],
              [
                174.726,
                -36.488
              ],
              [
                174.731,
                -36.433
              ],
              [
                174.718,
                -36.433
              ],
              [
                174.724,
                -36.425
              ],
              [
                174.719,
                -36.416
              ],
              [
                174.709,
                -36.431
              ],
              [
                174.681,
                -36.418
              ],
              [
                174.693,
                -36.426
              ],
              [
                174.693,
                -36.432
              ],
              [
                174.686,
                -36.434
              ],
              [
                174.685,
                -36.436
              ],
              [
                174.708,
                -36.439
              ],
              [
                174.709,
                -36.447
              ],
              [
                174.7,
                -36.444
              ],
              [
                174.698,
                -36.446
              ],
              [
                174.695,
                -36.446
              ],
              [
                174.692,
                -36.446
              ],
              [
                174.692,
                -36.447
              ],
              [
                174.711,
                -36.452
              ],
              [
                174.695,
                -36.465
              ],
              [
                174.691,
                -36.48
              ],
              [
                174.708,
                -36.486
              ],
              [
                174.702,
                -36.495
              ],
              [
                174.73,
                -36.516
              ],
              [
                174.691,
                -36.574
              ],
              [
                174.701,
                -36.594
              ],
              [
                174.697,
                -36.6
              ],
              [
                174.758,
                -36.628
              ],
              [
                174.775,
                -36.607
              ],
              [
                174.823,
                -36.593
              ],
              [
                174.838,
                -36.593
              ],
              [
                174.834,
                -36.619
              ],
              [
                174.808,
                -36.608
              ],
              [
                174.801,
                -36.628
              ],
              [
                174.788,
                -36.618
              ],
              [
                174.741,
                -36.648
              ],
              [
                174.71,
                -36.615
              ],
              [
                174.696,
                -36.613
              ],
              [
                174.677,
                -36.62
              ],
              [
                174.697,
                -36.63
              ],
              [
                174.709,
                -36.622
              ],
              [
                174.722,
                -36.654
              ],
              [
                174.749,
                -36.664
              ],
              [
                174.762,
                -36.696
              ],
              [
                174.753,
                -36.732
              ],
              [
                174.775,
                -36.788
              ],
              [
                174.814,
                -36.829
              ],
              [
                174.773,
                -36.829
              ],
              [
                174.795,
                -36.818
              ],
              [
                174.766,
                -36.822
              ],
              [
                174.785,
                -36.807
              ],
              [
                174.767,
                -36.79
              ],
              [
                174.749,
                -36.827
              ],
              [
                174.697,
                -36.823
              ],
              [
                174.679,
                -36.79
              ],
              [
                174.707,
                -36.792
              ],
              [
                174.703,
                -36.771
              ],
              [
                174.676,
                -36.787
              ],
              [
                174.662,
                -36.772
              ],
              [
                174.684,
                -36.763
              ],
              [
                174.677,
                -36.751
              ],
              [
                174.682,
                -36.751
              ],
              [
                174.679,
                -36.744
              ],
              [
                174.687,
                -36.737
              ],
              [
                174.69,
                -36.728
              ],
              [
                174.692,
                -36.728
              ],
              [
                174.693,
                -36.728
              ],
              [
                174.693,
                -36.723
              ],
              [
                174.66,
                -36.771
              ],
              [
                174.634,
                -36.772
              ],
              [
                174.638,
                -36.752
              ],
              [
                174.632,
                -36.77
              ],
              [
                174.614,
                -36.773
              ],
              [
                174.602,
                -36.766
              ],
              [
                174.606,
                -36.762
              ],
              [
                174.6,
                -36.76
              ],
              [
                174.601,
                -36.756
              ],
              [
                174.596,
                -36.754
              ],
              [
                174.595,
                -36.768
              ],
              [
                174.606,
                -36.773
              ],
              [
                174.592,
                -36.788
              ],
              [
                174.591,
                -36.794
              ],
              [
                174.61,
                -36.774
              ],
              [
                174.661,
                -36.774
              ],
              [
                174.646,
                -36.783
              ],
              [
                174.638,
                -36.791
              ],
              [
                174.641,
                -36.792
              ],
              [
                174.64,
                -36.793
              ],
              [
                174.638,
                -36.796
              ],
              [
                174.666,
                -36.785
              ],
              [
                174.675,
                -36.796
              ],
              [
                174.647,
                -36.804
              ],
              [
                174.613,
                -36.856
              ],
              [
                174.64,
                -36.846
              ],
              [
                174.64,
                -36.855
              ],
              [
                174.638,
                -36.859
              ],
              [
                174.639,
                -36.862
              ],
              [
                174.636,
                -36.864
              ],
              [
                174.635,
                -36.871
              ],
              [
                174.645,
                -36.854
              ],
              [
                174.644,
                -36.843
              ],
              [
                174.633,
                -36.839
              ],
              [
                174.66,
                -36.831
              ],
              [
                174.653,
                -36.886
              ],
              [
                174.691,
                -36.912
              ],
              [
                174.662,
                -36.861
              ],
              [
                174.699,
                -36.871
              ],
              [
                174.703,
                -36.851
              ],
              [
                174.711,
                -36.861
              ],
              [
                174.742,
                -36.835
              ],
              [
                174.786,
                -36.84
              ],
              [
                174.801,
                -36.853
              ],
              [
                174.875,
                -36.847
              ],
              [
                174.892,
                -36.872
              ],
              [
                174.87,
                -36.878
              ],
              [
                174.869,
                -36.902
              ],
              [
                174.844,
                -36.906
              ],
              [
                174.863,
                -36.926
              ],
              [
                174.854,
                -36.929
              ],
              [
                174.844,
                -36.936
              ],
              [
                174.866,
                -36.933
              ],
              [
                174.843,
                -36.956
              ],
              [
                174.849,
                -36.957
              ],
              [
                174.86,
                -36.946
              ],
              [
                174.881,
                -36.955
              ],
              [
                174.886,
                -36.95
              ],
              [
                174.862,
                -36.945
              ],
              [
                174.869,
                -36.927
              ],
              [
                174.892,
                -36.929
              ],
              [
                174.896,
                -36.918
              ],
              [
                174.9,
                -36.921
              ],
              [
                174.901,
                -36.918
              ],
              [
                174.903,
                -36.919
              ],
              [
                174.905,
                -36.914
              ],
              [
                174.892,
                -36.909
              ],
              [
                174.887,
                -36.926
              ],
              [
                174.858,
                -36.916
              ],
              [
                174.896,
                -36.893
              ],
              [
                174.901,
                -36.846
              ],
              [
                174.954,
                -36.902
              ],
              [
                174.955,
                -36.91
              ],
              [
                174.941,
                -36.915
              ],
              [
                174.937,
                -36.92
              ],
              [
                174.934,
                -36.926
              ],
              [
                174.933,
                -36.929
              ],
              [
                174.959,
                -36.914
              ],
              [
                174.966,
                -36.948
              ],
              [
                174.975,
                -36.935
              ],
              [
                174.963,
                -36.914
              ],
              [
                174.991,
                -36.91
              ],
              [
                174.991,
                -36.926
              ],
              [
                174.998,
                -36.924
              ],
              [
                174.984,
                -36.881
              ],
              [
                175,
                -36.876
              ],
              [
                175.038,
                -36.874
              ],
              [
                175.073,
                -36.905
              ],
              [
                175.099,
                -36.9
              ],
              [
                175.077,
                -36.915
              ],
              [
                175.08,
                -36.958
              ],
              [
                175.141,
                -36.927
              ],
              [
                175.159,
                -36.951
              ],
              [
                175.192,
                -36.93
              ],
              [
                175.287,
                -36.995
              ],
              [
                175.303,
                -37.054
              ],
              [
                175.295,
                -37.123
              ],
              [
                175.329,
                -37.198
              ],
              [
                175.395,
                -37.229
              ],
              [
                175.501,
                -37.194
              ],
              [
                175.545,
                -37.159
              ],
              [
                175.515,
                -37.102
              ],
              [
                175.52,
                -37.034
              ],
              [
                175.499,
                -36.973
              ],
              [
                175.431,
                -36.902
              ],
              [
                175.406,
                -36.854
              ],
              [
                175.469,
                -36.853
              ],
              [
                175.474,
                -36.838
              ],
              [
                175.438,
                -36.845
              ],
              [
                175.428,
                -36.833
              ],
              [
                175.466,
                -36.828
              ],
              [
                175.423,
                -36.82
              ],
              [
                175.506,
                -36.794
              ],
              [
                175.486,
                -36.78
              ],
              [
                175.496,
                -36.765
              ],
              [
                175.483,
                -36.754
              ],
              [
                175.457,
                -36.769
              ],
              [
                175.481,
                -36.734
              ],
              [
                175.43,
                -36.717
              ],
              [
                175.447,
                -36.66
              ],
              [
                175.438,
                -36.626
              ],
              [
                175.472,
                -36.622
              ],
              [
                175.345,
                -36.554
              ],
              [
                175.326,
                -36.49
              ],
              [
                175.346,
                -36.47
              ],
              [
                175.41,
                -36.471
              ],
              [
                175.423,
                -36.512
              ],
              [
                175.443,
                -36.503
              ],
              [
                175.476,
                -36.535
              ],
              [
                175.47,
                -36.51
              ],
              [
                175.495,
                -36.511
              ],
              [
                175.535,
                -36.543
              ],
              [
                175.52,
                -36.555
              ],
              [
                175.525,
                -36.597
              ],
              [
                175.56,
                -36.598
              ],
              [
                175.584,
                -36.627
              ],
              [
                175.571,
                -36.645
              ],
              [
                175.584,
                -36.664
              ],
              [
                175.557,
                -36.665
              ],
              [
                175.556,
                -36.684
              ],
              [
                175.605,
                -36.682
              ],
              [
                175.607,
                -36.71
              ],
              [
                175.628,
                -36.718
              ],
              [
                175.607,
                -36.757
              ],
              [
                175.644,
                -36.767
              ],
              [
                175.64,
                -36.744
              ],
              [
                175.678,
                -36.743
              ],
              [
                175.635,
                -36.726
              ],
              [
                175.709,
                -36.727
              ],
              [
                175.783,
                -36.692
              ],
              [
                175.798,
                -36.718
              ],
              [
                175.821,
                -36.72
              ],
              [
                175.827,
                -36.74
              ],
              [
                175.755,
                -36.757
              ],
              [
                175.748,
                -36.791
              ],
              [
                175.702,
                -36.807
              ],
              [
                175.706,
                -36.839
              ],
              [
                175.692,
                -36.845
              ],
              [
                175.689,
                -36.84
              ],
              [
                175.684,
                -36.842
              ],
              [
                175.673,
                -36.854
              ],
              [
                175.687,
                -36.848
              ],
              [
                175.669,
                -36.881
              ],
              [
                175.686,
                -36.877
              ],
              [
                175.684,
                -36.897
              ],
              [
                175.701,
                -36.891
              ],
              [
                175.715,
                -36.906
              ],
              [
                175.7,
                -36.888
              ],
              [
                175.719,
                -36.873
              ],
              [
                175.697,
                -36.864
              ],
              [
                175.714,
                -36.827
              ],
              [
                175.759,
                -36.837
              ],
              [
                175.754,
                -36.853
              ],
              [
                175.763,
                -36.865
              ],
              [
                175.774,
                -36.846
              ],
              [
                175.759,
                -36.846
              ],
              [
                175.764,
                -36.821
              ],
              [
                175.82,
                -36.841
              ],
              [
                175.819,
                -36.883
              ],
              [
                175.856,
                -36.923
              ],
              [
                175.843,
                -36.964
              ],
              [
                175.872,
                -37
              ],
              [
                175.848,
                -37.003
              ],
              [
                175.836,
                -37.048
              ],
              [
                175.815,
                -37.056
              ],
              [
                175.813,
                -37.06
              ],
              [
                175.837,
                -37.052
              ],
              [
                175.862,
                -37.006
              ],
              [
                175.886,
                -37.029
              ],
              [
                175.889,
                -37.113
              ],
              [
                175.878,
                -37.105
              ],
              [
                175.86,
                -37.126
              ],
              [
                175.89,
                -37.113
              ],
              [
                175.879,
                -37.15
              ],
              [
                175.893,
                -37.196
              ],
              [
                175.881,
                -37.202
              ],
              [
                175.858,
                -37.165
              ],
              [
                175.857,
                -37.207
              ],
              [
                175.864,
                -37.211
              ],
              [
                175.867,
                -37.197
              ],
              [
                175.879,
                -37.199
              ],
              [
                175.88,
                -37.231
              ],
              [
                175.943,
                -37.345
              ],
              [
                175.938,
                -37.396
              ],
              [
                175.991,
                -37.465
              ],
              [
                175.979,
                -37.469
              ],
              [
                175.974,
                -37.451
              ],
              [
                175.96,
                -37.434
              ],
              [
                175.956,
                -37.434
              ],
              [
                175.949,
                -37.44
              ],
              [
                175.969,
                -37.45
              ],
              [
                175.938,
                -37.465
              ],
              [
                175.947,
                -37.483
              ],
              [
                175.93,
                -37.497
              ],
              [
                175.955,
                -37.497
              ],
              [
                175.948,
                -37.485
              ],
              [
                175.95,
                -37.485
              ],
              [
                175.978,
                -37.515
              ],
              [
                175.918,
                -37.534
              ],
              [
                175.953,
                -37.554
              ],
              [
                175.928,
                -37.559
              ],
              [
                175.923,
                -37.579
              ],
              [
                175.943,
                -37.569
              ],
              [
                175.945,
                -37.596
              ],
              [
                175.972,
                -37.574
              ],
              [
                175.978,
                -37.589
              ],
              [
                175.959,
                -37.599
              ],
              [
                175.96,
                -37.604
              ],
              [
                175.956,
                -37.607
              ],
              [
                175.957,
                -37.612
              ],
              [
                175.988,
                -37.615
              ],
              [
                175.959,
                -37.632
              ],
              [
                175.987,
                -37.627
              ],
              [
                175.987,
                -37.646
              ],
              [
                176.015,
                -37.624
              ],
              [
                176.009,
                -37.652
              ],
              [
                176.054,
                -37.626
              ],
              [
                176.023,
                -37.667
              ],
              [
                176.049,
                -37.655
              ],
              [
                176.033,
                -37.683
              ],
              [
                176.053,
                -37.68
              ],
              [
                176.049,
                -37.66
              ],
              [
                176.066,
                -37.671
              ],
              [
                176.064,
                -37.657
              ],
              [
                176.093,
                -37.663
              ],
              [
                176.095,
                -37.687
              ],
              [
                176.122,
                -37.683
              ],
              [
                176.124,
                -37.66
              ],
              [
                176.152,
                -37.665
              ],
              [
                176.159,
                -37.667
              ],
              [
                176.164,
                -37.671
              ],
              [
                176.175,
                -37.658
              ],
              [
                176.167,
                -37.722
              ],
              [
                176.19,
                -37.707
              ],
              [
                176.175,
                -37.724
              ],
              [
                176.235,
                -37.712
              ],
              [
                176.226,
                -37.704
              ],
              [
                176.237,
                -37.696
              ],
              [
                176.215,
                -37.686
              ],
              [
                176.19,
                -37.707
              ],
              [
                176.179,
                -37.689
              ],
              [
                176.199,
                -37.694
              ],
              [
                176.204,
                -37.678
              ],
              [
                176.18,
                -37.669
              ],
              [
                176.174,
                -37.625
              ],
              [
                176.25,
                -37.68
              ],
              [
                176.454,
                -37.755
              ],
              [
                176.418,
                -37.749
              ],
              [
                176.431,
                -37.763
              ],
              [
                176.454,
                -37.757
              ],
              [
                176.468,
                -37.741
              ],
              [
                176.48,
                -37.76
              ],
              [
                176.469,
                -37.774
              ],
              [
                176.496,
                -37.778
              ],
              [
                176.479,
                -37.755
              ],
              [
                176.662,
                -37.855
              ],
              [
                177.017,
                -37.938
              ],
              [
                177.039,
                -37.964
              ],
              [
                177.143,
                -37.985
              ],
              [
                177.074,
                -37.978
              ],
              [
                177.056,
                -37.996
              ],
              [
                177.062,
                -38.003
              ],
              [
                177.061,
                -38.013
              ],
              [
                177.063,
                -38.011
              ],
              [
                177.063,
                -38.014
              ],
              [
                177.064,
                -38.015
              ],
              [
                177.069,
                -37.997
              ],
              [
                177.089,
                -37.997
              ],
              [
                177.086,
                -38.017
              ],
              [
                177.109,
                -38.002
              ],
              [
                177.113,
                -38.011
              ],
              [
                177.105,
                -38.015
              ],
              [
                177.103,
                -38.025
              ],
              [
                177.119,
                -38.018
              ],
              [
                177.149,
                -38.044
              ],
              [
                177.16,
                -38.04
              ],
              [
                177.138,
                -38.021
              ],
              [
                177.146,
                -38.005
              ],
              [
                177.162,
                -38.007
              ],
              [
                177.161,
                -37.99
              ],
              [
                177.148,
                -37.996
              ],
              [
                177.157,
                -37.987
              ],
              [
                177.387,
                -37.985
              ],
              [
                177.488,
                -37.95
              ],
              [
                177.486,
                -37.935
              ],
              [
                177.53,
                -37.92
              ],
              [
                177.584,
                -37.867
              ],
              [
                177.588,
                -37.838
              ],
              [
                177.606,
                -37.838
              ],
              [
                177.613,
                -37.812
              ],
              [
                177.651,
                -37.805
              ],
              [
                177.653,
                -37.786
              ],
              [
                177.684,
                -37.76
              ],
              [
                177.671,
                -37.739
              ],
              [
                177.708,
                -37.723
              ],
              [
                177.728,
                -37.68
              ],
              [
                177.788,
                -37.681
              ],
              [
                177.816,
                -37.658
              ],
              [
                177.864,
                -37.657
              ],
              [
                177.904,
                -37.605
              ],
              [
                177.92,
                -37.62
              ],
              [
                177.954,
                -37.615
              ],
              [
                177.992,
                -37.574
              ],
              [
                177.983,
                -37.536
              ],
              [
                178.008,
                -37.553
              ],
              [
                178.037,
                -37.542
              ],
              [
                178.164,
                -37.553
              ],
              [
                178.175,
                -37.534
              ],
              [
                178.314,
                -37.556
              ],
              [
                178.294,
                -37.584
              ],
              [
                178.301,
                -37.596
              ],
              [
                178.325,
                -37.591
              ],
              [
                178.316,
                -37.602
              ],
              [
                178.341,
                -37.622
              ],
              [
                178.481,
                -37.64
              ],
              [
                178.55,
                -37.687
              ],
              [
                178.45,
                -37.813
              ],
              [
                178.452,
                -37.833
              ],
              [
                178.413,
                -37.859
              ],
              [
                178.387,
                -37.919
              ],
              [
                178.391,
                -37.961
              ],
              [
                178.337,
                -38.009
              ],
              [
                178.337,
                -38.037
              ],
              [
                178.372,
                -38.05
              ],
              [
                178.362,
                -38.069
              ],
              [
                178.374,
                -38.094
              ],
              [
                178.322,
                -38.122
              ],
              [
                178.318,
                -38.139
              ],
              [
                178.368,
                -38.176
              ],
              [
                178.31,
                -38.233
              ],
              [
                178.335,
                -38.283
              ],
              [
                178.359,
                -38.289
              ],
              [
                178.326,
                -38.305
              ],
              [
                178.33,
                -38.352
              ],
              [
                178.306,
                -38.363
              ],
              [
                178.318,
                -38.383
              ],
              [
                178.34,
                -38.379
              ],
              [
                178.347,
                -38.416
              ],
              [
                178.28,
                -38.475
              ],
              [
                178.292,
                -38.529
              ],
              [
                178.203,
                -38.587
              ],
              [
                178.147,
                -38.652
              ],
              [
                178.08,
                -38.678
              ],
              [
                178.07,
                -38.708
              ],
              [
                178.005,
                -38.671
              ],
              [
                177.968,
                -38.684
              ],
              [
                177.935,
                -38.72
              ],
              [
                177.935,
                -38.751
              ],
              [
                177.972,
                -38.758
              ],
              [
                177.929,
                -38.787
              ],
              [
                177.912,
                -38.828
              ],
              [
                177.92,
                -38.867
              ],
              [
                177.903,
                -38.888
              ],
              [
                177.91,
                -38.913
              ],
              [
                177.887,
                -39.032
              ],
              [
                177.914,
                -39.085
              ],
              [
                178.001,
                -39.102
              ],
              [
                178,
                -39.114
              ],
              [
                177.925,
                -39.169
              ],
              [
                177.906,
                -39.226
              ],
              [
                177.865,
                -39.265
              ],
              [
                177.843,
                -39.185
              ],
              [
                177.822,
                -39.16
              ],
              [
                177.872,
                -39.086
              ],
              [
                177.843,
                -39.059
              ],
              [
                177.823,
                -39.077
              ],
              [
                177.661,
                -39.051
              ],
              [
                177.419,
                -39.063
              ],
              [
                177.259,
                -39.101
              ],
              [
                177.046,
                -39.194
              ],
              [
                177.019,
                -39.261
              ],
              [
                176.9,
                -39.367
              ],
              [
                176.873,
                -39.456
              ],
              [
                176.893,
                -39.486
              ],
              [
                176.924,
                -39.473
              ],
              [
                176.923,
                -39.554
              ],
              [
                176.966,
                -39.623
              ],
              [
                177.032,
                -39.65
              ],
              [
                177.096,
                -39.643
              ],
              [
                177.015,
                -39.732
              ],
              [
                176.994,
                -39.798
              ],
              [
                177.005,
                -39.841
              ],
              [
                176.908,
                -39.982
              ],
              [
                176.879,
                -40.05
              ],
              [
                176.895,
                -40.077
              ],
              [
                176.87,
                -40.098
              ],
              [
                176.87,
                -40.13
              ],
              [
                176.787,
                -40.218
              ],
              [
                176.74,
                -40.227
              ],
              [
                176.678,
                -40.266
              ],
              [
                176.673,
                -40.322
              ],
              [
                176.623,
                -40.427
              ],
              [
                176.633,
                -40.453
              ],
              [
                176.622,
                -40.491
              ],
              [
                176.56,
                -40.496
              ],
              [
                176.493,
                -40.531
              ],
              [
                176.467,
                -40.575
              ],
              [
                176.333,
                -40.698
              ]
            ],
            [
              [
                174.886,
                -41.089
              ],
              [
                174.87,
                -41.104
              ],
              [
                174.913,
                -41.103
              ],
              [
                174.894,
                -41.087
              ],
              [
                174.886,
                -41.089
              ]
            ],
            [
              [
                176.88,
                -39.479
              ],
              [
                176.877,
                -39.488
              ],
              [
                176.887,
                -39.489
              ],
              [
                176.889,
                -39.482
              ],
              [
                176.88,
                -39.479
              ]
            ],
            [
              [
                176.148,
                -37.686
              ],
              [
                176.155,
                -37.695
              ],
              [
                176.165,
                -37.675
              ],
              [
                176.16,
                -37.671
              ],
              [
                176.158,
                -37.671
              ],
              [
                176.148,
                -37.686
              ]
            ],
            [
              [
                176.163,
                -37.71
              ],
              [
                176.152,
                -37.714
              ],
              [
                176.146,
                -37.726
              ],
              [
                176.161,
                -37.729
              ],
              [
                176.163,
                -37.71
              ]
            ],
            [
              [
                176.161,
                -37.671
              ],
              [
                176.162,
                -37.672
              ],
              [
                176.164,
                -37.671
              ],
              [
                176.162,
                -37.67
              ],
              [
                176.161,
                -37.671
              ]
            ],
            [
              [
                175.842,
                -36.998
              ],
              [
                175.841,
                -37.004
              ],
              [
                175.848,
                -37.004
              ],
              [
                175.847,
                -36.998
              ],
              [
                175.842,
                -36.998
              ]
            ],
            [
              [
                174.694,
                -36.888
              ],
              [
                174.705,
                -36.873
              ],
              [
                174.673,
                -36.87
              ],
              [
                174.672,
                -36.877
              ],
              [
                174.694,
                -36.888
              ]
            ],
            [
              [
                174.82,
                -36.979
              ],
              [
                174.812,
                -36.986
              ],
              [
                174.817,
                -36.993
              ],
              [
                174.799,
                -36.98
              ],
              [
                174.79,
                -36.989
              ],
              [
                174.809,
                -37.006
              ],
              [
                174.833,
                -36.997
              ],
              [
                174.82,
                -36.979
              ]
            ],
            [
              [
                174.809,
                -36.864
              ],
              [
                174.808,
                -36.855
              ],
              [
                174.801,
                -36.857
              ],
              [
                174.793,
                -36.849
              ],
              [
                174.79,
                -36.848
              ],
              [
                174.787,
                -36.848
              ],
              [
                174.789,
                -36.864
              ],
              [
                174.809,
                -36.864
              ]
            ],
            [
              [
                174.671,
                -36.592
              ],
              [
                174.658,
                -36.598
              ],
              [
                174.698,
                -36.599
              ],
              [
                174.692,
                -36.591
              ],
              [
                174.671,
                -36.592
              ]
            ],
            [
              [
                174.81,
                -36.87
              ],
              [
                174.817,
                -36.875
              ],
              [
                174.823,
                -36.872
              ],
              [
                174.812,
                -36.863
              ],
              [
                174.81,
                -36.87
              ]
            ],
            [
              [
                174.813,
                -36.861
              ],
              [
                174.821,
                -36.866
              ],
              [
                174.826,
                -36.865
              ],
              [
                174.827,
                -36.865
              ],
              [
                174.828,
                -36.865
              ],
              [
                174.832,
                -36.865
              ],
              [
                174.834,
                -36.865
              ],
              [
                174.813,
                -36.861
              ]
            ],
            [
              [
                174.746,
                -36.808
              ],
              [
                174.744,
                -36.81
              ],
              [
                174.751,
                -36.815
              ],
              [
                174.75,
                -36.811
              ],
              [
                174.746,
                -36.808
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                174.943,
                -40.822
              ],
              [
                174.954,
                -40.829
              ],
              [
                174.918,
                -40.868
              ],
              [
                174.869,
                -40.886
              ],
              [
                174.92,
                -40.822
              ],
              [
                174.943,
                -40.822
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                176.019,
                -37.494
              ],
              [
                176.066,
                -37.55
              ],
              [
                176.158,
                -37.639
              ],
              [
                176.084,
                -37.594
              ],
              [
                176.077,
                -37.602
              ],
              [
                176.096,
                -37.622
              ],
              [
                176.085,
                -37.625
              ],
              [
                176.034,
                -37.601
              ],
              [
                176.032,
                -37.57
              ],
              [
                176.073,
                -37.581
              ],
              [
                175.985,
                -37.499
              ],
              [
                175.983,
                -37.475
              ],
              [
                176.019,
                -37.494
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                174.918,
                -36.732
              ],
              [
                174.934,
                -36.742
              ],
              [
                174.928,
                -36.784
              ],
              [
                174.912,
                -36.796
              ],
              [
                174.897,
                -36.775
              ],
              [
                174.89,
                -36.801
              ],
              [
                174.839,
                -36.804
              ],
              [
                174.828,
                -36.79
              ],
              [
                174.838,
                -36.769
              ],
              [
                174.897,
                -36.775
              ],
              [
                174.918,
                -36.732
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                175.173,
                -36.739
              ],
              [
                175.203,
                -36.766
              ],
              [
                175.154,
                -36.785
              ],
              [
                175.165,
                -36.825
              ],
              [
                175.144,
                -36.848
              ],
              [
                175.13,
                -36.837
              ],
              [
                175.138,
                -36.83
              ],
              [
                175.14,
                -36.824
              ],
              [
                175.129,
                -36.823
              ],
              [
                175.127,
                -36.848
              ],
              [
                175.111,
                -36.845
              ],
              [
                175.109,
                -36.815
              ],
              [
                175.097,
                -36.841
              ],
              [
                175.063,
                -36.832
              ],
              [
                175.068,
                -36.818
              ],
              [
                175.033,
                -36.818
              ],
              [
                175.071,
                -36.802
              ],
              [
                175.041,
                -36.805
              ],
              [
                175.048,
                -36.791
              ],
              [
                175.022,
                -36.813
              ],
              [
                175.027,
                -36.798
              ],
              [
                175.009,
                -36.79
              ],
              [
                174.988,
                -36.812
              ],
              [
                174.982,
                -36.783
              ],
              [
                174.994,
                -36.769
              ],
              [
                175.015,
                -36.769
              ],
              [
                175.017,
                -36.785
              ],
              [
                175.06,
                -36.765
              ],
              [
                175.063,
                -36.783
              ],
              [
                175.087,
                -36.788
              ],
              [
                175.106,
                -36.783
              ],
              [
                175.106,
                -36.764
              ],
              [
                175.147,
                -36.765
              ],
              [
                175.173,
                -36.739
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                175.789,
                -36.58
              ],
              [
                175.79,
                -36.605
              ],
              [
                175.827,
                -36.617
              ],
              [
                175.834,
                -36.637
              ],
              [
                175.776,
                -36.638
              ],
              [
                175.787,
                -36.609
              ],
              [
                175.751,
                -36.587
              ],
              [
                175.789,
                -36.58
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                174.84,
                -36.392
              ],
              [
                174.877,
                -36.416
              ],
              [
                174.877,
                -36.45
              ],
              [
                174.836,
                -36.45
              ],
              [
                174.841,
                -36.44
              ],
              [
                174.816,
                -36.431
              ],
              [
                174.855,
                -36.426
              ],
              [
                174.819,
                -36.418
              ],
              [
                174.84,
                -36.392
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                175.397,
                -36.05
              ],
              [
                175.413,
                -36.062
              ],
              [
                175.407,
                -36.092
              ],
              [
                175.422,
                -36.086
              ],
              [
                175.425,
                -36.107
              ],
              [
                175.44,
                -36.112
              ],
              [
                175.424,
                -36.118
              ],
              [
                175.43,
                -36.143
              ],
              [
                175.413,
                -36.133
              ],
              [
                175.411,
                -36.147
              ],
              [
                175.425,
                -36.148
              ],
              [
                175.435,
                -36.141
              ],
              [
                175.505,
                -36.174
              ],
              [
                175.48,
                -36.201
              ],
              [
                175.478,
                -36.245
              ],
              [
                175.543,
                -36.295
              ],
              [
                175.551,
                -36.314
              ],
              [
                175.529,
                -36.348
              ],
              [
                175.474,
                -36.332
              ],
              [
                175.494,
                -36.323
              ],
              [
                175.487,
                -36.301
              ],
              [
                175.433,
                -36.309
              ],
              [
                175.438,
                -36.259
              ],
              [
                175.401,
                -36.268
              ],
              [
                175.397,
                -36.236
              ],
              [
                175.386,
                -36.256
              ],
              [
                175.35,
                -36.229
              ],
              [
                175.314,
                -36.226
              ],
              [
                175.308,
                -36.186
              ],
              [
                175.318,
                -36.199
              ],
              [
                175.325,
                -36.189
              ],
              [
                175.336,
                -36.214
              ],
              [
                175.349,
                -36.216
              ],
              [
                175.339,
                -36.204
              ],
              [
                175.36,
                -36.209
              ],
              [
                175.346,
                -36.186
              ],
              [
                175.37,
                -36.182
              ],
              [
                175.351,
                -36.176
              ],
              [
                175.362,
                -36.162
              ],
              [
                175.339,
                -36.159
              ],
              [
                175.354,
                -36.15
              ],
              [
                175.317,
                -36.148
              ],
              [
                175.311,
                -36.129
              ],
              [
                175.367,
                -36.128
              ],
              [
                175.377,
                -36.117
              ],
              [
                175.349,
                -36.109
              ],
              [
                175.339,
                -36.073
              ],
              [
                175.397,
                -36.05
              ]
            ]
          ]
        }
      },
      {
        type: "Feature",
        properties: {
          REGC2018_V: "01",
          REGC2018_1: "Northland Region"
        },
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                175.091,
                -36.166
              ],
              [
                175.114,
                -36.182
              ],
              [
                175.106,
                -36.228
              ],
              [
                175.05,
                -36.221
              ],
              [
                175.051,
                -36.184
              ],
              [
                175.091,
                -36.166
              ]
            ]
          ]
        }
      }
    ];
    coastline = {
      type: type2,
      name: name2,
      crs: crs2,
      features: features2
    };
    SSRPrism = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { language = "svelte" } = $$props;
      if ($$props.language === void 0 && $$bindings.language && language !== void 0)
        $$bindings.language(language);
      return `${``}`;
    });
    css$7 = {
      code: ".example.svelte-o4psin{padding-bottom:10px}.row.svelte-o4psin{display:flex\n    }div.output.svelte-o4psin{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-o4psin{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-o4psin{width:800px;margin:20px}",
      map: null
    };
    MinimumViable = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      $$result.css.add(css$7);
      return `<div class="${"example svelte-o4psin"}"><h3>Minimum viable</h3>
    <p>The map inherits the size of the container you put it in. 
    The bounding boxes for the layers are calculated and the projection is generated to fit automatically.</p>
    <div class="${"row svelte-o4psin"}"><div class="${"output svelte-o4psin"}"><div class="${"basemap svelte-o4psin"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
        default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, { geojson: coastline }, {}, {})}`
      })}</div></div>
      <div class="${"code svelte-o4psin"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
        default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';             
  //you can use any geojson. Here we are importing it from a file. 
  import coastline from './_geojson/coastline_simplified_3dp.geojson.json';
  ${closeScript}

<div class = "basemap" >
  <BaseMap>
    <FeatureLayer geojson={coastline} />
  </BaseMap>
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color:#f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
      })}</div></div>
  </div>`;
    });
    css$6 = {
      code: ".example.svelte-11r30az{padding-bottom:10px}.row.svelte-11r30az{display:flex\n    }div.output.svelte-11r30az{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-11r30az{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-11r30az{width:800px;margin:20px}",
      map: null
    };
    SelectAreas1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      let selection2;
      linear().domain([5, 15]);
      $$result.css.add(css$6);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<div class="${"example svelte-11r30az"}"><h3>Selectable areas</h3>

    <p>Selecting an area adds it&#39;s uid to the selection array, which you can bind to.</p>
    <p>You can set what is used as the uid via the idAccessor function. This function should take a
      geojson feature and return a uid. It defaults to feature=&gt;JSON.stringify(feature.properties).
    </p>
    <p>Set selectMode to the number of areas you wish to be able to select at one time. Oldest selections are discarded as new ones are added.   
    </p>
    <p>Use a styleAccessor function to highlight the selected areas. The function should have as 
      its first argument the geojson feature, and as the second a boolean which indicates whether 
      it is selected or not. It should return a style object.   
    </p>
    <div class="${"row svelte-11r30az"}"><div class="${"output svelte-11r30az"}"><p>Select up to 3 areas</p>

        <p>Current Selection: ${escape(JSON.stringify(selection2))}</p>

        <div class="${"basemap svelte-11r30az"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
          default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
            styleAccessor: (feature, selected) => ({
              "fill": "black",
              "stroke": "black",
              "vector-effect": "non-scaling-stroke",
              "fill-opacity": selected ? 0.5 : 0.1
            }),
            geojson: rto,
            selectMode: 3,
            idAccessor: (feature) => feature.properties.RTO2017__1,
            selection: selection2
          }, {
            selection: ($$value) => {
              selection2 = $$value;
              $$settled = false;
            }
          }, {})}`
        })}</div></div>
      <div class="${"code svelte-11r30az"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, {}, {}, {
          default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  let selection = [] 
${closeScript}  

<p>Select up to 3 areas</p>
<p>Current Selection: {JSON.stringify(selection)}</p>   
<div class="basemap">
  <BaseMap>
    <FeatureLayer
      styleAccessor={(feature, selected) => ({
        'fill': 'black',
        'stroke': 'black',
        'vector-effect': 'non-scaling-stroke',
        'fill-opacity': selected ? 0.5 : 0.1
      })}
      geojson={rto}
      selectMode={3}
      idAccessor={(feature) => feature.properties.RTO2017__1}
      bind:selection={selection}
    />
  </BaseMap>
</div>
                 
<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
        })}</div></div>
  </div>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$5 = {
      code: ".example.svelte-i0lhzt{padding-bottom:10px}.row.svelte-i0lhzt{display:flex\n    }div.output.svelte-i0lhzt{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px}div.basemap.svelte-i0lhzt{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-i0lhzt{width:800px;margin:20px}pre.svelte-i0lhzt{padding:10px;background-color:#f9f9ff;border:black solid thin;margin:20px}",
      map: null
    };
    ClickableAreas = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      let clicked;
      $$result.css.add(css$5);
      {
        console.log(clicked?.properties.RTO2017__1);
      }
      return `<div class="${"example svelte-i0lhzt"}"><h3>Clickable areas</h3>

    <p>Clicking on an area dispatches a click event. e.detail contains the geojson feature object.</p>
    <div class="${"row svelte-i0lhzt"}"><div class="${"output svelte-i0lhzt"}"><div class="${"basemap svelte-i0lhzt"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
        default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, { geojson: rto }, {}, {})}`
      })}</div>
        <div>${`<p>Click on the map!</p>`}</div></div>
      <div class="${"code svelte-i0lhzt"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
        default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  let clicked  
${closeScript}  

<div class="basemap">
  <BaseMap>
    <FeatureLayer
      geojson={rto}
      on:click={(e) => (clicked = e.detail.feature)}
    />
  </BaseMap>
</div>
<div>
  {#if clicked}
    <p>The last thing you clicked was:</p>
    <pre>{JSON.stringify(clicked.properties,undefined,2)}</pre>
  {:else}
    <p>Click on the map!</p>
  {/if}
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
      })}</div></div>
  </div>`;
    });
    css$4 = {
      code: ".example.svelte-o4psin{padding-bottom:10px}.row.svelte-o4psin{display:flex\n    }div.output.svelte-o4psin{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-o4psin{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-o4psin{width:800px;margin:20px}",
      map: null
    };
    ColorStyle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      let linearScale = linear().domain([5, 15]).range([0, 1]);
      let ordinalScale = ordinal().range([
        "lime",
        "tomato",
        "peachpuff",
        "olive",
        "papayawhip",
        "plum",
        "wheat",
        "orange",
        "salmon",
        "honeydew",
        "lightsalmon",
        "lemonchiffon",
        "blanchedalmond",
        "chocolate"
      ]);
      $$result.css.add(css$4);
      return `<div class="${"example svelte-o4psin"}"><h3>Color and Style </h3>

    <p>Apply styles to areas based on feature information by supplying a styleAccessor function. The function takes
      a feature and it&#39;s selection status, and returns a style object.
    </p>
    <p>Setting background on the BaseMap component to any valid html color sets the background-color style of the .svg. </p><p></p><p>Areas are styled using a d3-scale linear scale, to change the fill-opacity acccording to the
      length of their names (feature.properties.RTO2017__1). This is one method of creating a choropleth.
    </p>
    <div class="${"row svelte-o4psin"}"><div class="${"output svelte-o4psin"}"><div class="${"basemap svelte-o4psin"}">${validate_component(BaseMap, "BaseMap").$$render($$result, { background: "#fbf9e4" }, {}, {
        default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
          geojson: rto,
          styleAccessor: (feature) => ({
            fill: "tomato",
            "fill-opacity": linearScale(feature.properties.RTO2017__1.length),
            stroke: "tomato",
            "vector-effect": "non-scaling-stroke"
          })
        }, {}, {})}`
      })}</div></div>
      <div class="${"code svelte-o4psin"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
        default: () => `${escape(`${openScript}
    import { BaseMap, FeatureLayer } from 'svelte-geo';
    import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
    import { scaleLinear } from 'd3-scale';
    let linearScale = scaleLinear().domain([5, 15]);
  ${closeScript}  
  <div class="basemap">
    <BaseMap background = {'#fbf9e4'}>
      <FeatureLayer
        geojson={rto}
        styleAccessor={(feature) => ({
          'fill': 'tomato',
          'fill-opacity': linearScale(feature.properties.RTO2017__1.length),
          'stroke': 'tomato',
          'vector-effect': 'non-scaling-stroke'
        })}
      />
    </BaseMap>
  </div>  

  <style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
      })}</div></div>

    <p>Areas are styled using a d3-scale ordinal scale, acccording to the first letter of their name.
    </p>

    <div class="${"row svelte-o4psin"}"><div class="${"output svelte-o4psin"}"><div class="${"basemap svelte-o4psin"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
        default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
          geojson: rto,
          styleAccessor: (feature) => ({
            "fill": ordinalScale(feature.properties.RTO2017__1[0]),
            "stroke": "olive",
            "vector-effect": "non-scaling-stroke"
          })
        }, {}, {})}`
      })}</div></div>  
      <div class="${"code svelte-o4psin"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
        default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  import { scaleOrdinal } from 'd3-scale';
  let ordinalScale = scaleOrdinal()
    .range(['lime','tomato','peachpuff','olive','papayawhip','plum','wheat','orange','salmon','honeydew','lightsalmon','lemonchiffon','blanchedalmond','chocolate']);  
${closeScript}  

<div class="basemap">
  <BaseMap>
    <FeatureLayer
      geojson={rto}
      styleAccessor={(feature) => ({
        "fill": ordinalScale(feature.properties.RTO2017__1[0]),
        "stroke": 'olive',
        "vector-effect": 'non-scaling-stroke'
      })}
    />
  </BaseMap>
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
      })}</div></div>
  </div>`;
    });
    css$3 = {
      code: ".example.svelte-o4psin{padding-bottom:10px}.row.svelte-o4psin{display:flex\n    }div.output.svelte-o4psin{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-o4psin{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-o4psin{width:800px;margin:20px}",
      map: null
    };
    Projection = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      let projection2 = geoEqualEarth;
      $$result.css.add(css$3);
      return `<div class="${"example svelte-o4psin"}"><h3>Projection</h3>

    <p>The default projection is geoMercator, but you can use any <a href="${"https://github.com/d3/d3-geo"}">d3-geo</a> projection function that works for your geojson.</p>
    <p>You may switch between projections on the fly. </p>

    <div class="${"row svelte-o4psin"}"><div class="${"output svelte-o4psin"}"><input type="${"radio"}" id="${"geoEqualEarth"}" name="${"projection"}" checked>
        <label for="${"geoEqualEarth"}">geoEqualEarth</label> 
        <input type="${"radio"}" id="${"geoMercator"}" name="${"projection"}">
        <label for="${"geoMercator"}">geoMercator</label>
        <div class="${"basemap svelte-o4psin"}">${validate_component(BaseMap, "BaseMap").$$render($$result, { projection: projection2 }, {}, {
        default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, { geojson: coastline }, {}, {})}`
      })}</div></div>
      <div class="${"code svelte-o4psin"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
        default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';       
  import { geoMercator, geoEqualEarth } from 'd3-geo';
  import coastline from './_geojson/coastline_simplified_3dp.geojson.json';
  let projection = geoEqualEarth
${closeScript}

<input type="radio" id="geoEqualEarth" name="projection" 
  on:click={()=>projection = geoEqualEarth} checked>
<label for="geoEqualEarth">geoEqualEarth</label> 
<input type="radio" id="geoMercator" name="projection" 
  on:click={()=>projection = geoMercator} >
<label for="geoMercator">geoMercator</label>

<div class = basemap>
  <BaseMap projection = { geoEqualEarth } >
    <FeatureLayer geojson={coastline} />
  </BaseMap>
<div>

  <style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
      })}</div></div> 
  </div>`;
    });
    css$2 = {
      code: ".example.svelte-hs5awr{padding-bottom:10px}.row.svelte-hs5awr{display:flex\n  }div.output.svelte-hs5awr{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-hs5awr{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-hs5awr{width:800px;margin:20px}",
      map: null
    };
    SelectAreas2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const openScript = "<script>";
      const closeScript = "<\/script>";
      let selection2;
      let selectModeValue = 2;
      let selectModeValueIsInfinite = false;
      $$result.css.add(css$2);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<div class="${"example svelte-hs5awr"}"><p>You can change the number of areas you are choosing to select programmatically. Changing to a
      smaller number discards the oldest selections first.
    </p>

    <div class="${"row svelte-hs5awr"}"><div class="${"output svelte-hs5awr"}"><label>Selecting up to
          <input type="${"number"}" ${""} min="${"0"}" max="${"30"}"${add_attribute("value", selectModeValue, 0)}>
          areas.
        </label>
        <label><input type="${"checkbox"}"${add_attribute("checked", selectModeValueIsInfinite, 1)}>
          Infinite
        </label> <br>

        <p>Current Selection: ${escape(JSON.stringify(selection2))}</p>

        <div class="${"basemap svelte-hs5awr"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
          default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
            geojson: rto,
            styleAccessor: (feature, selected) => ({
              fill: "red",
              stroke: "black",
              "vector-effect": "non-scaling-stroke",
              "fill-opacity": selected ? 0.9 : 0.1
            }),
            selectMode: selectModeValue,
            idAccessor: (feature) => feature.properties.OBJECTID,
            selection: selection2
          }, {
            selection: ($$value) => {
              selection2 = $$value;
              $$settled = false;
            }
          }, {})}`
        })}</div></div>
      <div class="${"code svelte-hs5awr"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, {}, {}, {
          default: () => `${escape(`${openScript}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  
  let selectModeValue = 2
  let selectModeValueIsInfinite = false
  let selection = [] 
${closeScript}  

<label>
	Selecting up to
	<input type="number" 
    disabled={selectModeValueIsInfinite} 
    bind:value={selectModeValue} 
    min="0"/>
	areas.
</label>
<label>
	<input type="checkbox" bind:checked={nIsInfinite} />
	Infinite
</label> <br />
<p>Current Selection: {JSON.stringify(selection)}</p>   
<div class="basemap">
  <BaseMap>
    <FeatureLayer
      styleAccessor={(feature, selected) => ({
        'fill': 'red',
        'stroke': 'black',
        'vector-effect': 'non-scaling-stroke',
        'fill-opacity': selected ? 0.5 : 0.1
      })}
      geojson={rto}
			selectMode={selectModeValueIsInfinite ? Infinity : selectModeValue}
			idAccessor={(feature) => feature.properties.OBJECTID}
      bind:selection={selection}
    />
  </BaseMap>
</div>
                     
<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
        })}</div></div>
  </div>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$1 = {
      code: ".example.svelte-o4psin{padding-bottom:10px}.row.svelte-o4psin{display:flex\n    }div.output.svelte-o4psin{border:black solid thin;background-color:#efeeee;margin:28px 20px;padding:10px 10px 10px 10px}div.basemap.svelte-o4psin{border:black solid thin;width:400px;height:400px;margin:20px;background-color:#f9f9ff}div.code.svelte-o4psin{width:800px;margin:20px}",
      map: null
    };
    LayerBehavior = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let showNorth = true;
      let showSouth = false;
      let linearscale = linear().domain([5, 15]);
      const openScript = "<script>";
      const closeScript = "<\/script>";
      $$result.css.add(css$1);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<div class="${"example svelte-o4psin"}"><h3>Multiple Layers</h3>
    <p>You may add multiple layers. The projection bounding box is set to the aggregate of the layer bounding boxes. </p>
    
    <p>In this example, we have separate layers for the North and South Islands. They are being created and destroyed when toggled with the checkboxes below the map.</p>
    <p>The current selection will be lost when the layer is destroyed, but you can make it persist by binding it to a variable. 
      Here, the selection for the South Island layer is bound, the North Island one is not.</p>
      <p>Try selecting a few areas on each island, then turning the layers on and off.</p>

    <div class="${"row svelte-o4psin"}"><div class="${"output svelte-o4psin"}"><div class="${"basemap svelte-o4psin"}">${validate_component(BaseMap, "BaseMap").$$render($$result, {}, {}, {
          default: () => `${`${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
            geojson: northisland,
            styleAccessor: (feature, selected) => ({
              "fill": selected ? "blue" : "grey",
              "fill-opacity": linearscale(feature.properties.RTO2017__1.length),
              "stroke": selected ? "blue" : "grey",
              "stroke-width": selected ? 2 : 1,
              "vector-effect": "non-scaling-stroke"
            }),
            selectMode: Infinity,
            idAccessor: (feature) => feature.properties.RTO2017__1
          }, {}, {})}`}
            ${``}`
        })}</div>

        <label>Show the North Island
          <input type="${"checkbox"}"${add_attribute("checked", showNorth, 1)}>
        </label><br>
        <label>Show the South Island
          <input type="${"checkbox"}"${add_attribute("checked", showSouth, 1)}></label></div>
      <div class="${"code svelte-o4psin"}">${validate_component(SSRPrism, "SSRPrism").$$render($$result, { language: "svelte" }, {}, {
          default: () => `${escape(`${openScript}
  import BaseMap from '$lib/BaseMap.svelte';
  import FeatureLayer from '$lib/FeatureLayer.svelte';
  import northisland from '../../_geojson/rto2017_ni_simplified_3dp.geojson.json';
  import southisland from '../../_geojson/rto2017_si_simplified_3dp.geojson.json';
  import { scaleLinear } from 'd3-scale';

  let linearscale = scaleLinear().domain([5, 15]);

  let showNorth = true
  let showSouth = false
  let southSelection = []
${closeScript}

<div class="basemap">
  <BaseMap>
    {#if showNorth} 
      <FeatureLayer
        geojson={northisland}
        styleAccessor={(feature, selected) => ({
          'fill': selected ? 'blue' : 'grey',
          'fill-opacity': linearscale(feature.properties.RTO2017__1.length),
          'stroke': selected ? 'blue' : 'grey',
          'stroke-width': selected ? 2 : 1,
          'vector-effect': 'non-scaling-stroke'
        })}
        selectMode={Infinity}
        idAccessor={(feature) => feature.properties.RTO2017__1}
      />
    {/if}
    {#if showSouth}   
      <FeatureLayer
        geojson={southisland}
        styleAccessor={(feature, selected) => ({
          'fill': selected ? 'green' : 'grey',
          'fill-opacity': linearscale(feature.properties.RTO2017__1.length),
          'stroke': selected ? 'green' : 'grey',
          'stroke-width': selected ? 2 : 1,
          'vector-effect': 'non-scaling-stroke'
        })}
        selectMode={Infinity}
        idAccessor={(feature) => feature.properties.RTO2017__1}
        bind:selection = {southSelection}
      />
    {/if}
  </BaseMap>
</div>

<label>
  Show the North Island
  <input type="checkbox" bind:checked={showNorth} />
</label><br>
<label>
  Show the South Island
  <input type="checkbox" bind:checked={showSouth} />
</label>

<style> 
  .basemap {
    border: black solid thin;
    background-color:#f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`)}`
        })}</div></div>
  </div>`;
      } while (!$$settled);
      return $$rendered;
    });
    css2 = {
      code: ".container.svelte-1i7uuzv{padding:10px 100px 10px 100px\n    }",
      map: null
    };
    Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css2);
      return `<div class="${"container svelte-1i7uuzv"}"><a href="${"https://github.com/Sarah-W/svelte-geo"}"><h1>svelte-geo</h1></a>
  <h2>A basic map library for svelte projects, built using <a href="${"https://d3js.org/"}">D3.js</a></h2>
  
  ${validate_component(MinimumViable, "MinimumViable").$$render($$result, {}, {}, {})}
  ${validate_component(Projection, "Projection").$$render($$result, {}, {}, {})}
  ${validate_component(ColorStyle, "ColorStyle").$$render($$result, {}, {}, {})}
  ${validate_component(ClickableAreas, "ClickableAreas").$$render($$result, {}, {}, {})}
  ${validate_component(SelectAreas1, "SelectAreas1").$$render($$result, {}, {}, {})}
  ${validate_component(SelectAreas2, "SelectAreas2").$$render($$result, {}, {}, {})}
  ${validate_component(LayerBehavior, "LayerBehavior").$$render($$result, {}, {}, {})}

</div>`;
    });
  }
});

// .svelte-kit/output/server/chunks/sandbox-8b9c17f9.js
var sandbox_8b9c17f9_exports = {};
__export(sandbox_8b9c17f9_exports, {
  default: () => Sandbox
});
var css3, Sandbox;
var init_sandbox_8b9c17f9 = __esm({
  ".svelte-kit/output/server/chunks/sandbox-8b9c17f9.js"() {
    init_shims();
    init_app_ca4b120c();
    init_rto2017_ni_simplified_3dp_geojson_b549cdc6();
    css3 = {
      code: "div.wrapper.svelte-qbjo6f{display:flex;flex-direction:row \n  }div.basemap.svelte-qbjo6f{border:black solid thin;width:500px;height:500px;margin:50px}div.commentary.svelte-qbjo6f{margin:50px}",
      map: null
    };
    Sandbox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let selection2 = [];
      let n = 2;
      let nIsInfinite = false;
      let clicked;
      ordinal().range([
        "lime",
        "tomato",
        "peachpuff",
        "olive",
        "papayawhip",
        "plum",
        "wheat",
        "orange",
        "salmon",
        "honeydew",
        "lightsalmon",
        "lemonchiffon",
        "blanchedalmond",
        "chocolate"
      ]);
      let linearscale = linear().domain([5, 15]);
      let projection2 = geoMercator;
      let showNorth = true;
      let showSouth = false;
      let color2 = "#030417";
      let reset = false;
      $$result.css.add(css3);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<h1>svelte-geo sandbox</h1>
<h2>everything works with everything else</h2>
<p>When I was in geology 102 at the University of Auckland, the lecturer apologised for having to teach us about the geology of New Zealand, as it was just too complicated for a first-year course. So many geological processes, piled on top of each other.</p>
<p>This example is a bit like that.</p> 
<b>This is a sandbox primarily for testing things out. It may change randomly and without warning! </b>


<div class="${"wrapper svelte-qbjo6f"}"><div class="${"basemap svelte-qbjo6f"}">${validate_component(BaseMap, "BaseMap").$$render($$result, { projection: projection2 }, {}, {
          default: () => `${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
            geojson: rto,
            styleAccessor: (feature, selected) => ({
              fill: selected ? "tomato" : "olive",
              "fill-opacity": linearscale(feature.properties.RTO2017__1.length),
              stroke: selected ? "tomato" : "olive",
              "stroke-width": selected ? 2 : 1,
              "vector-effect": "non-scaling-stroke"
            }),
            selectMode: n,
            idAccessor: (feature) => feature.properties.RTO2017__1,
            selection: selection2
          }, {
            selection: ($$value) => {
              selection2 = $$value;
              $$settled = false;
            }
          }, {})}`
        })}</div>
  <div class="${"commentary svelte-qbjo6f"}"><label>Select up to
      <input type="${"number"}" ${""} min="${"0"}" max="${"30"}"${add_attribute("value", n, 0)}>
      areas.
    </label>
    <label>Or select Infinite areas 
      <input type="${"checkbox"}"${add_attribute("checked", nIsInfinite, 1)}></label> <br>

    <p>The last thing you clicked was: </p> <pre>${escape(JSON.stringify(clicked?.properties, void 0, 2))}</pre>
    <p>Your current selection is: </p> <pre>${escape(JSON.stringify(selection2))}</pre>
    <p>Set a selection <button>[&quot;Northland&quot;,&quot;Southland&quot;]</button></p>
  
    <p>Set a different projection: </p> 
    <input type="${"radio"}" id="${"geoMercator"}" name="${"projection"}" checked>
    <label for="${"geoMercator"}">geoMercator</label><br>
    <input type="${"radio"}" id="${"geoEqualEarth"}" name="${"projection"}">
    <label for="${"geoEqualEarth"}">geoEqualEarth</label><br></div></div>
<div class="${"wrapper svelte-qbjo6f"}"><div class="${"basemap svelte-qbjo6f"}">${validate_component(BaseMap, "BaseMap").$$render($$result, { background: color2, zoomReset: reset }, {
          zoomReset: ($$value) => {
            reset = $$value;
            $$settled = false;
          }
        }, {
          default: () => `${`${validate_component(FeatureLayer, "FeatureLayer").$$render($$result, {
            geojson: northisland,
            styleAccessor: (feature, selected) => ({
              fill: selected ? "blue" : "white",
              "fill-opacity": linearscale(feature.properties.RTO2017__1.length),
              stroke: selected ? "blue" : "white",
              "stroke-width": selected ? 2 : 1,
              "vector-effect": "non-scaling-stroke"
            }),
            selectMode: Infinity,
            idAccessor: (feature) => feature.properties.RTO2017__1
          }, {}, {})}`}
      ${``}`
        })}</div>
  <div class="${"commentary svelte-qbjo6f"}"><label>Show the North Island
      <input type="${"checkbox"}"${add_attribute("checked", showNorth, 1)}>
    </label><br>
    <label>Show the South Island
      <input type="${"checkbox"}"${add_attribute("checked", showSouth, 1)}></label>

    <p>To persist the selection, bind it to a variable, or it will be lost when the layer is destroyed.</p>
    <p>The South Island layer is bound, the North Island one is not. </p>

    <p>Set a background color:
    <input type="${"color"}"${add_attribute("value", color2, 0)}></p>
    <button>reset zoom</button></div>
</div>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});

// .svelte-kit/output/server/chunks/app-ca4b120c.js
function get_single_valued_header(headers, key) {
  const value = headers[key];
  if (Array.isArray(value)) {
    if (value.length === 0) {
      return void 0;
    }
    if (value.length > 1) {
      throw new Error(`Multiple headers provided for ${key}. Multiple may be provided only for set-cookie`);
    }
    return value[0];
  }
  return value;
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function lowercase_keys(obj) {
  const clone2 = {};
  for (const key in obj) {
    clone2[key.toLowerCase()] = obj[key];
  }
  return clone2;
}
function error(body) {
  return {
    status: 500,
    body,
    headers: {}
  };
}
function is_string(s2) {
  return typeof s2 === "string" || s2 instanceof String;
}
function is_content_type_textual(content_type) {
  if (!content_type)
    return true;
  const [type3] = content_type.split(";");
  return type3 === "text/plain" || type3 === "application/json" || type3 === "application/x-www-form-urlencoded" || type3 === "multipart/form-data";
}
async function render_endpoint(request, route, match) {
  const mod = await route.load();
  const handler = mod[request.method.toLowerCase().replace("delete", "del")];
  if (!handler) {
    return;
  }
  const params = route.params(match);
  const response = await handler({ ...request, params });
  const preface = `Invalid response from route ${request.path}`;
  if (!response) {
    return;
  }
  if (typeof response !== "object") {
    return error(`${preface}: expected an object, got ${typeof response}`);
  }
  let { status = 200, body, headers = {} } = response;
  headers = lowercase_keys(headers);
  const type3 = get_single_valued_header(headers, "content-type");
  const is_type_textual = is_content_type_textual(type3);
  if (!is_type_textual && !(body instanceof Uint8Array || is_string(body))) {
    return error(`${preface}: body must be an instance of string or Uint8Array if content-type is not a supported textual content-type`);
  }
  let normalized_body;
  if ((typeof body === "object" || typeof body === "undefined") && !(body instanceof Uint8Array) && (!type3 || type3.startsWith("application/json"))) {
    headers = { ...headers, "content-type": "application/json; charset=utf-8" };
    normalized_body = JSON.stringify(typeof body === "undefined" ? {} : body);
  } else {
    normalized_body = body;
  }
  return { status, body: normalized_body, headers };
}
function devalue(value) {
  var counts = new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new Error("Cannot stringify a function");
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      var type3 = getType(thing);
      switch (type3) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          var proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            throw new Error("Cannot stringify arbitrary non-POJOs");
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new Error("Cannot stringify POJOs with symbolic keys");
          }
          Object.keys(thing).forEach(function(key) {
            return walk(thing[key]);
          });
      }
    }
  }
  walk(value);
  var names = new Map();
  Array.from(counts).filter(function(entry) {
    return entry[1] > 1;
  }).sort(function(a, b) {
    return b[1] - a[1];
  }).forEach(function(entry, i) {
    names.set(entry[0], getName(i));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    var type3 = getType(thing);
    switch (type3) {
      case "Number":
      case "String":
      case "Boolean":
        return "Object(" + stringify(thing.valueOf()) + ")";
      case "RegExp":
        return "new RegExp(" + stringifyString(thing.source) + ', "' + thing.flags + '")';
      case "Date":
        return "new Date(" + thing.getTime() + ")";
      case "Array":
        var members = thing.map(function(v, i) {
          return i in thing ? stringify(v) : "";
        });
        var tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return "[" + members.join(",") + tail + "]";
      case "Set":
      case "Map":
        return "new " + type3 + "([" + Array.from(thing).map(stringify).join(",") + "])";
      default:
        var obj = "{" + Object.keys(thing).map(function(key) {
          return safeKey(key) + ":" + stringify(thing[key]);
        }).join(",") + "}";
        var proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? "Object.assign(Object.create(null)," + obj + ")" : "Object.create(null)";
        }
        return obj;
    }
  }
  var str = stringify(value);
  if (names.size) {
    var params_1 = [];
    var statements_1 = [];
    var values_1 = [];
    names.forEach(function(name3, thing) {
      params_1.push(name3);
      if (isPrimitive(thing)) {
        values_1.push(stringifyPrimitive(thing));
        return;
      }
      var type3 = getType(thing);
      switch (type3) {
        case "Number":
        case "String":
        case "Boolean":
          values_1.push("Object(" + stringify(thing.valueOf()) + ")");
          break;
        case "RegExp":
          values_1.push(thing.toString());
          break;
        case "Date":
          values_1.push("new Date(" + thing.getTime() + ")");
          break;
        case "Array":
          values_1.push("Array(" + thing.length + ")");
          thing.forEach(function(v, i) {
            statements_1.push(name3 + "[" + i + "]=" + stringify(v));
          });
          break;
        case "Set":
          values_1.push("new Set");
          statements_1.push(name3 + "." + Array.from(thing).map(function(v) {
            return "add(" + stringify(v) + ")";
          }).join("."));
          break;
        case "Map":
          values_1.push("new Map");
          statements_1.push(name3 + "." + Array.from(thing).map(function(_a) {
            var k = _a[0], v = _a[1];
            return "set(" + stringify(k) + ", " + stringify(v) + ")";
          }).join("."));
          break;
        default:
          values_1.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach(function(key) {
            statements_1.push("" + name3 + safeProp(key) + "=" + stringify(thing[key]));
          });
      }
    });
    statements_1.push("return " + str);
    return "(function(" + params_1.join(",") + "){" + statements_1.join(";") + "}(" + values_1.join(",") + "))";
  } else {
    return str;
  }
}
function getName(num) {
  var name3 = "";
  do {
    name3 = chars[num % chars.length] + name3;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name3) ? name3 + "_" : name3;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string")
    return stringifyString(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  var str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped$1[c] || c;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
  var result = '"';
  for (var i = 0; i < str.length; i += 1) {
    var char = str.charAt(i);
    var code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped$1) {
      result += escaped$1[char];
    } else if (code >= 55296 && code <= 57343) {
      var next = str.charCodeAt(i + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i];
      } else {
        result += "\\u" + code.toString(16).toUpperCase();
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}
function noop$12() {
}
function safe_not_equal$1(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function writable2(value, start2 = noop$12) {
  let stop;
  const subscribers = new Set();
  function set2(new_value) {
    if (safe_not_equal$1(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue2.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue2.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue2.length; i += 2) {
            subscriber_queue2[i][0](subscriber_queue2[i + 1]);
          }
          subscriber_queue2.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set2(fn(value));
  }
  function subscribe2(run2, invalidate = noop$12) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start2(set2) || noop$12;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set: set2, update, subscribe: subscribe2 };
}
function hash(value) {
  let hash2 = 5381;
  let i = value.length;
  if (typeof value === "string") {
    while (i)
      hash2 = hash2 * 33 ^ value.charCodeAt(--i);
  } else {
    while (i)
      hash2 = hash2 * 33 ^ value[--i];
  }
  return (hash2 >>> 0).toString(36);
}
function escape_json_string_in_html(str) {
  return escape$1(str, escape_json_string_in_html_dict, (code) => `\\u${code.toString(16).toUpperCase()}`);
}
function escape_html_attr(str) {
  return '"' + escape$1(str, escape_html_attr_dict, (code) => `&#${code};`) + '"';
}
function escape$1(str, dict, unicode_encoder) {
  let result = "";
  for (let i = 0; i < str.length; i += 1) {
    const char = str.charAt(i);
    const code = char.charCodeAt(0);
    if (char in dict) {
      result += dict[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i];
      } else {
        result += unicode_encoder(code);
      }
    } else {
      result += char;
    }
  }
  return result;
}
async function render_response({
  branch,
  options: options2,
  $session,
  page_config,
  status,
  error: error2,
  page
}) {
  const css22 = new Set(options2.entry.css);
  const js = new Set(options2.entry.js);
  const styles = new Set();
  const serialized_data = [];
  let rendered;
  let is_private = false;
  let maxage;
  if (error2) {
    error2.stack = options2.get_stack(error2);
  }
  if (page_config.ssr) {
    branch.forEach(({ node, loaded, fetched, uses_credentials }) => {
      if (node.css)
        node.css.forEach((url) => css22.add(url));
      if (node.js)
        node.js.forEach((url) => js.add(url));
      if (node.styles)
        node.styles.forEach((content) => styles.add(content));
      if (fetched && page_config.hydrate)
        serialized_data.push(...fetched);
      if (uses_credentials)
        is_private = true;
      maxage = loaded.maxage;
    });
    const session = writable2($session);
    const props = {
      stores: {
        page: writable2(null),
        navigating: writable2(null),
        session
      },
      page,
      components: branch.map(({ node }) => node.module.default)
    };
    for (let i = 0; i < branch.length; i += 1) {
      props[`props_${i}`] = await branch[i].loaded.props;
    }
    let session_tracking_active = false;
    const unsubscribe = session.subscribe(() => {
      if (session_tracking_active)
        is_private = true;
    });
    session_tracking_active = true;
    try {
      rendered = options2.root.render(props);
    } finally {
      unsubscribe();
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  const include_js = page_config.router || page_config.hydrate;
  if (!include_js)
    js.clear();
  const links = options2.amp ? styles.size > 0 || rendered.css.code.length > 0 ? `<style amp-custom>${Array.from(styles).concat(rendered.css.code).join("\n")}</style>` : "" : [
    ...Array.from(js).map((dep) => `<link rel="modulepreload" href="${dep}">`),
    ...Array.from(css22).map((dep) => `<link rel="stylesheet" href="${dep}">`)
  ].join("\n		");
  let init22 = "";
  if (options2.amp) {
    init22 = `
		<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
		<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
		<script async src="https://cdn.ampproject.org/v0.js"><\/script>`;
  } else if (include_js) {
    init22 = `<script type="module">
			import { start } from ${s$1(options2.entry.file)};
			start({
				target: ${options2.target ? `document.querySelector(${s$1(options2.target)})` : "document.body"},
				paths: ${s$1(options2.paths)},
				session: ${try_serialize($session, (error3) => {
      throw new Error(`Failed to serialize session data: ${error3.message}`);
    })},
				host: ${page && page.host ? s$1(page.host) : "location.host"},
				route: ${!!page_config.router},
				spa: ${!page_config.ssr},
				trailing_slash: ${s$1(options2.trailing_slash)},
				hydrate: ${page_config.ssr && page_config.hydrate ? `{
					status: ${status},
					error: ${serialize_error(error2)},
					nodes: [
						${(branch || []).map(({ node }) => `import(${s$1(node.entry)})`).join(",\n						")}
					],
					page: {
						host: ${page && page.host ? s$1(page.host) : "location.host"}, // TODO this is redundant
						path: ${page && page.path ? try_serialize(page.path, (error3) => {
      throw new Error(`Failed to serialize page.path: ${error3.message}`);
    }) : null},
						query: new URLSearchParams(${page && page.query ? s$1(page.query.toString()) : ""}),
						params: ${page && page.params ? try_serialize(page.params, (error3) => {
      throw new Error(`Failed to serialize page.params: ${error3.message}`);
    }) : null}
					}
				}` : "null"}
			});
		<\/script>`;
  }
  if (options2.service_worker) {
    init22 += `<script>
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('${options2.service_worker}');
			}
		<\/script>`;
  }
  const head = [
    rendered.head,
    styles.size && !options2.amp ? `<style data-svelte>${Array.from(styles).join("\n")}</style>` : "",
    links,
    init22
  ].join("\n\n		");
  const body = options2.amp ? rendered.html : `${rendered.html}

			${serialized_data.map(({ url, body: body2, json }) => {
    let attributes = `type="application/json" data-type="svelte-data" data-url=${escape_html_attr(url)}`;
    if (body2)
      attributes += ` data-body="${hash(body2)}"`;
    return `<script ${attributes}>${json}<\/script>`;
  }).join("\n\n	")}
		`;
  const headers = {
    "content-type": "text/html"
  };
  if (maxage) {
    headers["cache-control"] = `${is_private ? "private" : "public"}, max-age=${maxage}`;
  }
  if (!options2.floc) {
    headers["permissions-policy"] = "interest-cohort=()";
  }
  return {
    status,
    headers,
    body: options2.template({ head, body })
  };
}
function try_serialize(data, fail) {
  try {
    return devalue(data);
  } catch (err) {
    if (fail)
      fail(coalesce_to_error(err));
    return null;
  }
}
function serialize_error(error2) {
  if (!error2)
    return null;
  let serialized = try_serialize(error2);
  if (!serialized) {
    const { name: name3, message, stack } = error2;
    serialized = try_serialize({ ...error2, name: name3, message, stack });
  }
  if (!serialized) {
    serialized = "{}";
  }
  return serialized;
}
function normalize2(loaded) {
  const has_error_status = loaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;
  if (loaded.error || has_error_status) {
    const status = loaded.status;
    if (!loaded.error && has_error_status) {
      return {
        status: status || 500,
        error: new Error()
      };
    }
    const error2 = typeof loaded.error === "string" ? new Error(loaded.error) : loaded.error;
    if (!(error2 instanceof Error)) {
      return {
        status: 500,
        error: new Error(`"error" property returned from load() must be a string or instance of Error, received type "${typeof error2}"`)
      };
    }
    if (!status || status < 400 || status > 599) {
      console.warn('"error" returned from load() without a valid status code \u2014 defaulting to 500');
      return { status: 500, error: error2 };
    }
    return { status, error: error2 };
  }
  if (loaded.redirect) {
    if (!loaded.status || Math.floor(loaded.status / 100) !== 3) {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be accompanied by a 3xx status code')
      };
    }
    if (typeof loaded.redirect !== "string") {
      return {
        status: 500,
        error: new Error('"redirect" property returned from load() must be a string')
      };
    }
  }
  if (loaded.context) {
    throw new Error('You are returning "context" from a load function. "context" was renamed to "stuff", please adjust your code accordingly.');
  }
  return loaded;
}
async function load_node({
  request,
  options: options2,
  state,
  route,
  page,
  node,
  $session,
  stuff,
  prerender_enabled,
  is_leaf,
  is_error,
  status,
  error: error2
}) {
  const { module: module2 } = node;
  let uses_credentials = false;
  const fetched = [];
  let set_cookie_headers = [];
  let loaded;
  const page_proxy = new Proxy(page, {
    get: (target, prop, receiver) => {
      if (prop === "query" && prerender_enabled) {
        throw new Error("Cannot access query on a page with prerendering enabled");
      }
      return Reflect.get(target, prop, receiver);
    }
  });
  if (module2.load) {
    const load_input = {
      page: page_proxy,
      get session() {
        uses_credentials = true;
        return $session;
      },
      fetch: async (resource, opts = {}) => {
        let url;
        if (typeof resource === "string") {
          url = resource;
        } else {
          url = resource.url;
          opts = {
            method: resource.method,
            headers: resource.headers,
            body: resource.body,
            mode: resource.mode,
            credentials: resource.credentials,
            cache: resource.cache,
            redirect: resource.redirect,
            referrer: resource.referrer,
            integrity: resource.integrity,
            ...opts
          };
        }
        const resolved = resolve(request.path, url.split("?")[0]);
        let response;
        const prefix = options2.paths.assets || options2.paths.base;
        const filename = (resolved.startsWith(prefix) ? resolved.slice(prefix.length) : resolved).slice(1);
        const filename_html = `${filename}/index.html`;
        const asset = options2.manifest.assets.find((d) => d.file === filename || d.file === filename_html);
        if (asset) {
          response = options2.read ? new Response(options2.read(asset.file), {
            headers: asset.type ? { "content-type": asset.type } : {}
          }) : await fetch(`http://${page.host}/${asset.file}`, opts);
        } else if (resolved.startsWith("/") && !resolved.startsWith("//")) {
          const relative = resolved;
          const headers = {
            ...opts.headers
          };
          if (opts.credentials !== "omit") {
            uses_credentials = true;
            headers.cookie = request.headers.cookie;
            if (!headers.authorization) {
              headers.authorization = request.headers.authorization;
            }
          }
          if (opts.body && typeof opts.body !== "string") {
            throw new Error("Request body must be a string");
          }
          const search = url.includes("?") ? url.slice(url.indexOf("?") + 1) : "";
          const rendered = await respond({
            host: request.host,
            method: opts.method || "GET",
            headers,
            path: relative,
            rawBody: opts.body == null ? null : new TextEncoder().encode(opts.body),
            query: new URLSearchParams(search)
          }, options2, {
            fetched: url,
            initiator: route
          });
          if (rendered) {
            if (state.prerender) {
              state.prerender.dependencies.set(relative, rendered);
            }
            response = new Response(rendered.body, {
              status: rendered.status,
              headers: rendered.headers
            });
          }
        } else {
          if (resolved.startsWith("//")) {
            throw new Error(`Cannot request protocol-relative URL (${url}) in server-side fetch`);
          }
          if (typeof request.host !== "undefined") {
            const { hostname: fetch_hostname } = new URL(url);
            const [server_hostname] = request.host.split(":");
            if (`.${fetch_hostname}`.endsWith(`.${server_hostname}`) && opts.credentials !== "omit") {
              uses_credentials = true;
              opts.headers = {
                ...opts.headers,
                cookie: request.headers.cookie
              };
            }
          }
          const external_request = new Request(url, opts);
          response = await options2.hooks.externalFetch.call(null, external_request);
        }
        if (response) {
          const proxy = new Proxy(response, {
            get(response2, key, _receiver) {
              async function text() {
                const body = await response2.text();
                const headers = {};
                for (const [key2, value] of response2.headers) {
                  if (key2 === "set-cookie") {
                    set_cookie_headers = set_cookie_headers.concat(value);
                  } else if (key2 !== "etag") {
                    headers[key2] = value;
                  }
                }
                if (!opts.body || typeof opts.body === "string") {
                  fetched.push({
                    url,
                    body: opts.body,
                    json: `{"status":${response2.status},"statusText":${s(response2.statusText)},"headers":${s(headers)},"body":"${escape_json_string_in_html(body)}"}`
                  });
                }
                return body;
              }
              if (key === "text") {
                return text;
              }
              if (key === "json") {
                return async () => {
                  return JSON.parse(await text());
                };
              }
              return Reflect.get(response2, key, response2);
            }
          });
          return proxy;
        }
        return response || new Response("Not found", {
          status: 404
        });
      },
      stuff: { ...stuff }
    };
    if (is_error) {
      load_input.status = status;
      load_input.error = error2;
    }
    loaded = await module2.load.call(null, load_input);
  } else {
    loaded = {};
  }
  if (!loaded && is_leaf && !is_error)
    return;
  if (!loaded) {
    throw new Error(`${node.entry} - load must return a value except for page fall through`);
  }
  return {
    node,
    loaded: normalize2(loaded),
    stuff: loaded.stuff || stuff,
    fetched,
    set_cookie_headers,
    uses_credentials
  };
}
function resolve(base2, path) {
  const base_match = absolute.exec(base2);
  const path_match = absolute.exec(path);
  if (!base_match) {
    throw new Error(`bad base path: "${base2}"`);
  }
  const baseparts = path_match ? [] : base2.slice(base_match[0].length).split("/");
  const pathparts = path_match ? path.slice(path_match[0].length).split("/") : path.split("/");
  baseparts.pop();
  for (let i = 0; i < pathparts.length; i += 1) {
    const part = pathparts[i];
    if (part === ".")
      continue;
    else if (part === "..")
      baseparts.pop();
    else
      baseparts.push(part);
  }
  const prefix = path_match && path_match[0] || base_match && base_match[0] || "";
  return `${prefix}${baseparts.join("/")}`;
}
async function respond_with_error({ request, options: options2, state, $session, status, error: error2 }) {
  const default_layout = await options2.load_component(options2.manifest.layout);
  const default_error = await options2.load_component(options2.manifest.error);
  const page = {
    host: request.host,
    path: request.path,
    query: request.query,
    params: {}
  };
  const loaded = await load_node({
    request,
    options: options2,
    state,
    route: null,
    page,
    node: default_layout,
    $session,
    stuff: {},
    prerender_enabled: is_prerender_enabled(options2, default_error, state),
    is_leaf: false,
    is_error: false
  });
  const branch = [
    loaded,
    await load_node({
      request,
      options: options2,
      state,
      route: null,
      page,
      node: default_error,
      $session,
      stuff: loaded ? loaded.stuff : {},
      prerender_enabled: is_prerender_enabled(options2, default_error, state),
      is_leaf: false,
      is_error: true,
      status,
      error: error2
    })
  ];
  try {
    return await render_response({
      options: options2,
      $session,
      page_config: {
        hydrate: options2.hydrate,
        router: options2.router,
        ssr: options2.ssr
      },
      status,
      error: error2,
      branch,
      page
    });
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return {
      status: 500,
      headers: {},
      body: error3.stack
    };
  }
}
function is_prerender_enabled(options2, node, state) {
  return options2.prerender && (!!node.module.prerender || !!state.prerender && state.prerender.all);
}
async function respond$1(opts) {
  const { request, options: options2, state, $session, route } = opts;
  let nodes;
  try {
    nodes = await Promise.all(route.a.map((id2) => id2 ? options2.load_component(id2) : void 0));
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return await respond_with_error({
      request,
      options: options2,
      state,
      $session,
      status: 500,
      error: error3
    });
  }
  const leaf = nodes[nodes.length - 1].module;
  let page_config = get_page_config(leaf, options2);
  if (!leaf.prerender && state.prerender && !state.prerender.all) {
    return {
      status: 204,
      headers: {}
    };
  }
  let branch = [];
  let status = 200;
  let error2;
  let set_cookie_headers = [];
  ssr:
    if (page_config.ssr) {
      let stuff = {};
      for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        let loaded;
        if (node) {
          try {
            loaded = await load_node({
              ...opts,
              node,
              stuff,
              prerender_enabled: is_prerender_enabled(options2, node, state),
              is_leaf: i === nodes.length - 1,
              is_error: false
            });
            if (!loaded)
              return;
            set_cookie_headers = set_cookie_headers.concat(loaded.set_cookie_headers);
            if (loaded.loaded.redirect) {
              return with_cookies({
                status: loaded.loaded.status,
                headers: {
                  location: encodeURI(loaded.loaded.redirect)
                }
              }, set_cookie_headers);
            }
            if (loaded.loaded.error) {
              ({ status, error: error2 } = loaded.loaded);
            }
          } catch (err) {
            const e = coalesce_to_error(err);
            options2.handle_error(e, request);
            status = 500;
            error2 = e;
          }
          if (loaded && !error2) {
            branch.push(loaded);
          }
          if (error2) {
            while (i--) {
              if (route.b[i]) {
                const error_node = await options2.load_component(route.b[i]);
                let node_loaded;
                let j = i;
                while (!(node_loaded = branch[j])) {
                  j -= 1;
                }
                try {
                  const error_loaded = await load_node({
                    ...opts,
                    node: error_node,
                    stuff: node_loaded.stuff,
                    prerender_enabled: is_prerender_enabled(options2, error_node, state),
                    is_leaf: false,
                    is_error: true,
                    status,
                    error: error2
                  });
                  if (error_loaded.loaded.error) {
                    continue;
                  }
                  page_config = get_page_config(error_node.module, options2);
                  branch = branch.slice(0, j + 1).concat(error_loaded);
                  break ssr;
                } catch (err) {
                  const e = coalesce_to_error(err);
                  options2.handle_error(e, request);
                  continue;
                }
              }
            }
            return with_cookies(await respond_with_error({
              request,
              options: options2,
              state,
              $session,
              status,
              error: error2
            }), set_cookie_headers);
          }
        }
        if (loaded && loaded.loaded.stuff) {
          stuff = {
            ...stuff,
            ...loaded.loaded.stuff
          };
        }
      }
    }
  try {
    return with_cookies(await render_response({
      ...opts,
      page_config,
      status,
      error: error2,
      branch: branch.filter(Boolean)
    }), set_cookie_headers);
  } catch (err) {
    const error3 = coalesce_to_error(err);
    options2.handle_error(error3, request);
    return with_cookies(await respond_with_error({
      ...opts,
      status: 500,
      error: error3
    }), set_cookie_headers);
  }
}
function get_page_config(leaf, options2) {
  return {
    ssr: "ssr" in leaf ? !!leaf.ssr : options2.ssr,
    router: "router" in leaf ? !!leaf.router : options2.router,
    hydrate: "hydrate" in leaf ? !!leaf.hydrate : options2.hydrate
  };
}
function with_cookies(response, set_cookie_headers) {
  if (set_cookie_headers.length) {
    response.headers["set-cookie"] = set_cookie_headers;
  }
  return response;
}
async function render_page(request, route, match, options2, state) {
  if (state.initiator === route) {
    return {
      status: 404,
      headers: {},
      body: `Not found: ${request.path}`
    };
  }
  const params = route.params(match);
  const page = {
    host: request.host,
    path: request.path,
    query: request.query,
    params
  };
  const $session = await options2.hooks.getSession(request);
  const response = await respond$1({
    request,
    options: options2,
    state,
    $session,
    route,
    page
  });
  if (response) {
    return response;
  }
  if (state.fetched) {
    return {
      status: 500,
      headers: {},
      body: `Bad request in load function: failed to fetch ${state.fetched}`
    };
  }
}
function read_only_form_data() {
  const map2 = new Map();
  return {
    append(key, value) {
      if (map2.has(key)) {
        (map2.get(key) || []).push(value);
      } else {
        map2.set(key, [value]);
      }
    },
    data: new ReadOnlyFormData(map2)
  };
}
function parse_body(raw, headers) {
  if (!raw)
    return raw;
  const content_type = headers["content-type"];
  const [type3, ...directives] = content_type ? content_type.split(/;\s*/) : [];
  const text = () => new TextDecoder(headers["content-encoding"] || "utf-8").decode(raw);
  switch (type3) {
    case "text/plain":
      return text();
    case "application/json":
      return JSON.parse(text());
    case "application/x-www-form-urlencoded":
      return get_urlencoded(text());
    case "multipart/form-data": {
      const boundary = directives.find((directive) => directive.startsWith("boundary="));
      if (!boundary)
        throw new Error("Missing boundary");
      return get_multipart(text(), boundary.slice("boundary=".length));
    }
    default:
      return raw;
  }
}
function get_urlencoded(text) {
  const { data, append } = read_only_form_data();
  text.replace(/\+/g, " ").split("&").forEach((str) => {
    const [key, value] = str.split("=");
    append(decodeURIComponent(key), decodeURIComponent(value));
  });
  return data;
}
function get_multipart(text, boundary) {
  const parts = text.split(`--${boundary}`);
  if (parts[0] !== "" || parts[parts.length - 1].trim() !== "--") {
    throw new Error("Malformed form data");
  }
  const { data, append } = read_only_form_data();
  parts.slice(1, -1).forEach((part) => {
    const match = /\s*([\s\S]+?)\r\n\r\n([\s\S]*)\s*/.exec(part);
    if (!match) {
      throw new Error("Malformed form data");
    }
    const raw_headers = match[1];
    const body = match[2].trim();
    let key;
    const headers = {};
    raw_headers.split("\r\n").forEach((str) => {
      const [raw_header, ...raw_directives] = str.split("; ");
      let [name3, value] = raw_header.split(": ");
      name3 = name3.toLowerCase();
      headers[name3] = value;
      const directives = {};
      raw_directives.forEach((raw_directive) => {
        const [name22, value2] = raw_directive.split("=");
        directives[name22] = JSON.parse(value2);
      });
      if (name3 === "content-disposition") {
        if (value !== "form-data")
          throw new Error("Malformed form data");
        if (directives.filename) {
          throw new Error("File upload is not yet implemented");
        }
        if (directives.name) {
          key = directives.name;
        }
      }
    });
    if (!key)
      throw new Error("Malformed form data");
    append(key, body);
  });
  return data;
}
async function respond(incoming, options2, state = {}) {
  if (incoming.path !== "/" && options2.trailing_slash !== "ignore") {
    const has_trailing_slash = incoming.path.endsWith("/");
    if (has_trailing_slash && options2.trailing_slash === "never" || !has_trailing_slash && options2.trailing_slash === "always" && !(incoming.path.split("/").pop() || "").includes(".")) {
      const path = has_trailing_slash ? incoming.path.slice(0, -1) : incoming.path + "/";
      const q = incoming.query.toString();
      return {
        status: 301,
        headers: {
          location: options2.paths.base + path + (q ? `?${q}` : "")
        }
      };
    }
  }
  const headers = lowercase_keys(incoming.headers);
  const request = {
    ...incoming,
    headers,
    body: parse_body(incoming.rawBody, headers),
    params: {},
    locals: {}
  };
  try {
    return await options2.hooks.handle({
      request,
      resolve: async (request2) => {
        if (state.prerender && state.prerender.fallback) {
          return await render_response({
            options: options2,
            $session: await options2.hooks.getSession(request2),
            page_config: { ssr: false, router: true, hydrate: true },
            status: 200,
            branch: []
          });
        }
        const decoded = decodeURI(request2.path);
        for (const route of options2.manifest.routes) {
          const match = route.pattern.exec(decoded);
          if (!match)
            continue;
          const response = route.type === "endpoint" ? await render_endpoint(request2, route, match) : await render_page(request2, route, match, options2, state);
          if (response) {
            if (response.status === 200) {
              const cache_control = get_single_valued_header(response.headers, "cache-control");
              if (!cache_control || !/(no-store|immutable)/.test(cache_control)) {
                const etag = `"${hash(response.body || "")}"`;
                if (request2.headers["if-none-match"] === etag) {
                  return {
                    status: 304,
                    headers: {}
                  };
                }
                response.headers["etag"] = etag;
              }
            }
            return response;
          }
        }
        const $session = await options2.hooks.getSession(request2);
        return await respond_with_error({
          request: request2,
          options: options2,
          state,
          $session,
          status: 404,
          error: new Error(`Not found: ${request2.path}`)
        });
      }
    });
  } catch (err) {
    const e = coalesce_to_error(err);
    options2.handle_error(e, request);
    return {
      status: 500,
      headers: {},
      body: options2.dev ? e.stack : e.message
    };
  }
}
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function custom_event(type3, detail, bubbles = false) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type3, bubbles, false, detail);
  return e;
}
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type3, detail) => {
    const callbacks = component.$$.callbacks[type3];
    if (callbacks) {
      const event = custom_event(type3, detail);
      callbacks.slice().forEach((fn) => {
        fn.call(component, event);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
function spread(args, classes_to_add) {
  const attributes = Object.assign({}, ...args);
  if (classes_to_add) {
    if (attributes.class == null) {
      attributes.class = classes_to_add;
    } else {
      attributes.class += " " + classes_to_add;
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name3) => {
    if (invalid_attribute_name_character.test(name3))
      return;
    const value = attributes[name3];
    if (value === true)
      str += " " + name3;
    else if (boolean_attributes.has(name3.toLowerCase())) {
      if (value)
        str += " " + name3;
    } else if (value != null) {
      str += ` ${name3}="${value}"`;
    }
  });
  return str;
}
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function escape_attribute_value(value) {
  return typeof value === "string" ? escape(value) : value;
}
function escape_object(obj) {
  const result = {};
  for (const key in obj) {
    result[key] = escape_attribute_value(obj[key]);
  }
  return result;
}
function each(items, fn) {
  let str = "";
  for (let i = 0; i < items.length; i += 1) {
    str += fn(items[i], i);
  }
  return str;
}
function validate_component(component, name3) {
  if (!component || !component.$$render) {
    if (name3 === "svelte:component")
      name3 += " this={...}";
    throw new Error(`<${name3}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css22) => css22.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name3, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name3}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function afterUpdate() {
}
function set_paths(paths) {
  base = paths.base;
  assets = paths.assets || base;
}
function set_prerendering(value) {
}
function init2(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  const hooks = get_hooks(user_hooks);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: assets + "/_app/start-f47853e7.js",
      css: [assets + "/_app/assets/start-61d1577b.css"],
      js: [assets + "/_app/start-f47853e7.js", assets + "/_app/chunks/vendor-c1202e36.js", assets + "/_app/chunks/preload-helper-ec9aa979.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id2) => assets + "/_app/" + entry_lookup[id2],
    get_stack: (error2) => String(error2),
    handle_error: (error2, request) => {
      hooks.handleError({ error: error2, request });
      error2.stack = options.get_stack(error2);
    },
    hooks,
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    prerender: true,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
async function load_component(file) {
  const { entry, css: css22, js, styles } = metadata_lookup[file];
  return {
    module: await module_lookup[file](),
    entry: assets + "/_app/" + entry,
    css: css22.map((dep) => assets + "/_app/" + dep),
    js: js.map((dep) => assets + "/_app/" + dep),
    styles
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
var __accessCheck, __privateGet, __privateAdd, __privateSet, _map, chars, unsafeChars, reserved, escaped$1, objectProtoOwnPropertyNames, subscriber_queue2, escape_json_string_in_html_dict, escape_html_attr_dict, s$1, s, absolute, ReadOnlyFormData, current_component, boolean_attributes, invalid_attribute_name_character, escaped, missing_component, on_destroy, css4, Root, base, assets, user_hooks, template, options, default_settings, empty2, manifest, get_hooks, module_lookup, metadata_lookup;
var init_app_ca4b120c = __esm({
  ".svelte-kit/output/server/chunks/app-ca4b120c.js"() {
    init_shims();
    __accessCheck = (obj, member, msg) => {
      if (!member.has(obj))
        throw TypeError("Cannot " + msg);
    };
    __privateGet = (obj, member, getter) => {
      __accessCheck(obj, member, "read from private field");
      return getter ? getter.call(obj) : member.get(obj);
    };
    __privateAdd = (obj, member, value) => {
      if (member.has(obj))
        throw TypeError("Cannot add the same private member more than once");
      member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
    };
    __privateSet = (obj, member, value, setter) => {
      __accessCheck(obj, member, "write to private field");
      setter ? setter.call(obj, value) : member.set(obj, value);
      return value;
    };
    chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
    unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
    reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
    escaped$1 = {
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
    Promise.resolve();
    subscriber_queue2 = [];
    escape_json_string_in_html_dict = {
      '"': '\\"',
      "<": "\\u003C",
      ">": "\\u003E",
      "/": "\\u002F",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    escape_html_attr_dict = {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;"
    };
    s$1 = JSON.stringify;
    s = JSON.stringify;
    absolute = /^([a-z]+:)?\/?\//;
    ReadOnlyFormData = class {
      constructor(map2) {
        __privateAdd(this, _map, void 0);
        __privateSet(this, _map, map2);
      }
      get(key) {
        const value = __privateGet(this, _map).get(key);
        return value && value[0];
      }
      getAll(key) {
        return __privateGet(this, _map).get(key);
      }
      has(key) {
        return __privateGet(this, _map).has(key);
      }
      *[Symbol.iterator]() {
        for (const [key, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield [key, value[i]];
          }
        }
      }
      *entries() {
        for (const [key, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield [key, value[i]];
          }
        }
      }
      *keys() {
        for (const [key] of __privateGet(this, _map))
          yield key;
      }
      *values() {
        for (const [, value] of __privateGet(this, _map)) {
          for (let i = 0; i < value.length; i += 1) {
            yield value[i];
          }
        }
      }
    };
    _map = new WeakMap();
    Promise.resolve();
    boolean_attributes = new Set([
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ]);
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    escaped = {
      '"': "&quot;",
      "'": "&#39;",
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;"
    };
    missing_component = {
      $$render: () => ""
    };
    css4 = {
      code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
      map: null
    };
    Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { stores } = $$props;
      let { page } = $$props;
      let { components } = $$props;
      let { props_0 = null } = $$props;
      let { props_1 = null } = $$props;
      let { props_2 = null } = $$props;
      setContext("__svelte__", stores);
      afterUpdate(stores.page.notify);
      if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
        $$bindings.stores(stores);
      if ($$props.page === void 0 && $$bindings.page && page !== void 0)
        $$bindings.page(page);
      if ($$props.components === void 0 && $$bindings.components && components !== void 0)
        $$bindings.components(components);
      if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
        $$bindings.props_0(props_0);
      if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
        $$bindings.props_1(props_1);
      if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
        $$bindings.props_2(props_2);
      $$result.css.add(css4);
      {
        stores.page.set(page);
      }
      return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
        default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
          default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
        })}` : ``}`
      })}

${``}`;
    });
    base = "";
    assets = "";
    user_hooks = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      [Symbol.toStringTag]: "Module"
    });
    template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
    options = null;
    default_settings = { paths: { "base": "", "assets": "" } };
    empty2 = () => ({});
    manifest = {
      assets: [{ "file": "favicon.png", "size": 34151, "type": "image/png" }, { "file": "ni.png", "size": 32528, "type": "image/png" }, { "file": "svelte.png", "size": 1571, "type": "image/png" }],
      layout: ".svelte-kit/build/components/layout.svelte",
      error: ".svelte-kit/build/components/error.svelte",
      routes: [
        {
          type: "page",
          pattern: /^\/$/,
          params: empty2,
          a: [".svelte-kit/build/components/layout.svelte", "src/routes/index.svelte"],
          b: [".svelte-kit/build/components/error.svelte"]
        },
        {
          type: "page",
          pattern: /^\/sandbox\/?$/,
          params: empty2,
          a: [".svelte-kit/build/components/layout.svelte", "src/routes/sandbox.svelte"],
          b: [".svelte-kit/build/components/error.svelte"]
        }
      ]
    };
    get_hooks = (hooks) => ({
      getSession: hooks.getSession || (() => ({})),
      handle: hooks.handle || (({ request, resolve: resolve2 }) => resolve2(request)),
      handleError: hooks.handleError || (({ error: error2 }) => console.error(error2.stack)),
      externalFetch: hooks.externalFetch || fetch
    });
    module_lookup = {
      ".svelte-kit/build/components/layout.svelte": () => Promise.resolve().then(() => (init_layout_dcf06324(), layout_dcf06324_exports)),
      ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(() => (init_error_57931332(), error_57931332_exports)),
      "src/routes/index.svelte": () => Promise.resolve().then(() => (init_index_76d00731(), index_76d00731_exports)),
      "src/routes/sandbox.svelte": () => Promise.resolve().then(() => (init_sandbox_8b9c17f9(), sandbox_8b9c17f9_exports))
    };
    metadata_lookup = { ".svelte-kit/build/components/layout.svelte": { "entry": "layout.svelte-826fd607.js", "css": [], "js": ["layout.svelte-826fd607.js", "chunks/vendor-c1202e36.js"], "styles": [] }, ".svelte-kit/build/components/error.svelte": { "entry": "error.svelte-7d3c1935.js", "css": [], "js": ["error.svelte-7d3c1935.js", "chunks/vendor-c1202e36.js"], "styles": [] }, "src/routes/index.svelte": { "entry": "pages/index.svelte-0e51f996.js", "css": ["assets/pages/index.svelte-0664bb9b.css", "assets/rto2017_si_simplified_3dp.geojson-2b2b7653.css"], "js": ["pages/index.svelte-0e51f996.js", "chunks/vendor-c1202e36.js", "chunks/rto2017_si_simplified_3dp.geojson-e4dd7f31.js", "chunks/preload-helper-ec9aa979.js"], "styles": [] }, "src/routes/sandbox.svelte": { "entry": "pages/sandbox.svelte-ef48d91e.js", "css": ["assets/pages/sandbox.svelte-85e586e5.css", "assets/rto2017_si_simplified_3dp.geojson-2b2b7653.css"], "js": ["pages/sandbox.svelte-ef48d91e.js", "chunks/vendor-c1202e36.js", "chunks/rto2017_si_simplified_3dp.geojson-e4dd7f31.js"], "styles": [] } };
  }
});

// .svelte-kit/vercel/entry.js
__export(exports, {
  default: () => entry_default
});
init_shims();

// node_modules/@sveltejs/kit/dist/node.js
init_shims();
function getRawBody(req) {
  return new Promise((fulfil, reject) => {
    const h = req.headers;
    if (!h["content-type"]) {
      return fulfil(null);
    }
    req.on("error", reject);
    const length = Number(h["content-length"]);
    if (isNaN(length) && h["transfer-encoding"] == null) {
      return fulfil(null);
    }
    let data = new Uint8Array(length || 0);
    if (length > 0) {
      let offset = 0;
      req.on("data", (chunk) => {
        const new_len = offset + Buffer.byteLength(chunk);
        if (new_len > length) {
          return reject({
            status: 413,
            reason: 'Exceeded "Content-Length" limit'
          });
        }
        data.set(chunk, offset);
        offset = new_len;
      });
    } else {
      req.on("data", (chunk) => {
        const new_data = new Uint8Array(data.length + chunk.length);
        new_data.set(data, 0);
        new_data.set(chunk, data.length);
        data = new_data;
      });
    }
    req.on("end", () => {
      fulfil(data);
    });
  });
}

// .svelte-kit/output/server/app.js
init_shims();
init_app_ca4b120c();

// .svelte-kit/vercel/entry.js
init2();
var entry_default = async (req, res) => {
  const { pathname, searchParams } = new URL(req.url || "", "http://localhost");
  let body;
  try {
    body = await getRawBody(req);
  } catch (err) {
    res.statusCode = err.status || 400;
    return res.end(err.reason || "Invalid request body");
  }
  const rendered = await render({
    method: req.method,
    headers: req.headers,
    path: pathname,
    query: searchParams,
    rawBody: body
  });
  if (rendered) {
    const { status, headers, body: body2 } = rendered;
    return res.writeHead(status, headers).end(body2);
  }
  return res.writeHead(404).end();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
