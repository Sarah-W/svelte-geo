import{S as f1,i as p1,s as u1,j as Q,l as _1,m as Z,o as W,f as t1,r as E1,u as J,v as X,w as k1,x as D,d as i,A as L1,D as O1,E as F1,F as G1,G as z1,e as f,t as C,k,c as p,a as u,g as P,n as w,b as _,H as a,I as n1,h as w1,J as j1,K as I1,L as S1,M as R1,N as J1,O as v1,P as M1,Q as C1,R as q1,T as P1,U as T1}from"../chunks/vendor-c1202e36.js";import{B as h1,F as d1,r as b1,n as H1,s as U1}from"../chunks/rto2017_si_simplified_3dp.geojson-e4dd7f31.js";import{_ as Y1}from"../chunks/preload-helper-ec9aa979.js";const K1="FeatureCollection",Q1="a4_coastline_simplified_3dp",W1={type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}},X1=[{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[167.87,-46.684],[167.978,-46.721],[168.004,-46.79],[168.091,-46.832],[168.076,-46.854],[168.145,-46.861],[168.126,-46.875],[168.15,-46.88],[168.123,-46.893],[168.131,-46.9],[168.164,-46.896],[168.14,-46.912],[168.071,-46.908],[168.068,-46.895],[168.067,-46.907],[168.042,-46.902],[168.063,-46.917],[168.047,-46.92],[168.012,-46.903],[168.032,-46.898],[168.008,-46.869],[167.991,-46.871],[168.002,-46.895],[167.976,-46.891],[167.963,-46.894],[167.952,-46.896],[167.971,-46.901],[167.979,-46.929],[167.95,-46.938],[167.915,-46.972],[167.893,-46.978],[167.886,-46.982],[167.887,-46.984],[167.964,-46.954],[167.987,-46.929],[168.014,-46.924],[168.023,-46.951],[168.131,-46.959],[168.075,-46.991],[168.139,-46.991],[168.143,-46.969],[168.174,-46.971],[168.168,-46.938],[168.194,-46.921],[168.177,-46.942],[168.178,-46.974],[168.216,-46.994],[168.209,-47.015],[168.223,-47.013],[168.229,-47.016],[168.202,-47.028],[168.219,-47.035],[168.198,-47.052],[168.211,-47.066],[168.195,-47.064],[168.175,-47.045],[168.161,-47.042],[168.176,-47.058],[168.151,-47.067],[168.207,-47.079],[168.22,-47.097],[168.141,-47.078],[168.157,-47.107],[168.146,-47.118],[168.132,-47.103],[168.075,-47.094],[168.075,-47.087],[168.067,-47.084],[168.069,-47.076],[168.055,-47.076],[168.072,-47.094],[168.135,-47.119],[168.071,-47.103],[168.031,-47.128],[168.003,-47.122],[167.993,-47.112],[167.991,-47.112],[167.988,-47.112],[167.997,-47.125],[167.982,-47.134],[167.95,-47.128],[167.897,-47.17],[167.866,-47.168],[167.866,-47.181],[167.82,-47.192],[167.758,-47.171],[167.722,-47.182],[167.72,-47.166],[167.697,-47.151],[167.686,-47.171],[167.661,-47.166],[167.675,-47.194],[167.652,-47.205],[167.636,-47.198],[167.656,-47.187],[167.598,-47.196],[167.639,-47.205],[167.606,-47.21],[167.597,-47.218],[167.609,-47.225],[167.578,-47.237],[167.553,-47.233],[167.621,-47.245],[167.651,-47.221],[167.662,-47.229],[167.658,-47.237],[167.651,-47.239],[167.649,-47.242],[167.644,-47.244],[167.645,-47.244],[167.641,-47.246],[167.637,-47.249],[167.657,-47.244],[167.646,-47.264],[167.61,-47.271],[167.617,-47.248],[167.594,-47.245],[167.573,-47.279],[167.54,-47.29],[167.49,-47.285],[167.492,-47.27],[167.454,-47.277],[167.467,-47.216],[167.498,-47.198],[167.519,-47.204],[167.522,-47.189],[167.576,-47.166],[167.573,-47.148],[167.555,-47.156],[167.59,-47.114],[167.568,-47.113],[167.56,-47.091],[167.62,-47.042],[167.728,-47.053],[167.692,-47.034],[167.686,-47.015],[167.7,-47.003],[167.669,-46.977],[167.733,-46.957],[167.771,-46.923],[167.751,-46.848],[167.7,-46.796],[167.719,-46.785],[167.704,-46.755],[167.725,-46.728],[167.72,-46.714],[167.786,-46.687],[167.834,-46.703],[167.87,-46.684]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[166.679,-45.6],[166.717,-45.625],[166.724,-45.698],[166.718,-45.725],[166.685,-45.748],[166.663,-45.752],[166.648,-45.714],[166.647,-45.74],[166.626,-45.749],[166.597,-45.756],[166.59,-45.754],[166.58,-45.732],[166.609,-45.736],[166.563,-45.715],[166.583,-45.696],[166.546,-45.698],[166.581,-45.691],[166.555,-45.683],[166.552,-45.651],[166.541,-45.682],[166.451,-45.744],[166.444,-45.739],[166.538,-45.627],[166.554,-45.631],[166.553,-45.649],[166.583,-45.611],[166.679,-45.6]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[171.144,-44.94],[171.082,-45.021],[170.98,-45.092],[170.983,-45.121],[170.919,-45.157],[170.864,-45.238],[170.824,-45.327],[170.836,-45.359],[170.863,-45.357],[170.869,-45.39],[170.819,-45.424],[170.81,-45.457],[170.831,-45.473],[170.754,-45.534],[170.707,-45.611],[170.694,-45.619],[170.674,-45.598],[170.682,-45.612],[170.663,-45.64],[170.658,-45.628],[170.648,-45.621],[170.646,-45.622],[170.659,-45.642],[170.67,-45.638],[170.674,-45.64],[170.61,-45.696],[170.602,-45.728],[170.589,-45.713],[170.571,-45.722],[170.569,-45.746],[170.618,-45.734],[170.626,-45.763],[170.639,-45.738],[170.661,-45.76],[170.692,-45.755],[170.701,-45.77],[170.712,-45.776],[170.708,-45.779],[170.717,-45.783],[170.718,-45.787],[170.629,-45.796],[170.618,-45.828],[170.605,-45.821],[170.567,-45.863],[170.506,-45.88],[170.518,-45.894],[170.532,-45.88],[170.575,-45.879],[170.597,-45.869],[170.603,-45.845],[170.651,-45.839],[170.642,-45.824],[170.672,-45.833],[170.669,-45.815],[170.721,-45.798],[170.728,-45.772],[170.751,-45.805],[170.732,-45.845],[170.749,-45.846],[170.748,-45.873],[170.687,-45.862],[170.687,-45.892],[170.663,-45.904],[170.498,-45.911],[170.298,-45.962],[170.212,-46.052],[170.192,-46.053],[170.2,-46.092],[170.171,-46.153],[170.01,-46.238],[169.973,-46.272],[169.798,-46.355],[169.78,-46.398],[169.8,-46.412],[169.794,-46.435],[169.819,-46.45],[169.781,-46.453],[169.753,-46.483],[169.746,-46.476],[169.638,-46.469],[169.614,-46.481],[169.63,-46.49],[169.695,-46.485],[169.723,-46.49],[169.693,-46.51],[169.698,-46.52],[169.617,-46.54],[169.585,-46.578],[169.562,-46.561],[169.477,-46.561],[169.468,-46.581],[169.433,-46.592],[169.447,-46.606],[169.438,-46.613],[169.379,-46.607],[169.356,-46.62],[169.36,-46.637],[169.281,-46.622],[169.204,-46.662],[169.17,-46.657],[169.136,-46.646],[169.151,-46.646],[169.171,-46.624],[169.129,-46.603],[169.141,-46.63],[169.127,-46.639],[169.141,-46.639],[169.143,-46.642],[169.067,-46.671],[168.847,-46.661],[168.824,-46.626],[168.829,-46.605],[168.77,-46.575],[168.603,-46.552],[168.548,-46.557],[168.59,-46.583],[168.566,-46.592],[168.583,-46.587],[168.592,-46.586],[168.518,-46.607],[168.368,-46.602],[168.376,-46.583],[168.418,-46.571],[168.439,-46.587],[168.53,-46.592],[168.516,-46.574],[168.45,-46.56],[168.378,-46.574],[168.362,-46.556],[168.374,-46.548],[168.35,-46.536],[168.334,-46.551],[168.301,-46.548],[168.306,-46.588],[168.36,-46.612],[168.33,-46.625],[168.31,-46.594],[168.275,-46.585],[168.267,-46.556],[168.231,-46.552],[168.224,-46.523],[168.286,-46.512],[168.278,-46.54],[168.297,-46.533],[168.286,-46.524],[168.294,-46.508],[168.377,-46.485],[168.337,-46.419],[168.312,-46.429],[168.327,-46.449],[168.318,-46.456],[168.271,-46.46],[168.268,-46.442],[168.267,-46.46],[168.303,-46.464],[168.293,-46.47],[168.304,-46.489],[168.271,-46.5],[168.197,-46.391],[168.157,-46.361],[168.085,-46.339],[168.012,-46.355],[168.018,-46.346],[168.018,-46.328],[167.962,-46.333],[167.95,-46.308],[167.959,-46.34],[168.022,-46.36],[168.038,-46.384],[167.914,-46.357],[167.88,-46.368],[167.884,-46.392],[167.831,-46.368],[167.783,-46.389],[167.736,-46.365],[167.731,-46.335],[167.687,-46.322],[167.73,-46.299],[167.722,-46.266],[167.611,-46.191],[167.519,-46.157],[167.403,-46.152],[167.392,-46.178],[167.352,-46.195],[167.364,-46.227],[167.342,-46.251],[167.27,-46.245],[167.217,-46.263],[167.106,-46.258],[167.019,-46.227],[166.873,-46.21],[166.809,-46.213],[166.78,-46.231],[166.765,-46.214],[166.661,-46.205],[166.644,-46.194],[166.65,-46.174],[166.609,-46.158],[166.619,-46.143],[166.716,-46.111],[166.708,-46.092],[166.725,-46.071],[166.733,-46.091],[166.737,-46.064],[166.772,-46.058],[166.781,-46.046],[166.774,-46.001],[166.855,-45.981],[166.918,-45.933],[166.918,-45.922],[166.85,-45.969],[166.775,-45.978],[166.786,-45.987],[166.735,-46.019],[166.766,-46.041],[166.751,-46.059],[166.738,-46.059],[166.739,-46.038],[166.716,-46.075],[166.705,-46.075],[166.697,-46.055],[166.735,-46.022],[166.724,-46.018],[166.685,-46.052],[166.693,-46.06],[166.687,-46.064],[166.674,-46.052],[166.658,-46.064],[166.659,-46.069],[166.648,-46.078],[166.648,-46.08],[166.645,-46.083],[166.614,-46.06],[166.576,-46.092],[166.565,-46.072],[166.584,-46.062],[166.59,-46.034],[166.609,-46.053],[166.599,-46.016],[166.619,-45.988],[166.771,-45.968],[166.754,-45.954],[166.767,-45.945],[166.705,-45.957],[166.647,-45.949],[166.683,-45.907],[166.688,-45.877],[166.71,-45.868],[166.708,-45.858],[166.682,-45.869],[166.596,-45.97],[166.499,-46.002],[166.473,-45.996],[166.472,-46.012],[166.45,-45.998],[166.451,-45.941],[166.426,-45.905],[166.44,-45.883],[166.433,-45.842],[166.455,-45.813],[166.521,-45.794],[166.596,-45.795],[166.571,-45.816],[166.622,-45.791],[166.78,-45.762],[166.856,-45.775],[166.838,-45.764],[166.883,-45.738],[166.981,-45.718],[166.948,-45.72],[166.963,-45.7],[166.953,-45.695],[166.935,-45.724],[166.823,-45.704],[166.762,-45.724],[166.728,-45.727],[166.751,-45.668],[166.938,-45.631],[166.97,-45.604],[166.926,-45.627],[166.734,-45.661],[166.729,-45.596],[166.87,-45.552],[166.883,-45.564],[166.958,-45.552],[166.987,-45.564],[166.996,-45.554],[166.961,-45.546],[166.895,-45.556],[166.884,-45.544],[166.947,-45.525],[167.002,-45.499],[167.015,-45.487],[166.898,-45.528],[166.864,-45.52],[166.871,-45.543],[166.807,-45.547],[166.742,-45.579],[166.672,-45.576],[166.688,-45.506],[166.728,-45.503],[166.711,-45.471],[166.793,-45.325],[166.844,-45.276],[166.95,-45.318],[166.897,-45.344],[166.969,-45.321],[167.028,-45.352],[166.999,-45.372],[167.014,-45.375],[167.02,-45.402],[166.979,-45.399],[166.919,-45.418],[166.917,-45.424],[166.982,-45.406],[167.019,-45.415],[167.037,-45.354],[167.069,-45.363],[167.116,-45.431],[167.114,-45.449],[167.072,-45.477],[167.057,-45.507],[167.12,-45.459],[167.14,-45.441],[167.11,-45.387],[167.007,-45.314],[167.034,-45.293],[167.124,-45.283],[167.168,-45.318],[167.191,-45.32],[167.162,-45.308],[167.144,-45.278],[167.171,-45.25],[167.146,-45.266],[167.119,-45.261],[167.111,-45.277],[167.011,-45.28],[166.967,-45.193],[166.994,-45.166],[166.974,-45.138],[167.105,-45.033],[167.092,-45.026],[167.125,-45.012],[167.146,-44.975],[167.197,-44.962],[167.19,-44.95],[167.212,-44.927],[167.242,-44.928],[167.221,-44.919],[167.271,-44.87],[167.327,-44.845],[167.34,-44.844],[167.376,-44.91],[167.358,-44.947],[167.403,-44.963],[167.382,-44.998],[167.412,-44.973],[167.442,-44.984],[167.383,-44.935],[167.407,-44.931],[167.355,-44.825],[167.397,-44.814],[167.442,-44.776],[167.489,-44.777],[167.538,-44.801],[167.489,-44.847],[167.496,-44.866],[167.531,-44.882],[167.5,-44.853],[167.548,-44.802],[167.494,-44.753],[167.527,-44.731],[167.593,-44.739],[167.632,-44.783],[167.62,-44.748],[167.561,-44.718],[167.565,-44.685],[167.613,-44.66],[167.663,-44.685],[167.633,-44.642],[167.738,-44.603],[167.75,-44.581],[167.783,-44.572],[167.806,-44.603],[167.872,-44.625],[167.913,-44.686],[167.929,-44.683],[167.913,-44.671],[167.929,-44.672],[167.913,-44.623],[167.817,-44.599],[167.831,-44.528],[167.816,-44.496],[167.844,-44.485],[167.872,-44.435],[167.931,-44.39],[167.987,-44.378],[168.002,-44.337],[168.001,-44.368],[168.049,-44.451],[168.055,-44.511],[168.076,-44.519],[168.058,-44.412],[168.018,-44.384],[168.008,-44.339],[167.994,-44.328],[168.098,-44.327],[168.12,-44.291],[168.052,-44.258],[168.104,-44.243],[168.251,-44.154],[168.286,-44.103],[168.326,-44.084],[168.326,-44.051],[168.361,-44.031],[168.367,-44.009],[168.513,-44.002],[168.617,-43.958],[168.615,-43.977],[168.653,-43.996],[168.815,-43.967],[168.887,-43.906],[169.017,-43.853],[169.209,-43.719],[169.346,-43.67],[169.382,-43.638],[169.501,-43.627],[169.555,-43.586],[169.571,-43.602],[169.609,-43.592],[169.649,-43.554],[169.69,-43.545],[169.794,-43.421],[169.974,-43.362],[170.134,-43.231],[170.205,-43.226],[170.227,-43.194],[170.273,-43.176],[170.258,-43.156],[170.224,-43.155],[170.232,-43.165],[170.218,-43.165],[170.213,-43.19],[170.166,-43.218],[170.26,-43.108],[170.349,-43.094],[170.411,-43.042],[170.458,-43.023],[170.595,-42.993],[170.721,-42.93],[170.86,-42.83],[170.948,-42.724],[171.096,-42.603],[171.167,-42.508],[171.219,-42.38],[171.24,-42.374],[171.28,-42.313],[171.306,-42.26],[171.326,-42.114],[171.361,-42.072],[171.366,-42.035],[171.392,-42.021],[171.418,-41.918],[171.455,-41.885],[171.459,-41.753],[171.55,-41.75],[171.587,-41.727],[171.59,-41.745],[171.568,-41.749],[171.593,-41.748],[171.595,-41.766],[171.601,-41.742],[171.599,-41.741],[171.596,-41.745],[171.594,-41.744],[171.589,-41.727],[171.676,-41.739],[171.882,-41.601],[171.986,-41.446],[172.061,-41.388],[172.092,-41.276],[172.095,-41.291],[172.108,-41.276],[172.1,-40.896],[172.216,-40.776],[172.292,-40.747],[172.445,-40.631],[172.534,-40.582],[172.544,-40.606],[172.505,-40.622],[172.517,-40.641],[172.516,-40.626],[172.557,-40.606],[172.552,-40.619],[172.567,-40.608],[172.586,-40.617],[172.581,-40.599],[172.568,-40.601],[172.576,-40.591],[172.613,-40.588],[172.616,-40.601],[172.625,-40.604],[172.63,-40.555],[172.576,-40.566],[172.554,-40.588],[172.55,-40.571],[172.643,-40.508],[172.682,-40.499],[172.899,-40.513],[172.98,-40.53],[173.016,-40.55],[172.893,-40.519],[172.753,-40.516],[172.686,-40.584],[172.682,-40.661],[172.67,-40.638],[172.662,-40.643],[172.649,-40.655],[172.649,-40.657],[172.667,-40.68],[172.687,-40.679],[172.679,-40.732],[172.688,-40.716],[172.733,-40.772],[172.84,-40.833],[172.891,-40.831],[172.921,-40.8],[172.945,-40.827],[172.954,-40.789],[172.999,-40.783],[173.014,-40.847],[173.062,-40.865],[173.065,-40.878],[173.046,-40.887],[173.064,-40.91],[173.05,-40.95],[173.069,-40.961],[173.012,-40.992],[173.023,-41.045],[173,-41.064],[173.036,-41.096],[173.025,-41.138],[173.019,-41.125],[173.009,-41.142],[173.049,-41.187],[173.037,-41.159],[173.066,-41.184],[173.107,-41.249],[173.1,-41.261],[173.072,-41.253],[173.087,-41.267],[173.075,-41.277],[173.104,-41.277],[173.085,-41.285],[173.094,-41.292],[173.137,-41.288],[173.194,-41.331],[173.221,-41.304],[173.205,-41.306],[173.225,-41.302],[173.207,-41.298],[173.313,-41.249],[173.323,-41.203],[173.416,-41.159],[173.413,-41.138],[173.436,-41.14],[173.439,-41.16],[173.444,-41.164],[173.413,-41.161],[173.429,-41.177],[173.464,-41.166],[173.442,-41.161],[173.483,-41.157],[173.514,-41.104],[173.547,-41.097],[173.594,-41.051],[173.637,-41.079],[173.621,-41.087],[173.616,-41.104],[173.647,-41.089],[173.652,-41.109],[173.667,-41.11],[173.663,-41.078],[173.763,-41.046],[173.741,-41.048],[173.745,-41.033],[173.69,-41.056],[173.673,-41.034],[173.734,-40.998],[173.748,-41.005],[173.767,-40.974],[173.777,-40.99],[173.798,-40.984],[173.786,-40.968],[173.805,-40.972],[173.835,-40.924],[173.856,-40.929],[173.832,-40.981],[173.852,-40.99],[173.917,-40.943],[173.907,-40.927],[173.931,-40.926],[173.979,-40.888],[173.98,-40.905],[174.023,-40.911],[174.014,-40.937],[173.997,-40.947],[173.99,-40.91],[173.97,-40.913],[173.957,-40.923],[173.975,-40.938],[173.95,-40.942],[173.956,-40.967],[173.907,-40.965],[173.9,-40.988],[173.928,-40.985],[173.863,-41.021],[173.813,-41.018],[173.828,-40.988],[173.804,-41.014],[173.784,-41.006],[173.773,-41.02],[173.811,-41.032],[173.768,-41.053],[173.787,-41.057],[173.78,-41.085],[173.767,-41.086],[173.75,-41.101],[173.773,-41.094],[173.76,-41.119],[173.786,-41.111],[173.795,-41.083],[173.808,-41.092],[173.832,-41.053],[173.951,-41.062],[173.905,-41.07],[173.906,-41.091],[173.869,-41.079],[173.858,-41.098],[173.889,-41.1],[173.883,-41.121],[173.844,-41.114],[173.856,-41.123],[173.831,-41.136],[173.838,-41.145],[173.778,-41.153],[173.785,-41.177],[173.848,-41.152],[173.829,-41.173],[173.858,-41.169],[173.866,-41.19],[173.84,-41.218],[173.85,-41.241],[173.822,-41.25],[173.787,-41.235],[173.805,-41.255],[173.734,-41.264],[173.77,-41.274],[173.771,-41.287],[173.779,-41.263],[173.807,-41.287],[173.846,-41.29],[173.855,-41.278],[173.827,-41.286],[173.808,-41.268],[173.868,-41.257],[173.927,-41.224],[173.881,-41.229],[173.86,-41.227],[173.862,-41.219],[173.947,-41.2],[173.937,-41.219],[173.97,-41.218],[174.122,-41.172],[174.053,-41.179],[174.04,-41.174],[174.046,-41.158],[173.986,-41.182],[173.998,-41.195],[173.966,-41.189],[173.975,-41.183],[173.967,-41.172],[173.872,-41.21],[173.898,-41.168],[173.868,-41.154],[173.883,-41.156],[173.901,-41.15],[173.868,-41.142],[173.923,-41.125],[173.901,-41.123],[173.909,-41.109],[173.931,-41.113],[173.933,-41.084],[173.976,-41.079],[173.95,-41.115],[173.965,-41.15],[173.974,-41.128],[173.994,-41.136],[173.987,-41.1],[174.011,-41.095],[174.038,-41.114],[174.048,-41.105],[174.01,-41.059],[174.048,-41.054],[174.049,-41.021],[174.009,-41.017],[173.996,-41.041],[173.975,-41.056],[173.984,-41.032],[173.934,-41.039],[173.953,-41.033],[173.935,-41.02],[173.95,-41.013],[173.988,-41.016],[173.965,-40.992],[173.995,-40.995],[173.996,-40.969],[174.023,-40.976],[174.009,-41.01],[174.047,-41.018],[174.067,-40.996],[174.065,-41.014],[174.108,-41.053],[174.097,-40.995],[174.141,-41.02],[174.142,-40.998],[174.163,-40.983],[174.148,-40.979],[174.156,-40.969],[174.182,-41.011],[174.23,-40.985],[174.217,-41.009],[174.195,-41.012],[174.199,-41.04],[174.184,-41.029],[174.167,-41.043],[174.217,-41.071],[174.241,-41.041],[174.289,-41.034],[174.297,-41.014],[174.315,-40.994],[174.298,-41.035],[174.273,-41.045],[174.272,-41.069],[174.234,-41.093],[174.247,-41.122],[174.208,-41.119],[174.22,-41.142],[174.187,-41.14],[174.197,-41.123],[174.182,-41.123],[174.18,-41.087],[174.164,-41.116],[174.145,-41.108],[174.147,-41.128],[174.166,-41.136],[174.159,-41.15],[174.201,-41.154],[174.184,-41.175],[174.203,-41.183],[174.17,-41.202],[174.181,-41.18],[174.153,-41.173],[174.157,-41.213],[174.125,-41.192],[174.112,-41.205],[174.12,-41.22],[174.093,-41.202],[174.077,-41.229],[174.064,-41.223],[174.07,-41.206],[174.045,-41.211],[174.04,-41.231],[174.031,-41.21],[174.025,-41.241],[173.999,-41.217],[173.998,-41.244],[173.983,-41.251],[173.966,-41.223],[173.972,-41.254],[173.914,-41.264],[173.904,-41.28],[174.011,-41.258],[173.994,-41.279],[174.009,-41.272],[174.004,-41.283],[174.007,-41.282],[174.005,-41.287],[174.011,-41.29],[174.037,-41.254],[174.049,-41.251],[174.039,-41.269],[174.065,-41.252],[174.088,-41.269],[174.079,-41.249],[174.146,-41.232],[174.134,-41.258],[174.15,-41.248],[174.157,-41.264],[174.177,-41.25],[174.203,-41.277],[174.211,-41.266],[174.186,-41.25],[174.246,-41.244],[174.254,-41.26],[174.266,-41.252],[174.255,-41.244],[174.277,-41.244],[174.272,-41.234],[174.305,-41.214],[174.316,-41.213],[174.275,-41.256],[174.283,-41.268],[174.223,-41.292],[174.239,-41.32],[174.213,-41.325],[174.201,-41.31],[174.192,-41.337],[174.123,-41.352],[174.19,-41.293],[174.16,-41.288],[174.139,-41.314],[174.15,-41.284],[174.114,-41.299],[174.123,-41.306],[174.105,-41.339],[174.09,-41.359],[174.071,-41.355],[174.067,-41.387],[174.049,-41.392],[174.029,-41.453],[174.062,-41.501],[174.048,-41.508],[174.072,-41.524],[174.058,-41.551],[174.076,-41.555],[174.08,-41.537],[174.089,-41.56],[174.126,-41.547],[174.065,-41.513],[174.062,-41.501],[174.15,-41.559],[174.166,-41.605],[174.157,-41.657],[174.182,-41.711],[174.212,-41.728],[174.276,-41.726],[174.275,-41.743],[174.218,-41.792],[174.161,-41.872],[173.954,-42.059],[173.925,-42.124],[173.94,-42.162],[173.808,-42.265],[173.762,-42.285],[173.749,-42.321],[173.695,-42.354],[173.682,-42.398],[173.716,-42.424],[173.692,-42.435],[173.672,-42.413],[173.642,-42.415],[173.539,-42.467],[173.502,-42.526],[173.502,-42.548],[173.517,-42.556],[173.478,-42.592],[173.368,-42.799],[173.313,-42.852],[173.319,-42.884],[173.24,-42.954],[173.14,-42.99],[173.081,-43.051],[173.044,-43.047],[172.817,-43.133],[172.734,-43.255],[172.712,-43.322],[172.701,-43.419],[172.707,-43.429],[172.711,-43.391],[172.722,-43.48],[172.754,-43.556],[172.724,-43.525],[172.703,-43.555],[172.808,-43.587],[172.654,-43.62],[172.65,-43.641],[172.657,-43.64],[172.662,-43.634],[172.663,-43.634],[172.666,-43.631],[172.668,-43.631],[172.661,-43.667],[172.682,-43.637],[172.699,-43.656],[172.72,-43.624],[172.743,-43.622],[172.75,-43.639],[172.755,-43.621],[172.816,-43.617],[172.825,-43.604],[172.811,-43.659],[172.822,-43.663],[172.849,-43.608],[172.861,-43.603],[172.881,-43.625],[172.893,-43.614],[172.904,-43.633],[172.907,-43.625],[172.911,-43.624],[172.885,-43.672],[172.895,-43.689],[172.932,-43.623],[172.961,-43.634],[172.961,-43.648],[172.978,-43.633],[172.999,-43.645],[172.993,-43.676],[173.047,-43.651],[173.035,-43.662],[173.073,-43.675],[173.057,-43.691],[173.076,-43.699],[173.087,-43.683],[173.107,-43.7],[173.099,-43.72],[173.118,-43.727],[173.095,-43.733],[173.098,-43.745],[173.129,-43.746],[173.127,-43.776],[173.108,-43.775],[173.113,-43.799],[173.096,-43.808],[173.103,-43.833],[173.085,-43.832],[173.078,-43.853],[173.057,-43.838],[173.063,-43.85],[173.04,-43.855],[173.037,-43.873],[173.004,-43.868],[173.017,-43.88],[172.996,-43.887],[172.993,-43.872],[172.969,-43.888],[172.939,-43.854],[172.945,-43.82],[172.968,-43.801],[172.942,-43.788],[172.966,-43.784],[172.949,-43.774],[172.963,-43.765],[172.933,-43.75],[172.928,-43.777],[172.922,-43.759],[172.91,-43.762],[172.925,-43.796],[172.903,-43.823],[172.912,-43.863],[172.949,-43.895],[172.93,-43.902],[172.868,-43.894],[172.857,-43.876],[172.827,-43.888],[172.84,-43.875],[172.812,-43.88],[172.824,-43.869],[172.822,-43.859],[172.807,-43.874],[172.803,-43.862],[172.782,-43.868],[172.785,-43.85],[172.745,-43.854],[172.729,-43.827],[172.317,-43.867],[172.013,-43.965],[171.64,-44.12],[171.447,-44.219],[171.333,-44.295],[171.245,-44.382],[171.27,-44.388],[171.262,-44.443],[171.196,-44.525],[171.163,-44.603],[171.174,-44.829],[171.144,-44.94]],[[170.579,-45.749],[170.579,-45.752],[170.586,-45.755],[170.58,-45.747],[170.579,-45.749]],[[170.52,-45.894],[170.528,-45.893],[170.528,-45.892],[170.522,-45.891],[170.52,-45.894]],[[170.354,-43.093],[170.324,-43.106],[170.381,-43.093],[170.37,-43.107],[170.389,-43.11],[170.385,-43.088],[170.354,-43.093]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[166.962,-45.148],[166.971,-45.166],[166.949,-45.203],[166.998,-45.3],[166.947,-45.294],[166.869,-45.241],[166.962,-45.148]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[174.381,-41.088],[174.392,-41.118],[174.37,-41.159],[174.371,-41.197],[174.28,-41.209],[174.247,-41.222],[174.254,-41.237],[174.231,-41.236],[174.229,-41.222],[174.161,-41.242],[174.195,-41.209],[174.233,-41.217],[174.227,-41.203],[174.255,-41.204],[174.258,-41.182],[174.288,-41.183],[174.303,-41.163],[174.321,-41.161],[174.312,-41.177],[174.341,-41.177],[174.333,-41.168],[174.365,-41.156],[174.375,-41.125],[174.339,-41.147],[174.325,-41.131],[174.288,-41.141],[174.316,-41.118],[174.331,-41.13],[174.358,-41.118],[174.381,-41.088]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[173.956,-40.693],[173.968,-40.708],[173.962,-40.758],[173.939,-40.787],[173.957,-40.796],[173.908,-40.845],[173.912,-40.869],[173.901,-40.879],[173.896,-40.878],[173.907,-40.862],[173.89,-40.858],[173.834,-40.919],[173.791,-40.941],[173.77,-40.942],[173.798,-40.89],[173.784,-40.882],[173.78,-40.89],[173.773,-40.896],[173.77,-40.896],[173.782,-40.834],[173.792,-40.858],[173.845,-40.863],[173.836,-40.846],[173.85,-40.837],[173.834,-40.843],[173.829,-40.856],[173.81,-40.849],[173.808,-40.815],[173.794,-40.815],[173.834,-40.771],[173.828,-40.755],[173.84,-40.769],[173.865,-40.731],[173.884,-40.736],[173.861,-40.768],[173.874,-40.78],[173.866,-40.807],[173.894,-40.778],[173.906,-40.804],[173.911,-40.78],[173.927,-40.784],[173.933,-40.769],[173.884,-40.769],[173.938,-40.746],[173.956,-40.693]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[176.333,-40.698],[176.267,-40.785],[176.22,-40.886],[176.23,-40.904],[176.146,-40.957],[176.107,-41.015],[176.063,-41.13],[176.004,-41.171],[175.963,-41.245],[175.883,-41.274],[175.863,-41.317],[175.811,-41.361],[175.674,-41.414],[175.585,-41.487],[175.534,-41.496],[175.432,-41.572],[175.366,-41.572],[175.325,-41.606],[175.291,-41.614],[175.237,-41.608],[175.218,-41.54],[175.195,-41.527],[175.217,-41.431],[175.121,-41.389],[175.042,-41.374],[174.919,-41.437],[174.869,-41.41],[174.875,-41.384],[174.848,-41.359],[174.912,-41.259],[174.899,-41.259],[174.901,-41.237],[174.886,-41.231],[174.844,-41.229],[174.786,-41.265],[174.779,-41.288],[174.804,-41.286],[174.803,-41.316],[174.826,-41.284],[174.834,-41.289],[174.839,-41.328],[174.821,-41.345],[174.799,-41.329],[174.792,-41.347],[174.715,-41.362],[174.66,-41.341],[174.616,-41.292],[174.644,-41.239],[174.664,-41.247],[174.714,-41.219],[174.74,-41.172],[174.805,-41.111],[174.85,-41.089],[174.863,-41.103],[174.837,-41.125],[174.859,-41.116],[174.869,-41.104],[174.867,-41.087],[174.839,-41.064],[174.846,-41.05],[174.948,-40.99],[174.983,-40.885],[175.063,-40.824],[175.16,-40.663],[175.214,-40.481],[175.229,-40.369],[175.191,-40.158],[175.144,-40.083],[175.069,-40.007],[174.928,-39.899],[174.807,-39.859],[174.717,-39.867],[174.649,-39.835],[174.559,-39.817],[174.418,-39.732],[174.353,-39.659],[174.298,-39.627],[174.202,-39.588],[173.987,-39.554],[173.911,-39.519],[173.793,-39.413],[173.751,-39.279],[173.792,-39.193],[173.846,-39.154],[173.978,-39.1],[174.029,-39.054],[174.089,-39.051],[174.2,-38.989],[174.407,-38.983],[174.593,-38.817],[174.646,-38.456],[174.635,-38.387],[174.657,-38.383],[174.716,-38.306],[174.714,-38.202],[174.681,-38.11],[174.734,-38.124],[174.775,-38.088],[174.762,-38.12],[174.779,-38.109],[174.778,-38.136],[174.805,-38.119],[174.807,-38.143],[174.813,-38.138],[174.819,-38.136],[174.823,-38.134],[174.824,-38.134],[174.815,-38.145],[174.828,-38.142],[174.829,-38.158],[174.835,-38.133],[174.849,-38.13],[174.85,-38.139],[174.855,-38.142],[174.851,-38.151],[174.854,-38.155],[174.858,-38.14],[174.843,-38.117],[174.818,-38.129],[174.827,-38.108],[174.848,-38.102],[174.847,-38.117],[174.855,-38.119],[174.859,-38.099],[174.863,-38.121],[174.875,-38.127],[174.893,-38.12],[174.894,-38.107],[174.875,-38.115],[174.869,-38.095],[174.921,-38.092],[174.903,-38.084],[174.912,-38.082],[174.917,-38.075],[174.876,-38.078],[174.9,-38.075],[174.909,-38.066],[174.895,-38.064],[174.911,-38.055],[174.908,-38.05],[174.89,-38.065],[174.888,-38.047],[174.86,-38.056],[174.859,-38.037],[174.847,-38.062],[174.842,-38.04],[174.811,-38.079],[174.778,-38.083],[174.79,-38.027],[174.821,-38.006],[174.849,-38.025],[174.861,-37.99],[174.873,-37.998],[174.873,-37.969],[174.896,-37.963],[174.851,-37.952],[174.851,-37.932],[174.814,-37.965],[174.834,-37.99],[174.796,-38.015],[174.758,-37.859],[174.777,-37.831],[174.844,-37.804],[174.865,-37.801],[174.862,-37.805],[174.85,-37.807],[174.845,-37.811],[174.861,-37.807],[174.87,-37.832],[174.872,-37.796],[174.902,-37.818],[174.899,-37.805],[174.929,-37.808],[174.919,-37.796],[174.929,-37.801],[174.939,-37.789],[174.946,-37.809],[174.947,-37.789],[174.973,-37.805],[174.974,-37.797],[174.951,-37.779],[174.927,-37.796],[174.913,-37.786],[174.928,-37.771],[174.968,-37.774],[174.952,-37.766],[174.959,-37.753],[174.952,-37.724],[174.953,-37.75],[174.939,-37.752],[174.94,-37.739],[174.934,-37.732],[174.93,-37.755],[174.922,-37.742],[174.913,-37.743],[174.92,-37.753],[174.897,-37.764],[174.91,-37.766],[174.901,-37.791],[174.865,-37.774],[174.871,-37.789],[174.838,-37.796],[174.769,-37.561],[174.7,-37.417],[174.707,-37.376],[174.741,-37.386],[174.775,-37.345],[174.741,-37.342],[174.745,-37.367],[174.726,-37.38],[174.692,-37.357],[174.536,-37.054],[174.628,-37.036],[174.658,-37.044],[174.665,-37.068],[174.646,-37.073],[174.643,-37.078],[174.658,-37.082],[174.64,-37.085],[174.636,-37.087],[174.669,-37.106],[174.643,-37.121],[174.667,-37.118],[174.654,-37.145],[174.69,-37.147],[174.682,-37.157],[174.668,-37.161],[174.666,-37.163],[174.699,-37.151],[174.68,-37.175],[174.697,-37.17],[174.683,-37.188],[174.703,-37.186],[174.687,-37.203],[174.704,-37.196],[174.693,-37.216],[174.719,-37.214],[174.713,-37.197],[174.729,-37.19],[174.704,-37.157],[174.742,-37.162],[174.747,-37.188],[174.746,-37.17],[174.787,-37.163],[174.794,-37.174],[174.792,-37.163],[174.768,-37.157],[174.745,-37.166],[174.742,-37.147],[174.708,-37.152],[174.69,-37.137],[174.739,-37.126],[174.756,-37.113],[174.767,-37.096],[174.77,-37.092],[174.774,-37.089],[174.775,-37.089],[174.792,-37.092],[174.776,-37.105],[174.788,-37.108],[174.78,-37.137],[174.793,-37.138],[174.797,-37.096],[174.856,-37.056],[174.876,-37.073],[174.861,-37.089],[174.866,-37.087],[174.86,-37.1],[174.87,-37.112],[174.867,-37.086],[174.897,-37.061],[174.897,-37.086],[174.912,-37.098],[174.908,-37.101],[174.9,-37.115],[174.902,-37.116],[174.917,-37.094],[174.921,-37.1],[174.924,-37.101],[174.921,-37.091],[174.934,-37.099],[174.94,-37.095],[174.943,-37.1],[174.946,-37.094],[174.9,-37.081],[174.908,-37.061],[174.934,-37.066],[174.938,-37.06],[174.908,-37.043],[174.873,-37.055],[174.893,-37.042],[174.873,-37.037],[174.859,-37.052],[174.857,-37.017],[174.84,-37.018],[174.853,-37.025],[174.844,-37.03],[174.819,-37.003],[174.802,-37.012],[174.817,-37.018],[174.765,-37.019],[174.774,-37.011],[174.771,-37.005],[174.742,-36.993],[174.766,-36.967],[174.745,-36.973],[174.736,-36.962],[174.735,-36.964],[174.733,-36.962],[174.731,-36.963],[174.73,-36.962],[174.749,-36.96],[174.774,-36.966],[174.781,-36.955],[174.756,-36.942],[174.786,-36.935],[174.797,-36.95],[174.817,-36.943],[174.809,-36.952],[174.817,-36.958],[174.831,-36.942],[174.826,-36.929],[174.771,-36.924],[174.729,-36.939],[174.707,-36.926],[174.682,-36.934],[174.65,-36.965],[174.648,-36.952],[174.646,-36.949],[174.644,-36.948],[174.633,-36.979],[174.614,-36.966],[174.612,-37.02],[174.567,-36.999],[174.557,-37.022],[174.484,-37.049],[174.468,-36.946],[174.444,-36.912],[174.448,-36.89],[174.434,-36.89],[174.419,-36.811],[174.271,-36.608],[174.168,-36.493],[174.162,-36.464],[174.188,-36.434],[174.199,-36.43],[174.218,-36.429],[174.194,-36.439],[174.198,-36.475],[174.208,-36.439],[174.236,-36.428],[174.274,-36.497],[174.293,-36.504],[174.296,-36.53],[174.377,-36.565],[174.344,-36.584],[174.364,-36.592],[174.356,-36.601],[174.348,-36.599],[174.339,-36.605],[174.357,-36.602],[174.36,-36.599],[174.352,-36.625],[174.379,-36.627],[174.366,-36.601],[174.378,-36.591],[174.378,-36.623],[174.402,-36.63],[174.383,-36.632],[174.382,-36.635],[174.413,-36.631],[174.406,-36.644],[174.418,-36.651],[174.426,-36.639],[174.405,-36.625],[174.419,-36.62],[174.447,-36.656],[174.449,-36.656],[174.428,-36.623],[174.445,-36.595],[174.409,-36.584],[174.447,-36.554],[174.423,-36.536],[174.431,-36.511],[174.407,-36.478],[174.416,-36.441],[174.425,-36.438],[174.44,-36.428],[174.441,-36.424],[174.413,-36.411],[174.414,-36.405],[174.422,-36.402],[174.424,-36.4],[174.424,-36.397],[174.393,-36.392],[174.428,-36.372],[174.416,-36.355],[174.431,-36.353],[174.44,-36.33],[174.408,-36.35],[174.388,-36.335],[174.387,-36.352],[174.415,-36.375],[174.37,-36.38],[174.384,-36.403],[174.357,-36.411],[174.31,-36.377],[174.312,-36.365],[174.308,-36.362],[174.307,-36.357],[174.304,-36.354],[174.31,-36.389],[174.257,-36.381],[174.258,-36.326],[174.281,-36.306],[174.31,-36.328],[174.325,-36.32],[174.321,-36.331],[174.37,-36.324],[174.366,-36.311],[174.384,-36.326],[174.379,-36.312],[174.394,-36.32],[174.414,-36.28],[174.433,-36.303],[174.43,-36.271],[174.455,-36.255],[174.462,-36.265],[174.479,-36.264],[174.477,-36.278],[174.495,-36.273],[174.48,-36.266],[174.488,-36.254],[174.499,-36.256],[174.508,-36.251],[174.491,-36.253],[174.498,-36.24],[174.473,-36.259],[174.482,-36.228],[174.474,-36.229],[174.476,-36.225],[174.474,-36.222],[174.476,-36.22],[174.473,-36.218],[174.475,-36.212],[174.47,-36.212],[174.465,-36.26],[174.455,-36.249],[174.436,-36.263],[174.432,-36.262],[174.432,-36.26],[174.43,-36.259],[174.428,-36.255],[174.425,-36.253],[174.424,-36.253],[174.426,-36.271],[174.398,-36.288],[174.374,-36.276],[174.355,-36.309],[174.313,-36.314],[174.302,-36.29],[174.275,-36.286],[174.271,-36.262],[174.308,-36.244],[174.318,-36.273],[174.332,-36.263],[174.349,-36.267],[174.342,-36.282],[174.361,-36.281],[174.367,-36.272],[174.323,-36.249],[174.322,-36.234],[174.345,-36.235],[174.339,-36.226],[174.351,-36.228],[174.356,-36.227],[174.34,-36.219],[174.368,-36.204],[174.381,-36.21],[174.373,-36.181],[174.393,-36.186],[174.391,-36.175],[174.399,-36.175],[174.397,-36.172],[174.372,-36.169],[174.401,-36.157],[174.389,-36.148],[174.432,-36.157],[174.424,-36.138],[174.389,-36.145],[174.395,-36.137],[174.362,-36.116],[174.385,-36.155],[174.367,-36.16],[174.359,-36.205],[174.314,-36.226],[174.314,-36.201],[174.328,-36.196],[174.33,-36.193],[174.312,-36.195],[174.297,-36.212],[174.266,-36.185],[174.301,-36.183],[174.298,-36.178],[174.311,-36.18],[174.313,-36.172],[174.284,-36.178],[174.286,-36.171],[174.291,-36.171],[174.292,-36.166],[174.297,-36.164],[174.297,-36.163],[174.257,-36.177],[174.244,-36.166],[174.254,-36.184],[174.236,-36.171],[174.239,-36.138],[174.255,-36.118],[174.258,-36.123],[174.269,-36.121],[174.27,-36.117],[174.256,-36.112],[174.239,-36.122],[174.226,-36.16],[174.218,-36.121],[174.235,-36.116],[174.233,-36.106],[174.218,-36.115],[174.206,-36.137],[174.201,-36.125],[174.186,-36.123],[174.19,-36.142],[174.162,-36.141],[174.199,-36.151],[174.168,-36.158],[174.192,-36.16],[174.187,-36.175],[174.21,-36.159],[174.236,-36.182],[174.205,-36.176],[174.196,-36.188],[174.195,-36.196],[174.24,-36.185],[174.22,-36.197],[174.218,-36.208],[174.232,-36.215],[174.245,-36.196],[174.249,-36.212],[174.263,-36.194],[174.266,-36.219],[174.288,-36.215],[174.293,-36.238],[174.273,-36.234],[174.227,-36.263],[174.154,-36.214],[174.121,-36.168],[174.046,-36.17],[173.99,-36.124],[174.039,-36.19],[174.071,-36.202],[174.079,-36.236],[174.108,-36.25],[174.097,-36.269],[174.122,-36.258],[174.155,-36.276],[174.157,-36.291],[174.122,-36.301],[174.158,-36.301],[174.181,-36.336],[174.181,-36.365],[174.142,-36.39],[174.037,-36.391],[174.014,-36.295],[173.967,-36.209],[173.365,-35.547],[173.367,-35.534],[173.386,-35.535],[173.411,-35.48],[173.416,-35.489],[173.428,-35.486],[173.402,-35.472],[173.42,-35.469],[173.423,-35.42],[173.444,-35.45],[173.465,-35.454],[173.448,-35.438],[173.458,-35.444],[173.47,-35.442],[173.442,-35.431],[173.438,-35.413],[173.472,-35.429],[173.463,-35.407],[173.481,-35.407],[173.499,-35.457],[173.503,-35.446],[173.525,-35.45],[173.496,-35.422],[173.505,-35.391],[173.518,-35.423],[173.535,-35.427],[173.529,-35.439],[173.545,-35.433],[173.548,-35.41],[173.554,-35.42],[173.58,-35.421],[173.584,-35.424],[173.588,-35.437],[173.591,-35.441],[173.596,-35.442],[173.605,-35.437],[173.613,-35.437],[173.617,-35.436],[173.619,-35.437],[173.618,-35.435],[173.604,-35.437],[173.592,-35.441],[173.583,-35.421],[173.553,-35.408],[173.545,-35.41],[173.537,-35.425],[173.525,-35.406],[173.54,-35.379],[173.555,-35.385],[173.562,-35.355],[173.593,-35.372],[173.585,-35.36],[173.613,-35.344],[173.636,-35.314],[173.64,-35.312],[173.642,-35.306],[173.61,-35.305],[173.589,-35.33],[173.597,-35.338],[173.589,-35.345],[173.57,-35.337],[173.582,-35.326],[173.564,-35.301],[173.572,-35.328],[173.549,-35.338],[173.526,-35.275],[173.55,-35.26],[173.543,-35.261],[173.521,-35.275],[173.524,-35.314],[173.545,-35.335],[173.54,-35.375],[173.486,-35.386],[173.476,-35.363],[173.458,-35.374],[173.453,-35.361],[173.432,-35.358],[173.451,-35.377],[173.48,-35.383],[173.481,-35.4],[173.439,-35.404],[173.444,-35.394],[173.436,-35.39],[173.423,-35.408],[173.425,-35.391],[173.407,-35.383],[173.421,-35.394],[173.399,-35.41],[173.382,-35.389],[173.408,-35.43],[173.36,-35.42],[173.36,-35.433],[173.389,-35.434],[173.374,-35.474],[173.387,-35.486],[173.37,-35.496],[173.369,-35.523],[173.354,-35.521],[173.219,-35.382],[173.227,-35.378],[173.231,-35.358],[173.275,-35.338],[173.237,-35.348],[173.232,-35.339],[173.253,-35.334],[173.281,-35.277],[173.243,-35.322],[173.223,-35.317],[173.248,-35.328],[173.22,-35.335],[173.233,-35.355],[173.214,-35.378],[173.156,-35.301],[173.201,-35.296],[173.183,-35.287],[173.203,-35.281],[173.21,-35.261],[173.163,-35.292],[173.054,-35.191],[173.071,-35.164],[173.135,-35.177],[173.169,-35.136],[173.173,-35.059],[173.136,-34.969],[172.85,-34.628],[172.738,-34.533],[172.704,-34.524],[172.69,-34.491],[172.643,-34.477],[172.673,-34.46],[172.68,-34.42],[172.785,-34.454],[172.837,-34.444],[172.857,-34.414],[172.964,-34.426],[173.013,-34.393],[173.047,-34.411],[173.012,-34.428],[172.999,-34.516],[172.966,-34.521],[172.977,-34.499],[172.952,-34.501],[172.952,-34.489],[172.937,-34.506],[172.922,-34.502],[172.946,-34.475],[172.923,-34.487],[172.931,-34.471],[172.901,-34.465],[172.89,-34.479],[172.924,-34.49],[172.901,-34.496],[172.924,-34.516],[172.905,-34.533],[172.887,-34.51],[172.861,-34.509],[172.895,-34.531],[172.868,-34.543],[172.862,-34.54],[172.858,-34.541],[172.857,-34.54],[172.854,-34.54],[172.854,-34.539],[172.853,-34.539],[172.851,-34.539],[172.85,-34.539],[172.876,-34.554],[172.919,-34.552],[172.946,-34.527],[172.935,-34.554],[172.906,-34.561],[172.915,-34.571],[172.924,-34.56],[172.929,-34.572],[172.908,-34.579],[172.927,-34.577],[172.913,-34.587],[172.927,-34.588],[172.95,-34.551],[172.963,-34.558],[172.972,-34.574],[172.941,-34.585],[172.964,-34.588],[172.947,-34.594],[172.977,-34.621],[172.989,-34.572],[172.957,-34.533],[172.985,-34.528],[173.035,-34.671],[173.132,-34.763],[173.155,-34.766],[173.147,-34.78],[173.175,-34.803],[173.169,-34.825],[173.156,-34.823],[173.133,-34.807],[173.125,-34.777],[173.112,-34.777],[173.094,-34.761],[173.081,-34.758],[173.078,-34.759],[173.132,-34.832],[173.151,-34.822],[173.194,-34.868],[173.281,-34.893],[173.269,-34.922],[173.214,-34.934],[173.236,-34.938],[173.213,-34.968],[173.22,-34.995],[173.236,-34.995],[173.231,-35.019],[173.235,-35.009],[173.241,-35.024],[173.252,-35.021],[173.237,-35.008],[173.251,-34.993],[173.291,-35],[173.282,-35.013],[173.296,-35.018],[173.308,-34.993],[173.316,-35.01],[173.339,-34.954],[173.286,-34.862],[173.384,-34.84],[173.399,-34.784],[173.413,-34.797],[173.412,-34.833],[173.45,-34.825],[173.441,-34.836],[173.47,-34.849],[173.414,-34.881],[173.373,-34.882],[173.378,-34.934],[173.429,-34.984],[173.468,-34.994],[173.526,-34.98],[173.543,-35.011],[173.551,-35],[173.551,-35.017],[173.561,-35.013],[173.562,-34.986],[173.548,-34.973],[173.534,-34.984],[173.526,-34.951],[173.559,-34.914],[173.573,-34.944],[173.621,-34.939],[173.646,-34.967],[173.7,-34.952],[173.712,-34.994],[173.757,-35],[173.722,-35.006],[173.749,-35.014],[173.747,-35.025],[173.7,-35.055],[173.718,-35.06],[173.72,-35.084],[173.756,-35.074],[173.741,-35.067],[173.748,-35.038],[173.763,-35.054],[173.775,-35.051],[173.758,-35.035],[173.783,-35.038],[173.762,-35.007],[173.861,-34.99],[173.844,-34.999],[173.86,-35.019],[173.893,-35.01],[173.92,-35.027],[173.914,-35.039],[173.939,-35.053],[173.927,-35.064],[173.936,-35.089],[173.963,-35.119],[174.08,-35.117],[174.098,-35.151],[174.126,-35.156],[174.121,-35.172],[174.088,-35.171],[174.067,-35.194],[174.045,-35.156],[174.074,-35.158],[174.07,-35.146],[174.044,-35.144],[174.039,-35.168],[174.02,-35.158],[174.023,-35.142],[174.004,-35.138],[173.979,-35.153],[173.977,-35.175],[173.983,-35.159],[174.004,-35.157],[174.004,-35.172],[174.05,-35.193],[174.011,-35.188],[173.963,-35.217],[174.071,-35.211],[174.058,-35.228],[174.076,-35.238],[174.083,-35.272],[174.059,-35.262],[174.067,-35.271],[174.056,-35.273],[174.051,-35.278],[174.07,-35.285],[174.08,-35.273],[174.102,-35.308],[174.122,-35.312],[174.094,-35.333],[174.118,-35.331],[174.103,-35.339],[174.104,-35.362],[174.143,-35.367],[174.107,-35.345],[174.123,-35.345],[174.134,-35.315],[174.136,-35.341],[174.145,-35.328],[174.162,-35.338],[174.181,-35.331],[174.143,-35.321],[174.158,-35.313],[174.21,-35.322],[174.213,-35.341],[174.233,-35.325],[174.199,-35.31],[174.214,-35.305],[174.207,-35.296],[174.195,-35.312],[174.191,-35.295],[174.176,-35.305],[174.167,-35.291],[174.162,-35.305],[174.122,-35.308],[174.115,-35.283],[174.149,-35.288],[174.113,-35.258],[174.12,-35.242],[174.168,-35.277],[174.197,-35.28],[174.176,-35.272],[174.178,-35.263],[174.205,-35.284],[174.213,-35.282],[174.213,-35.253],[174.194,-35.257],[174.194,-35.254],[174.19,-35.252],[174.188,-35.248],[174.264,-35.261],[174.238,-35.244],[174.26,-35.236],[174.252,-35.222],[174.284,-35.227],[174.29,-35.202],[174.305,-35.2],[174.294,-35.186],[174.334,-35.172],[174.341,-35.191],[174.318,-35.195],[174.316,-35.219],[174.291,-35.234],[174.313,-35.237],[174.293,-35.25],[174.295,-35.254],[174.307,-35.247],[174.326,-35.25],[174.297,-35.256],[174.29,-35.275],[174.337,-35.325],[174.377,-35.319],[174.35,-35.339],[174.376,-35.35],[174.377,-35.377],[174.357,-35.373],[174.36,-35.355],[174.335,-35.347],[174.337,-35.335],[174.323,-35.341],[174.305,-35.32],[174.303,-35.33],[174.313,-35.347],[174.329,-35.345],[174.313,-35.357],[174.34,-35.364],[174.358,-35.416],[174.375,-35.42],[174.363,-35.437],[174.393,-35.43],[174.409,-35.444],[174.419,-35.424],[174.432,-35.428],[174.428,-35.456],[174.453,-35.468],[174.48,-35.514],[174.437,-35.505],[174.429,-35.518],[174.451,-35.526],[174.468,-35.512],[174.459,-35.531],[174.473,-35.556],[174.511,-35.556],[174.506,-35.567],[174.536,-35.581],[174.542,-35.612],[174.537,-35.614],[174.528,-35.609],[174.524,-35.611],[174.542,-35.62],[174.536,-35.64],[174.514,-35.627],[174.478,-35.643],[174.485,-35.635],[174.466,-35.644],[174.468,-35.639],[174.466,-35.639],[174.467,-35.638],[174.467,-35.636],[174.465,-35.635],[174.461,-35.64],[174.449,-35.633],[174.436,-35.635],[174.467,-35.653],[174.514,-35.63],[174.502,-35.649],[174.525,-35.714],[174.499,-35.713],[174.499,-35.732],[174.485,-35.731],[174.482,-35.736],[174.485,-35.745],[174.508,-35.731],[174.505,-35.721],[174.542,-35.711],[174.526,-35.726],[174.54,-35.737],[174.532,-35.747],[174.524,-35.746],[174.516,-35.751],[174.515,-35.753],[174.514,-35.755],[174.539,-35.753],[174.552,-35.734],[174.537,-35.726],[174.56,-35.716],[174.567,-35.717],[174.552,-35.728],[174.563,-35.745],[174.551,-35.746],[174.561,-35.763],[174.549,-35.787],[174.591,-35.854],[174.531,-35.862],[174.533,-35.835],[174.497,-35.828],[174.504,-35.811],[174.49,-35.788],[174.481,-35.793],[174.457,-35.793],[174.478,-35.772],[174.428,-35.781],[174.443,-35.796],[174.379,-35.757],[174.361,-35.776],[174.361,-35.739],[174.344,-35.731],[174.335,-35.738],[174.348,-35.737],[174.351,-35.758],[174.322,-35.761],[174.306,-35.785],[174.332,-35.778],[174.341,-35.792],[174.323,-35.81],[174.341,-35.821],[174.306,-35.837],[174.356,-35.844],[174.341,-35.837],[174.36,-35.834],[174.356,-35.813],[174.372,-35.806],[174.369,-35.835],[174.383,-35.814],[174.405,-35.831],[174.426,-35.827],[174.423,-35.838],[174.454,-35.818],[174.473,-35.839],[174.499,-35.838],[174.467,-35.883],[174.464,-35.95],[174.509,-36.03],[174.54,-36.049],[174.59,-36.048],[174.599,-36.082],[174.59,-36.082],[174.589,-36.085],[174.597,-36.109],[174.59,-36.118],[174.572,-36.095],[174.563,-36.095],[174.581,-36.124],[174.568,-36.141],[174.602,-36.114],[174.598,-36.083],[174.657,-36.178],[174.71,-36.23],[174.747,-36.258],[174.822,-36.277],[174.795,-36.303],[174.8,-36.321],[174.784,-36.32],[174.785,-36.305],[174.755,-36.314],[174.737,-36.333],[174.758,-36.32],[174.762,-36.357],[174.776,-36.361],[174.78,-36.319],[174.789,-36.351],[174.839,-36.37],[174.866,-36.364],[174.848,-36.378],[174.795,-36.378],[174.791,-36.39],[174.755,-36.382],[174.743,-36.397],[174.73,-36.386],[174.74,-36.37],[174.734,-36.373],[174.732,-36.36],[174.728,-36.36],[174.732,-36.367],[174.728,-36.379],[174.729,-36.367],[174.726,-36.381],[174.717,-36.388],[174.714,-36.374],[174.711,-36.373],[174.71,-36.37],[174.709,-36.369],[174.709,-36.37],[174.709,-36.391],[174.738,-36.399],[174.732,-36.424],[174.779,-36.437],[174.736,-36.504],[174.753,-36.464],[174.741,-36.462],[174.739,-36.459],[174.74,-36.453],[174.738,-36.452],[174.738,-36.472],[174.726,-36.488],[174.731,-36.433],[174.718,-36.433],[174.724,-36.425],[174.719,-36.416],[174.709,-36.431],[174.681,-36.418],[174.693,-36.426],[174.693,-36.432],[174.686,-36.434],[174.685,-36.436],[174.708,-36.439],[174.709,-36.447],[174.7,-36.444],[174.698,-36.446],[174.695,-36.446],[174.692,-36.446],[174.692,-36.447],[174.711,-36.452],[174.695,-36.465],[174.691,-36.48],[174.708,-36.486],[174.702,-36.495],[174.73,-36.516],[174.691,-36.574],[174.701,-36.594],[174.697,-36.6],[174.758,-36.628],[174.775,-36.607],[174.823,-36.593],[174.838,-36.593],[174.834,-36.619],[174.808,-36.608],[174.801,-36.628],[174.788,-36.618],[174.741,-36.648],[174.71,-36.615],[174.696,-36.613],[174.677,-36.62],[174.697,-36.63],[174.709,-36.622],[174.722,-36.654],[174.749,-36.664],[174.762,-36.696],[174.753,-36.732],[174.775,-36.788],[174.814,-36.829],[174.773,-36.829],[174.795,-36.818],[174.766,-36.822],[174.785,-36.807],[174.767,-36.79],[174.749,-36.827],[174.697,-36.823],[174.679,-36.79],[174.707,-36.792],[174.703,-36.771],[174.676,-36.787],[174.662,-36.772],[174.684,-36.763],[174.677,-36.751],[174.682,-36.751],[174.679,-36.744],[174.687,-36.737],[174.69,-36.728],[174.692,-36.728],[174.693,-36.728],[174.693,-36.723],[174.66,-36.771],[174.634,-36.772],[174.638,-36.752],[174.632,-36.77],[174.614,-36.773],[174.602,-36.766],[174.606,-36.762],[174.6,-36.76],[174.601,-36.756],[174.596,-36.754],[174.595,-36.768],[174.606,-36.773],[174.592,-36.788],[174.591,-36.794],[174.61,-36.774],[174.661,-36.774],[174.646,-36.783],[174.638,-36.791],[174.641,-36.792],[174.64,-36.793],[174.638,-36.796],[174.666,-36.785],[174.675,-36.796],[174.647,-36.804],[174.613,-36.856],[174.64,-36.846],[174.64,-36.855],[174.638,-36.859],[174.639,-36.862],[174.636,-36.864],[174.635,-36.871],[174.645,-36.854],[174.644,-36.843],[174.633,-36.839],[174.66,-36.831],[174.653,-36.886],[174.691,-36.912],[174.662,-36.861],[174.699,-36.871],[174.703,-36.851],[174.711,-36.861],[174.742,-36.835],[174.786,-36.84],[174.801,-36.853],[174.875,-36.847],[174.892,-36.872],[174.87,-36.878],[174.869,-36.902],[174.844,-36.906],[174.863,-36.926],[174.854,-36.929],[174.844,-36.936],[174.866,-36.933],[174.843,-36.956],[174.849,-36.957],[174.86,-36.946],[174.881,-36.955],[174.886,-36.95],[174.862,-36.945],[174.869,-36.927],[174.892,-36.929],[174.896,-36.918],[174.9,-36.921],[174.901,-36.918],[174.903,-36.919],[174.905,-36.914],[174.892,-36.909],[174.887,-36.926],[174.858,-36.916],[174.896,-36.893],[174.901,-36.846],[174.954,-36.902],[174.955,-36.91],[174.941,-36.915],[174.937,-36.92],[174.934,-36.926],[174.933,-36.929],[174.959,-36.914],[174.966,-36.948],[174.975,-36.935],[174.963,-36.914],[174.991,-36.91],[174.991,-36.926],[174.998,-36.924],[174.984,-36.881],[175,-36.876],[175.038,-36.874],[175.073,-36.905],[175.099,-36.9],[175.077,-36.915],[175.08,-36.958],[175.141,-36.927],[175.159,-36.951],[175.192,-36.93],[175.287,-36.995],[175.303,-37.054],[175.295,-37.123],[175.329,-37.198],[175.395,-37.229],[175.501,-37.194],[175.545,-37.159],[175.515,-37.102],[175.52,-37.034],[175.499,-36.973],[175.431,-36.902],[175.406,-36.854],[175.469,-36.853],[175.474,-36.838],[175.438,-36.845],[175.428,-36.833],[175.466,-36.828],[175.423,-36.82],[175.506,-36.794],[175.486,-36.78],[175.496,-36.765],[175.483,-36.754],[175.457,-36.769],[175.481,-36.734],[175.43,-36.717],[175.447,-36.66],[175.438,-36.626],[175.472,-36.622],[175.345,-36.554],[175.326,-36.49],[175.346,-36.47],[175.41,-36.471],[175.423,-36.512],[175.443,-36.503],[175.476,-36.535],[175.47,-36.51],[175.495,-36.511],[175.535,-36.543],[175.52,-36.555],[175.525,-36.597],[175.56,-36.598],[175.584,-36.627],[175.571,-36.645],[175.584,-36.664],[175.557,-36.665],[175.556,-36.684],[175.605,-36.682],[175.607,-36.71],[175.628,-36.718],[175.607,-36.757],[175.644,-36.767],[175.64,-36.744],[175.678,-36.743],[175.635,-36.726],[175.709,-36.727],[175.783,-36.692],[175.798,-36.718],[175.821,-36.72],[175.827,-36.74],[175.755,-36.757],[175.748,-36.791],[175.702,-36.807],[175.706,-36.839],[175.692,-36.845],[175.689,-36.84],[175.684,-36.842],[175.673,-36.854],[175.687,-36.848],[175.669,-36.881],[175.686,-36.877],[175.684,-36.897],[175.701,-36.891],[175.715,-36.906],[175.7,-36.888],[175.719,-36.873],[175.697,-36.864],[175.714,-36.827],[175.759,-36.837],[175.754,-36.853],[175.763,-36.865],[175.774,-36.846],[175.759,-36.846],[175.764,-36.821],[175.82,-36.841],[175.819,-36.883],[175.856,-36.923],[175.843,-36.964],[175.872,-37],[175.848,-37.003],[175.836,-37.048],[175.815,-37.056],[175.813,-37.06],[175.837,-37.052],[175.862,-37.006],[175.886,-37.029],[175.889,-37.113],[175.878,-37.105],[175.86,-37.126],[175.89,-37.113],[175.879,-37.15],[175.893,-37.196],[175.881,-37.202],[175.858,-37.165],[175.857,-37.207],[175.864,-37.211],[175.867,-37.197],[175.879,-37.199],[175.88,-37.231],[175.943,-37.345],[175.938,-37.396],[175.991,-37.465],[175.979,-37.469],[175.974,-37.451],[175.96,-37.434],[175.956,-37.434],[175.949,-37.44],[175.969,-37.45],[175.938,-37.465],[175.947,-37.483],[175.93,-37.497],[175.955,-37.497],[175.948,-37.485],[175.95,-37.485],[175.978,-37.515],[175.918,-37.534],[175.953,-37.554],[175.928,-37.559],[175.923,-37.579],[175.943,-37.569],[175.945,-37.596],[175.972,-37.574],[175.978,-37.589],[175.959,-37.599],[175.96,-37.604],[175.956,-37.607],[175.957,-37.612],[175.988,-37.615],[175.959,-37.632],[175.987,-37.627],[175.987,-37.646],[176.015,-37.624],[176.009,-37.652],[176.054,-37.626],[176.023,-37.667],[176.049,-37.655],[176.033,-37.683],[176.053,-37.68],[176.049,-37.66],[176.066,-37.671],[176.064,-37.657],[176.093,-37.663],[176.095,-37.687],[176.122,-37.683],[176.124,-37.66],[176.152,-37.665],[176.159,-37.667],[176.164,-37.671],[176.175,-37.658],[176.167,-37.722],[176.19,-37.707],[176.175,-37.724],[176.235,-37.712],[176.226,-37.704],[176.237,-37.696],[176.215,-37.686],[176.19,-37.707],[176.179,-37.689],[176.199,-37.694],[176.204,-37.678],[176.18,-37.669],[176.174,-37.625],[176.25,-37.68],[176.454,-37.755],[176.418,-37.749],[176.431,-37.763],[176.454,-37.757],[176.468,-37.741],[176.48,-37.76],[176.469,-37.774],[176.496,-37.778],[176.479,-37.755],[176.662,-37.855],[177.017,-37.938],[177.039,-37.964],[177.143,-37.985],[177.074,-37.978],[177.056,-37.996],[177.062,-38.003],[177.061,-38.013],[177.063,-38.011],[177.063,-38.014],[177.064,-38.015],[177.069,-37.997],[177.089,-37.997],[177.086,-38.017],[177.109,-38.002],[177.113,-38.011],[177.105,-38.015],[177.103,-38.025],[177.119,-38.018],[177.149,-38.044],[177.16,-38.04],[177.138,-38.021],[177.146,-38.005],[177.162,-38.007],[177.161,-37.99],[177.148,-37.996],[177.157,-37.987],[177.387,-37.985],[177.488,-37.95],[177.486,-37.935],[177.53,-37.92],[177.584,-37.867],[177.588,-37.838],[177.606,-37.838],[177.613,-37.812],[177.651,-37.805],[177.653,-37.786],[177.684,-37.76],[177.671,-37.739],[177.708,-37.723],[177.728,-37.68],[177.788,-37.681],[177.816,-37.658],[177.864,-37.657],[177.904,-37.605],[177.92,-37.62],[177.954,-37.615],[177.992,-37.574],[177.983,-37.536],[178.008,-37.553],[178.037,-37.542],[178.164,-37.553],[178.175,-37.534],[178.314,-37.556],[178.294,-37.584],[178.301,-37.596],[178.325,-37.591],[178.316,-37.602],[178.341,-37.622],[178.481,-37.64],[178.55,-37.687],[178.45,-37.813],[178.452,-37.833],[178.413,-37.859],[178.387,-37.919],[178.391,-37.961],[178.337,-38.009],[178.337,-38.037],[178.372,-38.05],[178.362,-38.069],[178.374,-38.094],[178.322,-38.122],[178.318,-38.139],[178.368,-38.176],[178.31,-38.233],[178.335,-38.283],[178.359,-38.289],[178.326,-38.305],[178.33,-38.352],[178.306,-38.363],[178.318,-38.383],[178.34,-38.379],[178.347,-38.416],[178.28,-38.475],[178.292,-38.529],[178.203,-38.587],[178.147,-38.652],[178.08,-38.678],[178.07,-38.708],[178.005,-38.671],[177.968,-38.684],[177.935,-38.72],[177.935,-38.751],[177.972,-38.758],[177.929,-38.787],[177.912,-38.828],[177.92,-38.867],[177.903,-38.888],[177.91,-38.913],[177.887,-39.032],[177.914,-39.085],[178.001,-39.102],[178,-39.114],[177.925,-39.169],[177.906,-39.226],[177.865,-39.265],[177.843,-39.185],[177.822,-39.16],[177.872,-39.086],[177.843,-39.059],[177.823,-39.077],[177.661,-39.051],[177.419,-39.063],[177.259,-39.101],[177.046,-39.194],[177.019,-39.261],[176.9,-39.367],[176.873,-39.456],[176.893,-39.486],[176.924,-39.473],[176.923,-39.554],[176.966,-39.623],[177.032,-39.65],[177.096,-39.643],[177.015,-39.732],[176.994,-39.798],[177.005,-39.841],[176.908,-39.982],[176.879,-40.05],[176.895,-40.077],[176.87,-40.098],[176.87,-40.13],[176.787,-40.218],[176.74,-40.227],[176.678,-40.266],[176.673,-40.322],[176.623,-40.427],[176.633,-40.453],[176.622,-40.491],[176.56,-40.496],[176.493,-40.531],[176.467,-40.575],[176.333,-40.698]],[[174.886,-41.089],[174.87,-41.104],[174.913,-41.103],[174.894,-41.087],[174.886,-41.089]],[[176.88,-39.479],[176.877,-39.488],[176.887,-39.489],[176.889,-39.482],[176.88,-39.479]],[[176.148,-37.686],[176.155,-37.695],[176.165,-37.675],[176.16,-37.671],[176.158,-37.671],[176.148,-37.686]],[[176.163,-37.71],[176.152,-37.714],[176.146,-37.726],[176.161,-37.729],[176.163,-37.71]],[[176.161,-37.671],[176.162,-37.672],[176.164,-37.671],[176.162,-37.67],[176.161,-37.671]],[[175.842,-36.998],[175.841,-37.004],[175.848,-37.004],[175.847,-36.998],[175.842,-36.998]],[[174.694,-36.888],[174.705,-36.873],[174.673,-36.87],[174.672,-36.877],[174.694,-36.888]],[[174.82,-36.979],[174.812,-36.986],[174.817,-36.993],[174.799,-36.98],[174.79,-36.989],[174.809,-37.006],[174.833,-36.997],[174.82,-36.979]],[[174.809,-36.864],[174.808,-36.855],[174.801,-36.857],[174.793,-36.849],[174.79,-36.848],[174.787,-36.848],[174.789,-36.864],[174.809,-36.864]],[[174.671,-36.592],[174.658,-36.598],[174.698,-36.599],[174.692,-36.591],[174.671,-36.592]],[[174.81,-36.87],[174.817,-36.875],[174.823,-36.872],[174.812,-36.863],[174.81,-36.87]],[[174.813,-36.861],[174.821,-36.866],[174.826,-36.865],[174.827,-36.865],[174.828,-36.865],[174.832,-36.865],[174.834,-36.865],[174.813,-36.861]],[[174.746,-36.808],[174.744,-36.81],[174.751,-36.815],[174.75,-36.811],[174.746,-36.808]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[174.943,-40.822],[174.954,-40.829],[174.918,-40.868],[174.869,-40.886],[174.92,-40.822],[174.943,-40.822]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[176.019,-37.494],[176.066,-37.55],[176.158,-37.639],[176.084,-37.594],[176.077,-37.602],[176.096,-37.622],[176.085,-37.625],[176.034,-37.601],[176.032,-37.57],[176.073,-37.581],[175.985,-37.499],[175.983,-37.475],[176.019,-37.494]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[174.918,-36.732],[174.934,-36.742],[174.928,-36.784],[174.912,-36.796],[174.897,-36.775],[174.89,-36.801],[174.839,-36.804],[174.828,-36.79],[174.838,-36.769],[174.897,-36.775],[174.918,-36.732]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[175.173,-36.739],[175.203,-36.766],[175.154,-36.785],[175.165,-36.825],[175.144,-36.848],[175.13,-36.837],[175.138,-36.83],[175.14,-36.824],[175.129,-36.823],[175.127,-36.848],[175.111,-36.845],[175.109,-36.815],[175.097,-36.841],[175.063,-36.832],[175.068,-36.818],[175.033,-36.818],[175.071,-36.802],[175.041,-36.805],[175.048,-36.791],[175.022,-36.813],[175.027,-36.798],[175.009,-36.79],[174.988,-36.812],[174.982,-36.783],[174.994,-36.769],[175.015,-36.769],[175.017,-36.785],[175.06,-36.765],[175.063,-36.783],[175.087,-36.788],[175.106,-36.783],[175.106,-36.764],[175.147,-36.765],[175.173,-36.739]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[175.789,-36.58],[175.79,-36.605],[175.827,-36.617],[175.834,-36.637],[175.776,-36.638],[175.787,-36.609],[175.751,-36.587],[175.789,-36.58]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[174.84,-36.392],[174.877,-36.416],[174.877,-36.45],[174.836,-36.45],[174.841,-36.44],[174.816,-36.431],[174.855,-36.426],[174.819,-36.418],[174.84,-36.392]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[175.397,-36.05],[175.413,-36.062],[175.407,-36.092],[175.422,-36.086],[175.425,-36.107],[175.44,-36.112],[175.424,-36.118],[175.43,-36.143],[175.413,-36.133],[175.411,-36.147],[175.425,-36.148],[175.435,-36.141],[175.505,-36.174],[175.48,-36.201],[175.478,-36.245],[175.543,-36.295],[175.551,-36.314],[175.529,-36.348],[175.474,-36.332],[175.494,-36.323],[175.487,-36.301],[175.433,-36.309],[175.438,-36.259],[175.401,-36.268],[175.397,-36.236],[175.386,-36.256],[175.35,-36.229],[175.314,-36.226],[175.308,-36.186],[175.318,-36.199],[175.325,-36.189],[175.336,-36.214],[175.349,-36.216],[175.339,-36.204],[175.36,-36.209],[175.346,-36.186],[175.37,-36.182],[175.351,-36.176],[175.362,-36.162],[175.339,-36.159],[175.354,-36.15],[175.317,-36.148],[175.311,-36.129],[175.367,-36.128],[175.377,-36.117],[175.349,-36.109],[175.339,-36.073],[175.397,-36.05]]]}},{type:"Feature",properties:{REGC2018_V:"01",REGC2018_1:"Northland Region"},geometry:{type:"Polygon",coordinates:[[[175.091,-36.166],[175.114,-36.182],[175.106,-36.228],[175.05,-36.221],[175.051,-36.184],[175.091,-36.166]]]}}];var A1={type:K1,name:Q1,crs:W1,features:X1};function N1(n){let e,s,t;var r=n[1];function l(o){return{props:{language:o[0],$$slots:{default:[Z1]},$$scope:{ctx:o}}}}return r&&(e=new r(l(n))),{c(){e&&Q(e.$$.fragment),s=_1()},l(o){e&&Z(e.$$.fragment,o),s=_1()},m(o,c){e&&W(e,o,c),t1(o,s,c),t=!0},p(o,c){const d={};if(c&1&&(d.language=o[0]),c&8&&(d.$$scope={dirty:c,ctx:o}),r!==(r=o[1])){if(e){E1();const $=e;J($.$$.fragment,1,0,()=>{X($,1)}),k1()}r?(e=new r(l(o)),Q(e.$$.fragment),D(e.$$.fragment,1),W(e,s.parentNode,s)):e=null}else r&&e.$set(d)},i(o){t||(e&&D(e.$$.fragment,o),t=!0)},o(o){e&&J(e.$$.fragment,o),t=!1},d(o){o&&i(s),e&&X(e,o)}}}function Z1(n){let e;const s=n[2].default,t=O1(s,n,n[3],null);return{c(){t&&t.c()},l(r){t&&t.l(r)},m(r,l){t&&t.m(r,l),e=!0},p(r,l){t&&t.p&&(!e||l&8)&&F1(t,s,r,r[3],e?z1(s,r[3],l,null):G1(r[3]),null)},i(r){e||(D(t,r),e=!0)},o(r){J(t,r),e=!1},d(r){t&&t.d(r)}}}function x1(n){let e,s,t=n[1]&&N1(n);return{c(){t&&t.c(),e=_1()},l(r){t&&t.l(r),e=_1()},m(r,l){t&&t.m(r,l),t1(r,e,l),s=!0},p(r,[l]){r[1]?t?(t.p(r,l),l&2&&D(t,1)):(t=N1(r),t.c(),D(t,1),t.m(e.parentNode,e)):t&&(E1(),J(t,1,1,()=>{t=null}),k1())},i(r){s||(D(t),s=!0)},o(r){J(t),s=!1},d(r){t&&t.d(r),r&&i(e)}}}function e7(n,e,s){let{$$slots:t={},$$scope:r}=e,{language:l="svelte"}=e,o=!1;return L1(async()=>{s(1,o=(await Y1(()=>import("../chunks/Prism-95479663.js"),["chunks/Prism-95479663.js","chunks/vendor-c1202e36.js"])).default)}),n.$$set=c=>{"language"in c&&s(0,l=c.language),"$$scope"in c&&s(3,r=c.$$scope)},[l,o,t,r]}class g1 extends f1{constructor(e){super();p1(this,e,e7,x1,u1,{language:0})}}function t7(n){let e,s;return e=new d1({props:{geojson:A1}}),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function s7(n){let e=`${n[0]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';             
  //you can use any geojson. Here we are importing it from a file. 
  import coastline from './_geojson/coastline_simplified_3dp.geojson.json';
  ${n[1]}

<div class = "basemap" >
  <BaseMap>
    <FeatureLayer geojson={coastline} />
  </BaseMap>
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color:#f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function a7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g;return v=new h1({props:{$$slots:{default:[t7]},$$scope:{ctx:n}}}),y=new g1({props:{language:"svelte",$$slots:{default:[s7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Minimum viable"),r=k(),l=f("p"),o=C(`The map inherits the size of the container you put it in. 
    The bounding boxes for the layers are calculated and the projection is generated to fit automatically.`),c=k(),d=f("div"),$=f("div"),L=f("div"),Q(v.$$.fragment),U=k(),T=f("div"),Q(y.$$.fragment),this.h()},l(b){e=p(b,"DIV",{class:!0});var m=u(e);s=p(m,"H3",{});var S=u(s);t=P(S,"Minimum viable"),S.forEach(i),r=w(m),l=p(m,"P",{});var A=u(l);o=P(A,`The map inherits the size of the container you put it in. 
    The bounding boxes for the layers are calculated and the projection is generated to fit automatically.`),A.forEach(i),c=w(m),d=p(m,"DIV",{class:!0});var R=u(d);$=p(R,"DIV",{class:!0});var E=u($);L=p(E,"DIV",{class:!0});var V=u(L);Z(v.$$.fragment,V),V.forEach(i),E.forEach(i),U=w(R),T=p(R,"DIV",{class:!0});var O=u(T);Z(y.$$.fragment,O),O.forEach(i),R.forEach(i),m.forEach(i),this.h()},h(){_(L,"class","basemap svelte-o4psin"),_($,"class","output svelte-o4psin"),_(T,"class","code svelte-o4psin"),_(d,"class","row svelte-o4psin"),_(e,"class","example svelte-o4psin")},m(b,m){t1(b,e,m),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(e,c),a(e,d),a(d,$),a($,L),W(v,L,null),a(d,U),a(d,T),W(y,T,null),g=!0},p(b,[m]){const S={};m&4&&(S.$$scope={dirty:m,ctx:b}),v.$set(S);const A={};m&4&&(A.$$scope={dirty:m,ctx:b}),y.$set(A)},i(b){g||(D(v.$$.fragment,b),D(y.$$.fragment,b),g=!0)},o(b){J(v.$$.fragment,b),J(y.$$.fragment,b),g=!1},d(b){b&&i(e),X(v),X(y)}}}function r7(n){return["<script>","<\/script>"]}class o7 extends f1{constructor(e){super();p1(this,e,r7,a7,u1,{})}}function n7(n){let e,s,t;function r(o){n[3](o)}let l={styleAccessor:c7,geojson:b1,selectMode:3,idAccessor:f7};return n[0]!==void 0&&(l.selection=n[0]),e=new d1({props:l}),I1.push(()=>S1(e,"selection",r)),{c(){Q(e.$$.fragment)},l(o){Z(e.$$.fragment,o)},m(o,c){W(e,o,c),t=!0},p(o,c){const d={};!s&&c&1&&(s=!0,d.selection=o[0],R1(()=>s=!1)),e.$set(d)},i(o){t||(D(e.$$.fragment,o),t=!0)},o(o){J(e.$$.fragment,o),t=!1},d(o){X(e,o)}}}function l7(n){let e=`${n[1]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  let selection = [] 
${n[2]}  

<p>Select up to 3 areas</p>
<p>Current Selection: {JSON.stringify(selection)}</p>   
<div class="basemap">
  <BaseMap>
    <FeatureLayer
      styleAccessor={(feature, selected) => ({
        'fill': 'black',
        'stroke': 'black',
        'vector-effect': 'non-scaling-stroke',
        'fill-opacity': selected ? 0.5 : 0.1
      })}
      geojson={rto}
      selectMode={3}
      idAccessor={(feature) => feature.properties.RTO2017__1}
      bind:selection={selection}
    />
  </BaseMap>
</div>
                 
<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function i7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R,E,V,O,F=JSON.stringify(n[0])+"",M,j,G,z,x,Y,N,q;return z=new h1({props:{$$slots:{default:[n7]},$$scope:{ctx:n}}}),N=new g1({props:{$$slots:{default:[l7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Selectable areas"),r=k(),l=f("p"),o=C("Selecting an area adds it's uid to the selection array, which you can bind to."),c=k(),d=f("p"),$=C(`You can set what is used as the uid via the idAccessor function. This function should take a
      geojson feature and return a uid. It defaults to feature=>JSON.stringify(feature.properties).`),L=k(),v=f("p"),U=C("Set selectMode to the number of areas you wish to be able to select at one time. Oldest selections are discarded as new ones are added."),T=k(),y=f("p"),g=C(`Use a styleAccessor function to highlight the selected areas. The function should have as 
      its first argument the geojson feature, and as the second a boolean which indicates whether 
      it is selected or not. It should return a style object.`),b=k(),m=f("div"),S=f("div"),A=f("p"),R=C("Select up to 3 areas"),E=k(),V=f("p"),O=C("Current Selection: "),M=C(F),j=k(),G=f("div"),Q(z.$$.fragment),x=k(),Y=f("div"),Q(N.$$.fragment),this.h()},l(I){e=p(I,"DIV",{class:!0});var h=u(e);s=p(h,"H3",{});var B=u(s);t=P(B,"Selectable areas"),B.forEach(i),r=w(h),l=p(h,"P",{});var e1=u(l);o=P(e1,"Selecting an area adds it's uid to the selection array, which you can bind to."),e1.forEach(i),c=w(h),d=p(h,"P",{});var H=u(d);$=P(H,`You can set what is used as the uid via the idAccessor function. This function should take a
      geojson feature and return a uid. It defaults to feature=>JSON.stringify(feature.properties).`),H.forEach(i),L=w(h),v=p(h,"P",{});var K=u(v);U=P(K,"Set selectMode to the number of areas you wish to be able to select at one time. Oldest selections are discarded as new ones are added."),K.forEach(i),T=w(h),y=p(h,"P",{});var o1=u(y);g=P(o1,`Use a styleAccessor function to highlight the selected areas. The function should have as 
      its first argument the geojson feature, and as the second a boolean which indicates whether 
      it is selected or not. It should return a style object.`),o1.forEach(i),b=w(h),m=p(h,"DIV",{class:!0});var s1=u(m);S=p(s1,"DIV",{class:!0});var a1=u(S);A=p(a1,"P",{});var c1=u(A);R=P(c1,"Select up to 3 areas"),c1.forEach(i),E=w(a1),V=p(a1,"P",{});var i1=u(V);O=P(i1,"Current Selection: "),M=P(i1,F),i1.forEach(i),j=w(a1),G=p(a1,"DIV",{class:!0});var l1=u(G);Z(z.$$.fragment,l1),l1.forEach(i),a1.forEach(i),x=w(s1),Y=p(s1,"DIV",{class:!0});var r1=u(Y);Z(N.$$.fragment,r1),r1.forEach(i),s1.forEach(i),h.forEach(i),this.h()},h(){_(G,"class","basemap svelte-11r30az"),_(S,"class","output svelte-11r30az"),_(Y,"class","code svelte-11r30az"),_(m,"class","row svelte-11r30az"),_(e,"class","example svelte-11r30az")},m(I,h){t1(I,e,h),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(e,c),a(e,d),a(d,$),a(e,L),a(e,v),a(v,U),a(e,T),a(e,y),a(y,g),a(e,b),a(e,m),a(m,S),a(S,A),a(A,R),a(S,E),a(S,V),a(V,O),a(V,M),a(S,j),a(S,G),W(z,G,null),a(m,x),a(m,Y),W(N,Y,null),q=!0},p(I,[h]){(!q||h&1)&&F!==(F=JSON.stringify(I[0])+"")&&w1(M,F);const B={};h&33&&(B.$$scope={dirty:h,ctx:I}),z.$set(B);const e1={};h&32&&(e1.$$scope={dirty:h,ctx:I}),N.$set(e1)},i(I){q||(D(z.$$.fragment,I),D(N.$$.fragment,I),q=!0)},o(I){J(z.$$.fragment,I),J(N.$$.fragment,I),q=!1},d(I){I&&i(e),X(z),X(N)}}}const c7=(n,e)=>({fill:"black",stroke:"black","vector-effect":"non-scaling-stroke","fill-opacity":e?.5:.1}),f7=n=>n.properties.RTO2017__1;function p7(n,e,s){const t="<script>",r="<\/script>";let l;j1().domain([5,15]);function o(c){l=c,s(0,l)}return[l,t,r,o]}class u7 extends f1{constructor(e){super();p1(this,e,p7,i7,u1,{})}}function d7(n){let e,s;return e=new d1({props:{geojson:b1}}),e.$on("click",n[3]),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function h7(n){let e,s;return{c(){e=f("p"),s=C("Click on the map!")},l(t){e=p(t,"P",{});var r=u(e);s=P(r,"Click on the map!"),r.forEach(i)},m(t,r){t1(t,e,r),a(e,s)},p:n1,d(t){t&&i(e)}}}function g7(n){let e,s,t,r,l=JSON.stringify(n[0].properties,void 0,2)+"",o;return{c(){e=f("p"),s=C("The last thing you clicked was:"),t=k(),r=f("pre"),o=C(l),this.h()},l(c){e=p(c,"P",{});var d=u(e);s=P(d,"The last thing you clicked was:"),d.forEach(i),t=w(c),r=p(c,"PRE",{class:!0});var $=u(r);o=P($,l),$.forEach(i),this.h()},h(){_(r,"class","svelte-i0lhzt")},m(c,d){t1(c,e,d),a(e,s),t1(c,t,d),t1(c,r,d),a(r,o)},p(c,d){d&1&&l!==(l=JSON.stringify(c[0].properties,void 0,2)+"")&&w1(o,l)},d(c){c&&i(e),c&&i(t),c&&i(r)}}}function m7(n){let e=`${n[1]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  let clicked  
${n[2]}  

<div class="basemap">
  <BaseMap>
    <FeatureLayer
      geojson={rto}
      on:click={(e) => (clicked = e.detail.feature)}
    />
  </BaseMap>
</div>
<div>
  {#if clicked}
    <p>The last thing you clicked was:</p>
    <pre>{JSON.stringify(clicked.properties,undefined,2)}</pre>
  {:else}
    <p>Click on the map!</p>
  {/if}
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function $7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m;v=new h1({props:{$$slots:{default:[d7]},$$scope:{ctx:n}}});function S(E,V){return E[0]?g7:h7}let A=S(n),R=A(n);return b=new g1({props:{language:"svelte",$$slots:{default:[m7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Clickable areas"),r=k(),l=f("p"),o=C("Clicking on an area dispatches a click event. e.detail contains the geojson feature object."),c=k(),d=f("div"),$=f("div"),L=f("div"),Q(v.$$.fragment),U=k(),T=f("div"),R.c(),y=k(),g=f("div"),Q(b.$$.fragment),this.h()},l(E){e=p(E,"DIV",{class:!0});var V=u(e);s=p(V,"H3",{});var O=u(s);t=P(O,"Clickable areas"),O.forEach(i),r=w(V),l=p(V,"P",{});var F=u(l);o=P(F,"Clicking on an area dispatches a click event. e.detail contains the geojson feature object."),F.forEach(i),c=w(V),d=p(V,"DIV",{class:!0});var M=u(d);$=p(M,"DIV",{class:!0});var j=u($);L=p(j,"DIV",{class:!0});var G=u(L);Z(v.$$.fragment,G),G.forEach(i),U=w(j),T=p(j,"DIV",{});var z=u(T);R.l(z),z.forEach(i),j.forEach(i),y=w(M),g=p(M,"DIV",{class:!0});var x=u(g);Z(b.$$.fragment,x),x.forEach(i),M.forEach(i),V.forEach(i),this.h()},h(){_(L,"class","basemap svelte-i0lhzt"),_($,"class","output svelte-i0lhzt"),_(g,"class","code svelte-i0lhzt"),_(d,"class","row svelte-i0lhzt"),_(e,"class","example svelte-i0lhzt")},m(E,V){t1(E,e,V),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(e,c),a(e,d),a(d,$),a($,L),W(v,L,null),a($,U),a($,T),R.m(T,null),a(d,y),a(d,g),W(b,g,null),m=!0},p(E,[V]){const O={};V&17&&(O.$$scope={dirty:V,ctx:E}),v.$set(O),A===(A=S(E))&&R?R.p(E,V):(R.d(1),R=A(E),R&&(R.c(),R.m(T,null)));const F={};V&16&&(F.$$scope={dirty:V,ctx:E}),b.$set(F)},i(E){m||(D(v.$$.fragment,E),D(b.$$.fragment,E),m=!0)},o(E){J(v.$$.fragment,E),J(b.$$.fragment,E),m=!1},d(E){E&&i(e),X(v),R.d(),X(b)}}}function _7(n,e,s){const t="<script>",r="<\/script>";let l;const o=c=>s(0,l=c.detail.feature);return n.$$.update=()=>{n.$$.dirty&1&&console.log(l==null?void 0:l.properties.RTO2017__1)},[l,t,r,o]}class v7 extends f1{constructor(e){super();p1(this,e,_7,$7,u1,{})}}function y7(n){let e,s;return e=new d1({props:{geojson:b1,styleAccessor:n[4]}}),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function b7(n){let e=`${n[0]}
    import { BaseMap, FeatureLayer } from 'svelte-geo';
    import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
    import { scaleLinear } from 'd3-scale';
    let linearScale = scaleLinear().domain([5, 15]);
  ${n[1]}  
  <div class="basemap">
    <BaseMap background = {'#fbf9e4'}>
      <FeatureLayer
        geojson={rto}
        styleAccessor={(feature) => ({
          'fill': 'tomato',
          'fill-opacity': linearScale(feature.properties.RTO2017__1.length),
          'stroke': 'tomato',
          'vector-effect': 'non-scaling-stroke'
        })}
      />
    </BaseMap>
  </div>  

  <style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function E7(n){let e,s;return e=new d1({props:{geojson:b1,styleAccessor:n[5]}}),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function k7(n){let e=`${n[0]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  import { scaleOrdinal } from 'd3-scale';
  let ordinalScale = scaleOrdinal()
    .range(['lime','tomato','peachpuff','olive','papayawhip','plum','wheat','orange','salmon','honeydew','lightsalmon','lemonchiffon','blanchedalmond','chocolate']);  
${n[1]}  

<div class="basemap">
  <BaseMap>
    <FeatureLayer
      geojson={rto}
      styleAccessor={(feature) => ({
        "fill": ordinalScale(feature.properties.RTO2017__1[0]),
        "stroke": 'olive',
        "vector-effect": 'non-scaling-stroke'
      })}
    />
  </BaseMap>
</div>

<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function w7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R,E,V,O,F,M,j,G,z,x,Y,N,q;return m=new h1({props:{background:"#fbf9e4",$$slots:{default:[y7]},$$scope:{ctx:n}}}),R=new g1({props:{language:"svelte",$$slots:{default:[b7]},$$scope:{ctx:n}}}),z=new h1({props:{$$slots:{default:[E7]},$$scope:{ctx:n}}}),N=new g1({props:{language:"svelte",$$slots:{default:[k7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Color and Style"),r=k(),l=f("p"),o=C(`Apply styles to areas based on feature information by supplying a styleAccessor function. The function takes
      a feature and it's selection status, and returns a style object.`),c=k(),d=f("p"),$=C("Setting background on the BaseMap component to any valid html color sets the background-color style of the .svg. "),L=f("p"),v=f("p"),U=C(`Areas are styled using a d3-scale linear scale, to change the fill-opacity acccording to the
      length of their names (feature.properties.RTO2017__1). This is one method of creating a choropleth.`),T=k(),y=f("div"),g=f("div"),b=f("div"),Q(m.$$.fragment),S=k(),A=f("div"),Q(R.$$.fragment),E=k(),V=f("p"),O=C("Areas are styled using a d3-scale ordinal scale, acccording to the first letter of their name."),F=k(),M=f("div"),j=f("div"),G=f("div"),Q(z.$$.fragment),x=k(),Y=f("div"),Q(N.$$.fragment),this.h()},l(I){e=p(I,"DIV",{class:!0});var h=u(e);s=p(h,"H3",{});var B=u(s);t=P(B,"Color and Style"),B.forEach(i),r=w(h),l=p(h,"P",{});var e1=u(l);o=P(e1,`Apply styles to areas based on feature information by supplying a styleAccessor function. The function takes
      a feature and it's selection status, and returns a style object.`),e1.forEach(i),c=w(h),d=p(h,"P",{});var H=u(d);$=P(H,"Setting background on the BaseMap component to any valid html color sets the background-color style of the .svg. "),H.forEach(i),L=p(h,"P",{});var K=u(L);K.forEach(i),v=p(h,"P",{});var o1=u(v);U=P(o1,`Areas are styled using a d3-scale linear scale, to change the fill-opacity acccording to the
      length of their names (feature.properties.RTO2017__1). This is one method of creating a choropleth.`),o1.forEach(i),T=w(h),y=p(h,"DIV",{class:!0});var s1=u(y);g=p(s1,"DIV",{class:!0});var a1=u(g);b=p(a1,"DIV",{class:!0});var c1=u(b);Z(m.$$.fragment,c1),c1.forEach(i),a1.forEach(i),S=w(s1),A=p(s1,"DIV",{class:!0});var i1=u(A);Z(R.$$.fragment,i1),i1.forEach(i),s1.forEach(i),E=w(h),V=p(h,"P",{});var l1=u(V);O=P(l1,"Areas are styled using a d3-scale ordinal scale, acccording to the first letter of their name."),l1.forEach(i),F=w(h),M=p(h,"DIV",{class:!0});var r1=u(M);j=p(r1,"DIV",{class:!0});var y1=u(j);G=p(y1,"DIV",{class:!0});var m1=u(G);Z(z.$$.fragment,m1),m1.forEach(i),y1.forEach(i),x=w(r1),Y=p(r1,"DIV",{class:!0});var $1=u(Y);Z(N.$$.fragment,$1),$1.forEach(i),r1.forEach(i),h.forEach(i),this.h()},h(){_(b,"class","basemap svelte-o4psin"),_(g,"class","output svelte-o4psin"),_(A,"class","code svelte-o4psin"),_(y,"class","row svelte-o4psin"),_(G,"class","basemap svelte-o4psin"),_(j,"class","output svelte-o4psin"),_(Y,"class","code svelte-o4psin"),_(M,"class","row svelte-o4psin"),_(e,"class","example svelte-o4psin")},m(I,h){t1(I,e,h),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(e,c),a(e,d),a(d,$),a(e,L),a(e,v),a(v,U),a(e,T),a(e,y),a(y,g),a(g,b),W(m,b,null),a(y,S),a(y,A),W(R,A,null),a(e,E),a(e,V),a(V,O),a(e,F),a(e,M),a(M,j),a(j,G),W(z,G,null),a(M,x),a(M,Y),W(N,Y,null),q=!0},p(I,[h]){const B={};h&64&&(B.$$scope={dirty:h,ctx:I}),m.$set(B);const e1={};h&64&&(e1.$$scope={dirty:h,ctx:I}),R.$set(e1);const H={};h&64&&(H.$$scope={dirty:h,ctx:I}),z.$set(H);const K={};h&64&&(K.$$scope={dirty:h,ctx:I}),N.$set(K)},i(I){q||(D(m.$$.fragment,I),D(R.$$.fragment,I),D(z.$$.fragment,I),D(N.$$.fragment,I),q=!0)},o(I){J(m.$$.fragment,I),J(R.$$.fragment,I),J(z.$$.fragment,I),J(N.$$.fragment,I),q=!1},d(I){I&&i(e),X(m),X(R),X(z),X(N)}}}function j7(n){const e="<script>",s="<\/script>";let t=j1().domain([5,15]).range([0,1]),r=J1().range(["lime","tomato","peachpuff","olive","papayawhip","plum","wheat","orange","salmon","honeydew","lightsalmon","lemonchiffon","blanchedalmond","chocolate"]);return[e,s,t,r,c=>({fill:"tomato","fill-opacity":t(c.properties.RTO2017__1.length),stroke:"tomato","vector-effect":"non-scaling-stroke"}),c=>({fill:r(c.properties.RTO2017__1[0]),stroke:"olive","vector-effect":"non-scaling-stroke"})]}class I7 extends f1{constructor(e){super();p1(this,e,j7,w7,u1,{})}}function S7(n){let e,s;return e=new d1({props:{geojson:A1}}),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function R7(n){let e=`${n[1]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';       
  import { geoMercator, geoEqualEarth } from 'd3-geo';
  import coastline from './_geojson/coastline_simplified_3dp.geojson.json';
  let projection = geoEqualEarth
${n[2]}

<input type="radio" id="geoEqualEarth" name="projection" 
  on:click={()=>projection = geoEqualEarth} checked>
<label for="geoEqualEarth">geoEqualEarth</label> 
<input type="radio" id="geoMercator" name="projection" 
  on:click={()=>projection = geoMercator} >
<label for="geoMercator">geoMercator</label>

<div class = basemap>
  <BaseMap projection = { geoEqualEarth } >
    <FeatureLayer geojson={coastline} />
  </BaseMap>
<div>

  <style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function M7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R,E,V,O,F,M,j,G,z,x,Y,N,q,I;return G=new h1({props:{projection:n[0],$$slots:{default:[S7]},$$scope:{ctx:n}}}),Y=new g1({props:{language:"svelte",$$slots:{default:[R7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Projection"),r=k(),l=f("p"),o=C("The default projection is geoMercator, but you can use any "),c=f("a"),d=C("d3-geo"),$=C(" projection function that works for your geojson."),L=k(),v=f("p"),U=C("You may switch between projections on the fly."),T=k(),y=f("div"),g=f("div"),b=f("input"),m=k(),S=f("label"),A=C("geoEqualEarth"),R=k(),E=f("input"),V=k(),O=f("label"),F=C("geoMercator"),M=k(),j=f("div"),Q(G.$$.fragment),z=k(),x=f("div"),Q(Y.$$.fragment),this.h()},l(h){e=p(h,"DIV",{class:!0});var B=u(e);s=p(B,"H3",{});var e1=u(s);t=P(e1,"Projection"),e1.forEach(i),r=w(B),l=p(B,"P",{});var H=u(l);o=P(H,"The default projection is geoMercator, but you can use any "),c=p(H,"A",{href:!0});var K=u(c);d=P(K,"d3-geo"),K.forEach(i),$=P(H," projection function that works for your geojson."),H.forEach(i),L=w(B),v=p(B,"P",{});var o1=u(v);U=P(o1,"You may switch between projections on the fly."),o1.forEach(i),T=w(B),y=p(B,"DIV",{class:!0});var s1=u(y);g=p(s1,"DIV",{class:!0});var a1=u(g);b=p(a1,"INPUT",{type:!0,id:!0,name:!0}),m=w(a1),S=p(a1,"LABEL",{for:!0});var c1=u(S);A=P(c1,"geoEqualEarth"),c1.forEach(i),R=w(a1),E=p(a1,"INPUT",{type:!0,id:!0,name:!0}),V=w(a1),O=p(a1,"LABEL",{for:!0});var i1=u(O);F=P(i1,"geoMercator"),i1.forEach(i),M=w(a1),j=p(a1,"DIV",{class:!0});var l1=u(j);Z(G.$$.fragment,l1),l1.forEach(i),a1.forEach(i),z=w(s1),x=p(s1,"DIV",{class:!0});var r1=u(x);Z(Y.$$.fragment,r1),r1.forEach(i),s1.forEach(i),B.forEach(i),this.h()},h(){_(c,"href","https://github.com/d3/d3-geo"),_(b,"type","radio"),_(b,"id","geoEqualEarth"),_(b,"name","projection"),b.checked=!0,_(S,"for","geoEqualEarth"),_(E,"type","radio"),_(E,"id","geoMercator"),_(E,"name","projection"),_(O,"for","geoMercator"),_(j,"class","basemap svelte-o4psin"),_(g,"class","output svelte-o4psin"),_(x,"class","code svelte-o4psin"),_(y,"class","row svelte-o4psin"),_(e,"class","example svelte-o4psin")},m(h,B){t1(h,e,B),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(l,c),a(c,d),a(l,$),a(e,L),a(e,v),a(v,U),a(e,T),a(e,y),a(y,g),a(g,b),a(g,m),a(g,S),a(S,A),a(g,R),a(g,E),a(g,V),a(g,O),a(O,F),a(g,M),a(g,j),W(G,j,null),a(y,z),a(y,x),W(Y,x,null),N=!0,q||(I=[v1(b,"click",n[3]),v1(E,"click",n[4])],q=!0)},p(h,[B]){const e1={};B&1&&(e1.projection=h[0]),B&32&&(e1.$$scope={dirty:B,ctx:h}),G.$set(e1);const H={};B&32&&(H.$$scope={dirty:B,ctx:h}),Y.$set(H)},i(h){N||(D(G.$$.fragment,h),D(Y.$$.fragment,h),N=!0)},o(h){J(G.$$.fragment,h),J(Y.$$.fragment,h),N=!1},d(h){h&&i(e),X(G),X(Y),q=!1,M1(I)}}}function V7(n,e,s){const t="<script>",r="<\/script>";let l=C1;return[l,t,r,()=>s(0,l=C1),()=>s(0,l=q1)]}class C7 extends f1{constructor(e){super();p1(this,e,V7,M7,u1,{})}}function P7(n){let e,s,t;function r(o){n[7](o)}let l={geojson:b1,styleAccessor:N7,selectMode:n[2]?1/0:n[1],idAccessor:D7};return n[0]!==void 0&&(l.selection=n[0]),e=new d1({props:l}),I1.push(()=>S1(e,"selection",r)),{c(){Q(e.$$.fragment)},l(o){Z(e.$$.fragment,o)},m(o,c){W(e,o,c),t=!0},p(o,c){const d={};c&6&&(d.selectMode=o[2]?1/0:o[1]),!s&&c&1&&(s=!0,d.selection=o[0],R1(()=>s=!1)),e.$set(d)},i(o){t||(D(e.$$.fragment,o),t=!0)},o(o){J(e.$$.fragment,o),t=!1},d(o){X(e,o)}}}function T7(n){let e=`${n[3]}
  import { BaseMap, FeatureLayer } from 'svelte-geo';
  import rto from './_geojson/rto2017_simplified_3dp.geojson.json';
  
  let selectModeValue = 2
  let selectModeValueIsInfinite = false
  let selection = [] 
${n[4]}  

<label>
	Selecting up to
	<input type="number" 
    disabled={selectModeValueIsInfinite} 
    bind:value={selectModeValue} 
    min="0"/>
	areas.
</label>
<label>
	<input type="checkbox" bind:checked={nIsInfinite} />
	Infinite
</label> <br />
<p>Current Selection: {JSON.stringify(selection)}</p>   
<div class="basemap">
  <BaseMap>
    <FeatureLayer
      styleAccessor={(feature, selected) => ({
        'fill': 'red',
        'stroke': 'black',
        'vector-effect': 'non-scaling-stroke',
        'fill-opacity': selected ? 0.5 : 0.1
      })}
      geojson={rto}
			selectMode={selectModeValueIsInfinite ? Infinity : selectModeValue}
			idAccessor={(feature) => feature.properties.OBJECTID}
      bind:selection={selection}
    />
  </BaseMap>
</div>
                     
<style> 
  .basemap {
    border: black solid thin;
    background-color: #f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function A7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R=JSON.stringify(n[0])+"",E,V,O,F,M,j,G,z,x,Y;return F=new h1({props:{$$slots:{default:[P7]},$$scope:{ctx:n}}}),G=new g1({props:{$$slots:{default:[T7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("p"),t=C(`You can change the number of areas you are choosing to select programmatically. Changing to a
      smaller number discards the oldest selections first.`),r=k(),l=f("div"),o=f("div"),c=f("label"),d=C(`Selecting up to
          `),$=f("input"),L=C(`
          areas.`),v=k(),U=f("label"),T=f("input"),y=C(`
          Infinite`),g=k(),b=f("br"),m=k(),S=f("p"),A=C("Current Selection: "),E=C(R),V=k(),O=f("div"),Q(F.$$.fragment),M=k(),j=f("div"),Q(G.$$.fragment),this.h()},l(N){e=p(N,"DIV",{class:!0});var q=u(e);s=p(q,"P",{});var I=u(s);t=P(I,`You can change the number of areas you are choosing to select programmatically. Changing to a
      smaller number discards the oldest selections first.`),I.forEach(i),r=w(q),l=p(q,"DIV",{class:!0});var h=u(l);o=p(h,"DIV",{class:!0});var B=u(o);c=p(B,"LABEL",{});var e1=u(c);d=P(e1,`Selecting up to
          `),$=p(e1,"INPUT",{type:!0,min:!0,max:!0}),L=P(e1,`
          areas.`),e1.forEach(i),v=w(B),U=p(B,"LABEL",{});var H=u(U);T=p(H,"INPUT",{type:!0}),y=P(H,`
          Infinite`),H.forEach(i),g=w(B),b=p(B,"BR",{}),m=w(B),S=p(B,"P",{});var K=u(S);A=P(K,"Current Selection: "),E=P(K,R),K.forEach(i),V=w(B),O=p(B,"DIV",{class:!0});var o1=u(O);Z(F.$$.fragment,o1),o1.forEach(i),B.forEach(i),M=w(h),j=p(h,"DIV",{class:!0});var s1=u(j);Z(G.$$.fragment,s1),s1.forEach(i),h.forEach(i),q.forEach(i),this.h()},h(){_($,"type","number"),$.disabled=n[2],_($,"min","0"),_($,"max","30"),_(T,"type","checkbox"),_(O,"class","basemap svelte-hs5awr"),_(o,"class","output svelte-hs5awr"),_(j,"class","code svelte-hs5awr"),_(l,"class","row svelte-hs5awr"),_(e,"class","example svelte-hs5awr")},m(N,q){t1(N,e,q),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(o,c),a(c,d),a(c,$),P1($,n[1]),a(c,L),a(o,v),a(o,U),a(U,T),T.checked=n[2],a(U,y),a(o,g),a(o,b),a(o,m),a(o,S),a(S,A),a(S,E),a(o,V),a(o,O),W(F,O,null),a(l,M),a(l,j),W(G,j,null),z=!0,x||(Y=[v1($,"input",n[5]),v1(T,"change",n[6])],x=!0)},p(N,[q]){(!z||q&4)&&($.disabled=N[2]),q&2&&T1($.value)!==N[1]&&P1($,N[1]),q&4&&(T.checked=N[2]),(!z||q&1)&&R!==(R=JSON.stringify(N[0])+"")&&w1(E,R);const I={};q&263&&(I.$$scope={dirty:q,ctx:N}),F.$set(I);const h={};q&256&&(h.$$scope={dirty:q,ctx:N}),G.$set(h)},i(N){z||(D(F.$$.fragment,N),D(G.$$.fragment,N),z=!0)},o(N){J(F.$$.fragment,N),J(G.$$.fragment,N),z=!1},d(N){N&&i(e),X(F),X(G),x=!1,M1(Y)}}}const N7=(n,e)=>({fill:"red",stroke:"black","vector-effect":"non-scaling-stroke","fill-opacity":e?.9:.1}),D7=n=>n.properties.OBJECTID;function B7(n,e,s){const t="<script>",r="<\/script>";let l,o=2,c=!1;function d(){o=T1(this.value),s(1,o)}function $(){c=this.checked,s(2,c)}function L(v){l=v,s(0,l)}return[l,o,c,t,r,d,$,L]}class L7 extends f1{constructor(e){super();p1(this,e,B7,A7,u1,{})}}function D1(n){let e,s;return e=new d1({props:{geojson:H1,styleAccessor:n[6],selectMode:1/0,idAccessor:z7}}),{c(){Q(e.$$.fragment)},l(t){Z(e.$$.fragment,t)},m(t,r){W(e,t,r),s=!0},p:n1,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){J(e.$$.fragment,t),s=!1},d(t){X(e,t)}}}function B1(n){let e,s,t;function r(o){n[8](o)}let l={geojson:U1,styleAccessor:n[7],selectMode:1/0,idAccessor:J7};return n[2]!==void 0&&(l.selection=n[2]),e=new d1({props:l}),I1.push(()=>S1(e,"selection",r)),{c(){Q(e.$$.fragment)},l(o){Z(e.$$.fragment,o)},m(o,c){W(e,o,c),t=!0},p(o,c){const d={};!s&&c&4&&(s=!0,d.selection=o[2],R1(()=>s=!1)),e.$set(d)},i(o){t||(D(e.$$.fragment,o),t=!0)},o(o){J(e.$$.fragment,o),t=!1},d(o){X(e,o)}}}function O7(n){let e,s,t,r=n[0]&&D1(n),l=n[1]&&B1(n);return{c(){r&&r.c(),e=k(),l&&l.c(),s=_1()},l(o){r&&r.l(o),e=w(o),l&&l.l(o),s=_1()},m(o,c){r&&r.m(o,c),t1(o,e,c),l&&l.m(o,c),t1(o,s,c),t=!0},p(o,c){o[0]?r?(r.p(o,c),c&1&&D(r,1)):(r=D1(o),r.c(),D(r,1),r.m(e.parentNode,e)):r&&(E1(),J(r,1,1,()=>{r=null}),k1()),o[1]?l?(l.p(o,c),c&2&&D(l,1)):(l=B1(o),l.c(),D(l,1),l.m(s.parentNode,s)):l&&(E1(),J(l,1,1,()=>{l=null}),k1())},i(o){t||(D(r),D(l),t=!0)},o(o){J(r),J(l),t=!1},d(o){r&&r.d(o),o&&i(e),l&&l.d(o),o&&i(s)}}}function F7(n){let e=`${n[4]}
  import BaseMap from '$lib/BaseMap.svelte';
  import FeatureLayer from '$lib/FeatureLayer.svelte';
  import northisland from '../../_geojson/rto2017_ni_simplified_3dp.geojson.json';
  import southisland from '../../_geojson/rto2017_si_simplified_3dp.geojson.json';
  import { scaleLinear } from 'd3-scale';

  let linearscale = scaleLinear().domain([5, 15]);

  let showNorth = true
  let showSouth = false
  let southSelection = []
${n[5]}

<div class="basemap">
  <BaseMap>
    {#if showNorth} 
      <FeatureLayer
        geojson={northisland}
        styleAccessor={(feature, selected) => ({
          'fill': selected ? 'blue' : 'grey',
          'fill-opacity': linearscale(feature.properties.RTO2017__1.length),
          'stroke': selected ? 'blue' : 'grey',
          'stroke-width': selected ? 2 : 1,
          'vector-effect': 'non-scaling-stroke'
        })}
        selectMode={Infinity}
        idAccessor={(feature) => feature.properties.RTO2017__1}
      />
    {/if}
    {#if showSouth}   
      <FeatureLayer
        geojson={southisland}
        styleAccessor={(feature, selected) => ({
          'fill': selected ? 'green' : 'grey',
          'fill-opacity': linearscale(feature.properties.RTO2017__1.length),
          'stroke': selected ? 'green' : 'grey',
          'stroke-width': selected ? 2 : 1,
          'vector-effect': 'non-scaling-stroke'
        })}
        selectMode={Infinity}
        idAccessor={(feature) => feature.properties.RTO2017__1}
        bind:selection = {southSelection}
      />
    {/if}
  </BaseMap>
</div>

<label>
  Show the North Island
  <input type="checkbox" bind:checked={showNorth} />
</label><br>
<label>
  Show the South Island
  <input type="checkbox" bind:checked={showSouth} />
</label>

<style> 
  .basemap {
    border: black solid thin;
    background-color:#f9f9ff;
    width: 400px;
    height: 400px;
    margin: 20px;
  }
</style>`,s;return{c(){s=C(e)},l(t){s=P(t,e)},m(t,r){t1(t,s,r)},p:n1,d(t){t&&i(s)}}}function G7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R,E,V,O,F,M,j,G,z,x,Y,N,q,I,h,B,e1;return R=new h1({props:{$$slots:{default:[O7]},$$scope:{ctx:n}}}),I=new g1({props:{language:"svelte",$$slots:{default:[F7]},$$scope:{ctx:n}}}),{c(){e=f("div"),s=f("h3"),t=C("Multiple Layers"),r=k(),l=f("p"),o=C("You may add multiple layers. The projection bounding box is set to the aggregate of the layer bounding boxes."),c=k(),d=f("p"),$=C("In this example, we have separate layers for the North and South Islands. They are being created and destroyed when toggled with the checkboxes below the map."),L=k(),v=f("p"),U=C(`The current selection will be lost when the layer is destroyed, but you can make it persist by binding it to a variable. 
      Here, the selection for the South Island layer is bound, the North Island one is not.`),T=k(),y=f("p"),g=C("Try selecting a few areas on each island, then turning the layers on and off."),b=k(),m=f("div"),S=f("div"),A=f("div"),Q(R.$$.fragment),E=k(),V=f("label"),O=C(`Show the North Island
          `),F=f("input"),M=k(),j=f("br"),G=k(),z=f("label"),x=C(`Show the South Island
          `),Y=f("input"),N=k(),q=f("div"),Q(I.$$.fragment),this.h()},l(H){e=p(H,"DIV",{class:!0});var K=u(e);s=p(K,"H3",{});var o1=u(s);t=P(o1,"Multiple Layers"),o1.forEach(i),r=w(K),l=p(K,"P",{});var s1=u(l);o=P(s1,"You may add multiple layers. The projection bounding box is set to the aggregate of the layer bounding boxes."),s1.forEach(i),c=w(K),d=p(K,"P",{});var a1=u(d);$=P(a1,"In this example, we have separate layers for the North and South Islands. They are being created and destroyed when toggled with the checkboxes below the map."),a1.forEach(i),L=w(K),v=p(K,"P",{});var c1=u(v);U=P(c1,`The current selection will be lost when the layer is destroyed, but you can make it persist by binding it to a variable. 
      Here, the selection for the South Island layer is bound, the North Island one is not.`),c1.forEach(i),T=w(K),y=p(K,"P",{});var i1=u(y);g=P(i1,"Try selecting a few areas on each island, then turning the layers on and off."),i1.forEach(i),b=w(K),m=p(K,"DIV",{class:!0});var l1=u(m);S=p(l1,"DIV",{class:!0});var r1=u(S);A=p(r1,"DIV",{class:!0});var y1=u(A);Z(R.$$.fragment,y1),y1.forEach(i),E=w(r1),V=p(r1,"LABEL",{});var m1=u(V);O=P(m1,`Show the North Island
          `),F=p(m1,"INPUT",{type:!0}),M=w(m1),m1.forEach(i),j=p(r1,"BR",{}),G=w(r1),z=p(r1,"LABEL",{});var $1=u(z);x=P($1,`Show the South Island
          `),Y=p($1,"INPUT",{type:!0}),$1.forEach(i),r1.forEach(i),N=w(l1),q=p(l1,"DIV",{class:!0});var V1=u(q);Z(I.$$.fragment,V1),V1.forEach(i),l1.forEach(i),K.forEach(i),this.h()},h(){_(A,"class","basemap svelte-o4psin"),_(F,"type","checkbox"),_(Y,"type","checkbox"),_(S,"class","output svelte-o4psin"),_(q,"class","code svelte-o4psin"),_(m,"class","row svelte-o4psin"),_(e,"class","example svelte-o4psin")},m(H,K){t1(H,e,K),a(e,s),a(s,t),a(e,r),a(e,l),a(l,o),a(e,c),a(e,d),a(d,$),a(e,L),a(e,v),a(v,U),a(e,T),a(e,y),a(y,g),a(e,b),a(e,m),a(m,S),a(S,A),W(R,A,null),a(S,E),a(S,V),a(V,O),a(V,F),F.checked=n[0],a(V,M),a(S,j),a(S,G),a(S,z),a(z,x),a(z,Y),Y.checked=n[1],a(m,N),a(m,q),W(I,q,null),h=!0,B||(e1=[v1(F,"change",n[9]),v1(Y,"change",n[10])],B=!0)},p(H,[K]){const o1={};K&2055&&(o1.$$scope={dirty:K,ctx:H}),R.$set(o1),K&1&&(F.checked=H[0]),K&2&&(Y.checked=H[1]);const s1={};K&2048&&(s1.$$scope={dirty:K,ctx:H}),I.$set(s1)},i(H){h||(D(R.$$.fragment,H),D(I.$$.fragment,H),h=!0)},o(H){J(R.$$.fragment,H),J(I.$$.fragment,H),h=!1},d(H){H&&i(e),X(R),X(I),B=!1,M1(e1)}}}const z7=n=>n.properties.RTO2017__1,J7=n=>n.properties.RTO2017__1;function q7(n,e,s){let t=!0,r=!1,l=[],o=j1().domain([5,15]);const c="<script>",d="<\/script>",$=(y,g)=>({fill:g?"blue":"grey","fill-opacity":o(y.properties.RTO2017__1.length),stroke:g?"blue":"grey","stroke-width":g?2:1,"vector-effect":"non-scaling-stroke"}),L=(y,g)=>({fill:g?"green":"grey","fill-opacity":o(y.properties.RTO2017__1.length),stroke:g?"green":"grey","stroke-width":g?2:1,"vector-effect":"non-scaling-stroke"});function v(y){l=y,s(2,l)}function U(){t=this.checked,s(0,t)}function T(){r=this.checked,s(1,r)}return[t,r,l,o,c,d,$,L,v,U,T]}class H7 extends f1{constructor(e){super();p1(this,e,q7,G7,u1,{})}}function U7(n){let e,s,t,r,l,o,c,d,$,L,v,U,T,y,g,b,m,S,A,R,E,V,O,F;return v=new o7({}),T=new C7({}),g=new I7({}),m=new v7({}),A=new u7({}),E=new L7({}),O=new H7({}),{c(){e=f("div"),s=f("a"),t=f("h1"),r=C("svelte-geo"),l=k(),o=f("h2"),c=C("A basic map library for svelte projects, built using "),d=f("a"),$=C("D3.js"),L=k(),Q(v.$$.fragment),U=k(),Q(T.$$.fragment),y=k(),Q(g.$$.fragment),b=k(),Q(m.$$.fragment),S=k(),Q(A.$$.fragment),R=k(),Q(E.$$.fragment),V=k(),Q(O.$$.fragment),this.h()},l(M){e=p(M,"DIV",{class:!0});var j=u(e);s=p(j,"A",{href:!0});var G=u(s);t=p(G,"H1",{});var z=u(t);r=P(z,"svelte-geo"),z.forEach(i),G.forEach(i),l=w(j),o=p(j,"H2",{});var x=u(o);c=P(x,"A basic map library for svelte projects, built using "),d=p(x,"A",{href:!0});var Y=u(d);$=P(Y,"D3.js"),Y.forEach(i),x.forEach(i),L=w(j),Z(v.$$.fragment,j),U=w(j),Z(T.$$.fragment,j),y=w(j),Z(g.$$.fragment,j),b=w(j),Z(m.$$.fragment,j),S=w(j),Z(A.$$.fragment,j),R=w(j),Z(E.$$.fragment,j),V=w(j),Z(O.$$.fragment,j),j.forEach(i),this.h()},h(){_(s,"href","https://github.com/Sarah-W/svelte-geo"),_(d,"href","https://d3js.org/"),_(e,"class","container svelte-1i7uuzv")},m(M,j){t1(M,e,j),a(e,s),a(s,t),a(t,r),a(e,l),a(e,o),a(o,c),a(o,d),a(d,$),a(e,L),W(v,e,null),a(e,U),W(T,e,null),a(e,y),W(g,e,null),a(e,b),W(m,e,null),a(e,S),W(A,e,null),a(e,R),W(E,e,null),a(e,V),W(O,e,null),F=!0},p:n1,i(M){F||(D(v.$$.fragment,M),D(T.$$.fragment,M),D(g.$$.fragment,M),D(m.$$.fragment,M),D(A.$$.fragment,M),D(E.$$.fragment,M),D(O.$$.fragment,M),F=!0)},o(M){J(v.$$.fragment,M),J(T.$$.fragment,M),J(g.$$.fragment,M),J(m.$$.fragment,M),J(A.$$.fragment,M),J(E.$$.fragment,M),J(O.$$.fragment,M),F=!1},d(M){M&&i(e),X(v),X(T),X(g),X(m),X(A),X(E),X(O)}}}class W7 extends f1{constructor(e){super();p1(this,e,null,U7,u1,{})}}export{W7 as default};
